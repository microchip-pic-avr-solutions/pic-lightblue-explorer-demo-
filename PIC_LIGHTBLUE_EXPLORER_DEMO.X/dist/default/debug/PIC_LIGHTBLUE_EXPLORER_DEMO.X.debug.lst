

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Dec 26 18:33:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF18456
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    32                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    33                           	psect	inittext,global,class=CODE,delta=2
    34                           	psect	clrtext,global,class=CODE,delta=2
    35                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    36                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    37                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    39                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    40                           	psect	text1,local,class=CODE,merge=1,delta=2
    41                           	psect	text2,local,class=CODE,merge=1,delta=2
    42                           	psect	text3,local,class=CODE,merge=1,delta=2
    43                           	psect	text4,local,class=CODE,merge=1,delta=2
    44                           	psect	text5,local,class=CODE,merge=1,delta=2
    45                           	psect	text6,local,class=CODE,merge=1,delta=2
    46                           	psect	text7,local,class=CODE,merge=1,delta=2
    47                           	psect	text8,local,class=CODE,merge=1,delta=2
    48                           	psect	text9,local,class=CODE,merge=1,delta=2
    49                           	psect	text10,local,class=CODE,merge=1,delta=2
    50                           	psect	text11,local,class=CODE,merge=1,delta=2
    51                           	psect	text12,local,class=CODE,merge=1,delta=2
    52                           	psect	text13,local,class=CODE,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,merge=1,delta=2
    54                           	psect	text15,local,class=CODE,merge=1,delta=2
    55                           	psect	text16,local,class=CODE,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,merge=1,delta=2
    57                           	psect	text18,local,class=CODE,merge=1,delta=2
    58                           	psect	text19,local,class=CODE,merge=1,delta=2
    59                           	psect	text20,local,class=CODE,merge=1,delta=2
    60                           	psect	text21,local,class=CODE,merge=1,delta=2
    61                           	psect	text22,local,class=CODE,merge=1,delta=2
    62                           	psect	text23,local,class=CODE,merge=1,delta=2
    63                           	psect	text24,local,class=CODE,merge=1,delta=2
    64                           	psect	text25,local,class=CODE,merge=1,delta=2
    65                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text34,local,class=CODE,merge=1,delta=2
    74                           	psect	text35,local,class=CODE,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text37,local,class=CODE,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,merge=1,delta=2
    80                           	psect	text41,local,class=CODE,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,merge=1,delta=2
    86                           	psect	text47,local,class=CODE,merge=1,delta=2
    87                           	psect	text48,local,class=CODE,merge=1,delta=2
    88                           	psect	text49,local,class=CODE,merge=1,delta=2
    89                           	psect	text50,local,class=CODE,merge=1,delta=2
    90                           	psect	text51,local,class=CODE,merge=1,delta=2
    91                           	psect	text52,local,class=CODE,merge=1,delta=2
    92                           	psect	text53,local,class=CODE,merge=1,delta=2
    93                           	psect	text54,local,class=CODE,merge=1,delta=2
    94                           	psect	text55,local,class=CODE,merge=1,delta=2
    95                           	psect	text56,local,class=CODE,merge=1,delta=2
    96                           	psect	text57,local,class=CODE,merge=1,delta=2
    97                           	psect	text58,local,class=CODE,merge=1,delta=2
    98                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text60,local,class=CODE,merge=1,delta=2
   100                           	psect	text61,local,class=CODE,merge=1,delta=2
   101                           	psect	text62,local,class=CODE,merge=1,delta=2
   102                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text64,local,class=CODE,merge=1,delta=2
   104                           	psect	text65,local,class=CODE,merge=1,delta=2
   105                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text67,local,class=CODE,merge=1,delta=2
   107                           	psect	text68,local,class=CODE,merge=1,delta=2
   108                           	psect	text69,local,class=CODE,merge=1,delta=2
   109                           	psect	text70,local,class=CODE,merge=1,delta=2
   110                           	psect	text71,local,class=CODE,merge=1,delta=2
   111                           	psect	text72,local,class=CODE,merge=1,delta=2
   112                           	psect	text73,local,class=CODE,merge=1,delta=2
   113                           	psect	text74,local,class=CODE,merge=1,delta=2
   114                           	psect	text75,local,class=CODE,merge=1,delta=2
   115                           	psect	text76,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text78,local,class=CODE,merge=1,delta=2
   118                           	psect	text79,local,class=CODE,merge=1,delta=2
   119                           	psect	text80,local,class=CODE,merge=1,delta=2
   120                           	psect	text81,local,class=CODE,merge=1,delta=2
   121                           	psect	text82,local,class=CODE,merge=1,delta=2
   122                           	psect	text83,local,class=CODE,merge=1,delta=2
   123                           	psect	text84,local,class=CODE,merge=1,delta=2
   124                           	psect	text85,local,class=CODE,merge=1,delta=2
   125                           	psect	text86,local,class=CODE,merge=1,delta=2
   126                           	psect	text87,local,class=CODE,merge=1,delta=2
   127                           	psect	text88,local,class=CODE,merge=1,delta=2
   128                           	psect	text89,local,class=CODE,merge=1,delta=2
   129                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   130                           	psect	text91,local,class=CODE,merge=1,delta=2
   131                           	psect	text92,local,class=CODE,merge=1,delta=2
   132                           	psect	text93,local,class=CODE,merge=1,delta=2
   133                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text96,local,class=CODE,merge=1,delta=2
   136                           	psect	text97,local,class=CODE,merge=1,delta=2
   137                           	psect	text98,local,class=CODE,merge=1,delta=2
   138                           	psect	text99,local,class=CODE,merge=1,delta=2
   139                           	psect	text100,local,class=CODE,merge=1,delta=2
   140                           	psect	text101,local,class=CODE,merge=1,delta=2
   141                           	psect	text102,local,class=CODE,merge=1,delta=2
   142                           	psect	text103,local,class=CODE,merge=1,delta=2
   143                           	psect	text104,local,class=CODE,merge=1,delta=2
   144                           	psect	text105,local,class=CODE,merge=1,delta=2
   145                           	psect	text106,local,class=CODE,merge=1,delta=2
   146                           	psect	text107,local,class=CODE,merge=1,delta=2
   147                           	psect	text108,local,class=CODE,merge=1,delta=2
   148                           	psect	text109,local,class=CODE,merge=1,delta=2
   149                           	psect	text110,local,class=CODE,merge=1,delta=2
   150                           	psect	text111,local,class=CODE,merge=1,delta=2
   151                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text118,local,class=CODE,merge=1,inline,delta=2
   158                           	psect	text119,local,class=CODE,merge=1,delta=2
   159                           	psect	text120,local,class=CODE,merge=1,delta=2
   160                           	psect	text121,local,class=CODE,merge=1,delta=2
   161                           	psect	text122,local,class=CODE,merge=1,delta=2
   162                           	psect	text123,local,class=CODE,merge=1,delta=2
   163                           	psect	text124,local,class=CODE,merge=1,delta=2
   164                           	psect	text125,local,class=CODE,merge=1,delta=2
   165                           	psect	text126,local,class=CODE,merge=1,delta=2
   166                           	psect	text127,local,class=CODE,merge=1,delta=2
   167                           	psect	text128,local,class=CODE,merge=1,delta=2
   168                           	psect	text129,local,class=CODE,merge=1,delta=2
   169                           	psect	text130,local,class=CODE,merge=1,delta=2
   170                           	psect	text131,local,class=CODE,merge=1,delta=2
   171                           	psect	text132,local,class=CODE,merge=1,delta=2
   172                           	psect	text133,local,class=CODE,merge=1,delta=2
   173                           	psect	text134,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	text135,local,class=CODE,merge=1,inline,delta=2
   175                           	psect	text136,local,class=CODE,merge=1,inline,delta=2
   176                           	psect	text137,local,class=CODE,merge=1,delta=2
   177                           	psect	text138,local,class=CODE,merge=1,inline,delta=2
   178                           	psect	text139,local,class=CODE,merge=1,inline,delta=2
   179                           	psect	text140,local,class=CODE,merge=1,inline,delta=2
   180                           	psect	intentry,global,class=CODE,delta=2
   181                           	psect	text142,local,class=CODE,merge=1,delta=2
   182                           	psect	text143,local,class=CODE,merge=1,delta=2
   183                           	psect	text144,local,class=CODE,merge=1,delta=2
   184                           	psect	text145,local,class=CODE,merge=1,delta=2
   185                           	psect	text146,local,class=CODE,merge=1,delta=2
   186                           	psect	text147,local,class=CODE,merge=1,delta=2
   187                           	psect	text148,local,class=CODE,merge=1,delta=2
   188                           	psect	text149,local,class=CODE,merge=1,delta=2
   189                           	psect	text150,local,class=CODE,merge=1,delta=2
   190                           	psect	text151,local,class=CODE,merge=1,delta=2
   191                           	psect	text152,local,class=CODE,merge=1,delta=2
   192                           	psect	text153,local,class=CODE,merge=1,delta=2
   193                           	psect	text154,local,class=CODE,merge=1,delta=2
   194                           	psect	text155,local,class=CODE,merge=1,delta=2
   195                           	psect	text156,local,class=CODE,merge=1,delta=2
   196                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   197                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   198                           	dabs	1,0x7E,2
   199     0000                     
   200                           ; Version 2.35
   201                           ; Generated 01/06/2021 GMT
   202                           ; 
   203                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   204                           ; All rights reserved.
   205                           ; 
   206                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   207                           ; 
   208                           ; Redistribution and use in source and binary forms, with or without modification, are
   209                           ; permitted provided that the following conditions are met:
   210                           ; 
   211                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   212                           ;        conditions and the following disclaimer.
   213                           ; 
   214                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   215                           ;        of conditions and the following disclaimer in the documentation and/or other
   216                           ;        materials provided with the distribution. Publication is not required when
   217                           ;        this file is used in an embedded application.
   218                           ; 
   219                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   220                           ;        software without specific prior written permission.
   221                           ; 
   222                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   223                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   224                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   225                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   226                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   227                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   228                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   229                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   230                           ; 
   231                           ; 
   232                           ; Code-generator required, PIC16LF18456 Definitions
   233                           ; 
   234                           ; SFR Addresses
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     0010                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0016                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001C                     	;# 
   259     008C                     	;# 
   260     008C                     	;# 
   261     008D                     	;# 
   262     008E                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0094                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009B                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009D                     	;# 
   285     009E                     	;# 
   286     009F                     	;# 
   287     010C                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     010F                     	;# 
   293     0110                     	;# 
   294     0111                     	;# 
   295     0112                     	;# 
   296     0113                     	;# 
   297     0114                     	;# 
   298     0115                     	;# 
   299     0116                     	;# 
   300     0117                     	;# 
   301     0118                     	;# 
   302     0119                     	;# 
   303     0119                     	;# 
   304     0119                     	;# 
   305     011A                     	;# 
   306     011A                     	;# 
   307     011A                     	;# 
   308     011B                     	;# 
   309     011B                     	;# 
   310     011B                     	;# 
   311     011B                     	;# 
   312     011B                     	;# 
   313     011C                     	;# 
   314     011C                     	;# 
   315     011C                     	;# 
   316     011D                     	;# 
   317     011D                     	;# 
   318     011D                     	;# 
   319     011E                     	;# 
   320     011E                     	;# 
   321     011E                     	;# 
   322     011F                     	;# 
   323     011F                     	;# 
   324     011F                     	;# 
   325     011F                     	;# 
   326     011F                     	;# 
   327     018C                     	;# 
   328     018D                     	;# 
   329     018E                     	;# 
   330     018F                     	;# 
   331     0190                     	;# 
   332     0191                     	;# 
   333     0192                     	;# 
   334     0196                     	;# 
   335     0197                     	;# 
   336     0198                     	;# 
   337     0199                     	;# 
   338     019A                     	;# 
   339     019B                     	;# 
   340     019C                     	;# 
   341     020C                     	;# 
   342     020D                     	;# 
   343     020E                     	;# 
   344     020E                     	;# 
   345     020F                     	;# 
   346     020F                     	;# 
   347     0210                     	;# 
   348     0210                     	;# 
   349     0211                     	;# 
   350     0211                     	;# 
   351     0212                     	;# 
   352     0213                     	;# 
   353     0214                     	;# 
   354     0214                     	;# 
   355     0215                     	;# 
   356     0215                     	;# 
   357     0216                     	;# 
   358     0216                     	;# 
   359     0217                     	;# 
   360     0217                     	;# 
   361     0218                     	;# 
   362     0219                     	;# 
   363     021A                     	;# 
   364     021A                     	;# 
   365     021B                     	;# 
   366     021B                     	;# 
   367     021C                     	;# 
   368     021C                     	;# 
   369     021D                     	;# 
   370     021D                     	;# 
   371     021E                     	;# 
   372     021F                     	;# 
   373     028C                     	;# 
   374     028C                     	;# 
   375     028D                     	;# 
   376     028D                     	;# 
   377     028E                     	;# 
   378     028F                     	;# 
   379     0290                     	;# 
   380     0291                     	;# 
   381     0292                     	;# 
   382     0292                     	;# 
   383     0293                     	;# 
   384     0293                     	;# 
   385     0294                     	;# 
   386     0295                     	;# 
   387     0296                     	;# 
   388     0297                     	;# 
   389     0298                     	;# 
   390     0298                     	;# 
   391     0299                     	;# 
   392     0299                     	;# 
   393     029A                     	;# 
   394     029B                     	;# 
   395     029C                     	;# 
   396     029D                     	;# 
   397     029F                     	;# 
   398     030C                     	;# 
   399     030C                     	;# 
   400     030D                     	;# 
   401     030E                     	;# 
   402     030F                     	;# 
   403     0310                     	;# 
   404     0310                     	;# 
   405     0311                     	;# 
   406     0312                     	;# 
   407     0313                     	;# 
   408     0314                     	;# 
   409     0314                     	;# 
   410     0315                     	;# 
   411     0316                     	;# 
   412     0317                     	;# 
   413     0318                     	;# 
   414     0318                     	;# 
   415     0319                     	;# 
   416     031A                     	;# 
   417     031B                     	;# 
   418     031C                     	;# 
   419     031C                     	;# 
   420     031D                     	;# 
   421     031E                     	;# 
   422     031F                     	;# 
   423     038C                     	;# 
   424     038C                     	;# 
   425     038D                     	;# 
   426     038E                     	;# 
   427     0390                     	;# 
   428     0390                     	;# 
   429     0391                     	;# 
   430     0392                     	;# 
   431     048C                     	;# 
   432     048C                     	;# 
   433     048D                     	;# 
   434     048E                     	;# 
   435     048F                     	;# 
   436     048F                     	;# 
   437     0490                     	;# 
   438     0491                     	;# 
   439     0492                     	;# 
   440     0492                     	;# 
   441     0493                     	;# 
   442     0494                     	;# 
   443     0495                     	;# 
   444     0495                     	;# 
   445     0496                     	;# 
   446     0497                     	;# 
   447     0498                     	;# 
   448     0499                     	;# 
   449     049A                     	;# 
   450     049B                     	;# 
   451     049C                     	;# 
   452     049D                     	;# 
   453     050C                     	;# 
   454     050C                     	;# 
   455     050D                     	;# 
   456     050E                     	;# 
   457     050F                     	;# 
   458     050F                     	;# 
   459     0510                     	;# 
   460     0511                     	;# 
   461     0512                     	;# 
   462     0512                     	;# 
   463     0513                     	;# 
   464     0514                     	;# 
   465     0515                     	;# 
   466     0515                     	;# 
   467     0516                     	;# 
   468     0517                     	;# 
   469     0518                     	;# 
   470     0519                     	;# 
   471     051A                     	;# 
   472     051B                     	;# 
   473     051C                     	;# 
   474     051D                     	;# 
   475     058C                     	;# 
   476     058C                     	;# 
   477     058D                     	;# 
   478     058E                     	;# 
   479     058F                     	;# 
   480     058F                     	;# 
   481     0590                     	;# 
   482     0591                     	;# 
   483     0592                     	;# 
   484     0593                     	;# 
   485     059C                     	;# 
   486     059C                     	;# 
   487     059D                     	;# 
   488     059D                     	;# 
   489     059E                     	;# 
   490     059F                     	;# 
   491     060C                     	;# 
   492     060C                     	;# 
   493     060D                     	;# 
   494     060D                     	;# 
   495     060E                     	;# 
   496     060F                     	;# 
   497     0610                     	;# 
   498     0611                     	;# 
   499     0612                     	;# 
   500     0613                     	;# 
   501     0614                     	;# 
   502     0616                     	;# 
   503     0616                     	;# 
   504     0617                     	;# 
   505     0617                     	;# 
   506     0618                     	;# 
   507     0619                     	;# 
   508     061A                     	;# 
   509     061B                     	;# 
   510     061C                     	;# 
   511     061D                     	;# 
   512     061E                     	;# 
   513     068C                     	;# 
   514     068D                     	;# 
   515     068E                     	;# 
   516     068F                     	;# 
   517     0690                     	;# 
   518     0691                     	;# 
   519     0692                     	;# 
   520     0693                     	;# 
   521     0694                     	;# 
   522     070C                     	;# 
   523     070D                     	;# 
   524     070E                     	;# 
   525     070F                     	;# 
   526     0710                     	;# 
   527     0711                     	;# 
   528     0712                     	;# 
   529     0713                     	;# 
   530     0714                     	;# 
   531     0716                     	;# 
   532     0717                     	;# 
   533     0718                     	;# 
   534     0719                     	;# 
   535     071A                     	;# 
   536     071B                     	;# 
   537     071C                     	;# 
   538     071D                     	;# 
   539     071E                     	;# 
   540     0796                     	;# 
   541     0797                     	;# 
   542     0798                     	;# 
   543     0799                     	;# 
   544     079A                     	;# 
   545     079B                     	;# 
   546     079C                     	;# 
   547     079D                     	;# 
   548     080C                     	;# 
   549     080D                     	;# 
   550     080E                     	;# 
   551     080F                     	;# 
   552     0810                     	;# 
   553     0811                     	;# 
   554     0813                     	;# 
   555     0814                     	;# 
   556     081A                     	;# 
   557     081A                     	;# 
   558     081B                     	;# 
   559     081C                     	;# 
   560     081C                     	;# 
   561     081D                     	;# 
   562     081E                     	;# 
   563     081F                     	;# 
   564     088C                     	;# 
   565     088D                     	;# 
   566     088E                     	;# 
   567     088F                     	;# 
   568     0890                     	;# 
   569     0891                     	;# 
   570     0892                     	;# 
   571     0893                     	;# 
   572     0895                     	;# 
   573     0896                     	;# 
   574     0897                     	;# 
   575     0898                     	;# 
   576     0899                     	;# 
   577     089A                     	;# 
   578     089B                     	;# 
   579     090C                     	;# 
   580     090E                     	;# 
   581     090F                     	;# 
   582     091F                     	;# 
   583     098F                     	;# 
   584     098F                     	;# 
   585     0990                     	;# 
   586     0991                     	;# 
   587     0992                     	;# 
   588     0993                     	;# 
   589     0994                     	;# 
   590     0995                     	;# 
   591     0996                     	;# 
   592     0997                     	;# 
   593     0A19                     	;# 
   594     0A19                     	;# 
   595     0A1A                     	;# 
   596     0A1A                     	;# 
   597     0A1B                     	;# 
   598     0A1B                     	;# 
   599     0A1B                     	;# 
   600     0A1C                     	;# 
   601     0A1C                     	;# 
   602     0A1D                     	;# 
   603     0A1D                     	;# 
   604     0A1E                     	;# 
   605     0A1E                     	;# 
   606     0A1F                     	;# 
   607     0A1F                     	;# 
   608     0A1F                     	;# 
   609     1E0F                     	;# 
   610     1E10                     	;# 
   611     1E11                     	;# 
   612     1E12                     	;# 
   613     1E13                     	;# 
   614     1E14                     	;# 
   615     1E15                     	;# 
   616     1E16                     	;# 
   617     1E17                     	;# 
   618     1E18                     	;# 
   619     1E19                     	;# 
   620     1E1A                     	;# 
   621     1E1B                     	;# 
   622     1E1C                     	;# 
   623     1E1D                     	;# 
   624     1E1E                     	;# 
   625     1E1F                     	;# 
   626     1E20                     	;# 
   627     1E21                     	;# 
   628     1E22                     	;# 
   629     1E23                     	;# 
   630     1E24                     	;# 
   631     1E25                     	;# 
   632     1E26                     	;# 
   633     1E27                     	;# 
   634     1E28                     	;# 
   635     1E29                     	;# 
   636     1E2A                     	;# 
   637     1E2B                     	;# 
   638     1E2C                     	;# 
   639     1E2D                     	;# 
   640     1E2E                     	;# 
   641     1E2F                     	;# 
   642     1E30                     	;# 
   643     1E31                     	;# 
   644     1E32                     	;# 
   645     1E33                     	;# 
   646     1E34                     	;# 
   647     1E35                     	;# 
   648     1E36                     	;# 
   649     1E37                     	;# 
   650     1E8F                     	;# 
   651     1E90                     	;# 
   652     1E91                     	;# 
   653     1E92                     	;# 
   654     1E93                     	;# 
   655     1E94                     	;# 
   656     1E95                     	;# 
   657     1E96                     	;# 
   658     1E97                     	;# 
   659     1E9C                     	;# 
   660     1E9D                     	;# 
   661     1E9E                     	;# 
   662     1EA1                     	;# 
   663     1EA2                     	;# 
   664     1EA3                     	;# 
   665     1EA4                     	;# 
   666     1EA5                     	;# 
   667     1EA9                     	;# 
   668     1EAA                     	;# 
   669     1EAB                     	;# 
   670     1EAC                     	;# 
   671     1EB1                     	;# 
   672     1EB2                     	;# 
   673     1EB3                     	;# 
   674     1EB8                     	;# 
   675     1EB9                     	;# 
   676     1EBA                     	;# 
   677     1EBB                     	;# 
   678     1EBC                     	;# 
   679     1EBD                     	;# 
   680     1EBE                     	;# 
   681     1EC3                     	;# 
   682     1EC5                     	;# 
   683     1EC6                     	;# 
   684     1EC7                     	;# 
   685     1EC8                     	;# 
   686     1EC9                     	;# 
   687     1ECA                     	;# 
   688     1ECB                     	;# 
   689     1ECC                     	;# 
   690     1ECD                     	;# 
   691     1ECE                     	;# 
   692     1F10                     	;# 
   693     1F11                     	;# 
   694     1F12                     	;# 
   695     1F13                     	;# 
   696     1F14                     	;# 
   697     1F15                     	;# 
   698     1F16                     	;# 
   699     1F17                     	;# 
   700     1F18                     	;# 
   701     1F19                     	;# 
   702     1F1A                     	;# 
   703     1F1B                     	;# 
   704     1F1C                     	;# 
   705     1F1D                     	;# 
   706     1F1E                     	;# 
   707     1F1F                     	;# 
   708     1F20                     	;# 
   709     1F21                     	;# 
   710     1F22                     	;# 
   711     1F23                     	;# 
   712     1F24                     	;# 
   713     1F25                     	;# 
   714     1F26                     	;# 
   715     1F27                     	;# 
   716     1F38                     	;# 
   717     1F39                     	;# 
   718     1F3A                     	;# 
   719     1F3B                     	;# 
   720     1F3C                     	;# 
   721     1F3D                     	;# 
   722     1F3E                     	;# 
   723     1F3F                     	;# 
   724     1F43                     	;# 
   725     1F44                     	;# 
   726     1F45                     	;# 
   727     1F46                     	;# 
   728     1F47                     	;# 
   729     1F48                     	;# 
   730     1F49                     	;# 
   731     1F4A                     	;# 
   732     1F4E                     	;# 
   733     1F4F                     	;# 
   734     1F50                     	;# 
   735     1F51                     	;# 
   736     1F52                     	;# 
   737     1F53                     	;# 
   738     1F54                     	;# 
   739     1F55                     	;# 
   740     1F65                     	;# 
   741     1F66                     	;# 
   742     1F67                     	;# 
   743     1F68                     	;# 
   744     1F69                     	;# 
   745     1F6A                     	;# 
   746     1F6B                     	;# 
   747     1FE4                     	;# 
   748     1FE5                     	;# 
   749     1FE6                     	;# 
   750     1FE7                     	;# 
   751     1FE8                     	;# 
   752     1FE8                     	;# 
   753     1FE9                     	;# 
   754     1FEA                     	;# 
   755     1FEB                     	;# 
   756     1FED                     	;# 
   757     1FEE                     	;# 
   758     1FEF                     	;# 
   759     0000                     	;# 
   760     0001                     	;# 
   761     0002                     	;# 
   762     0003                     	;# 
   763     0004                     	;# 
   764     0005                     	;# 
   765     0006                     	;# 
   766     0007                     	;# 
   767     0008                     	;# 
   768     0009                     	;# 
   769     000A                     	;# 
   770     000B                     	;# 
   771     000C                     	;# 
   772     000D                     	;# 
   773     000E                     	;# 
   774     0010                     	;# 
   775     0012                     	;# 
   776     0013                     	;# 
   777     0014                     	;# 
   778     0016                     	;# 
   779     0018                     	;# 
   780     0019                     	;# 
   781     001A                     	;# 
   782     001C                     	;# 
   783     008C                     	;# 
   784     008C                     	;# 
   785     008D                     	;# 
   786     008E                     	;# 
   787     008E                     	;# 
   788     008F                     	;# 
   789     0090                     	;# 
   790     0090                     	;# 
   791     0091                     	;# 
   792     0092                     	;# 
   793     0092                     	;# 
   794     0093                     	;# 
   795     0094                     	;# 
   796     0094                     	;# 
   797     0095                     	;# 
   798     0096                     	;# 
   799     0096                     	;# 
   800     0097                     	;# 
   801     0098                     	;# 
   802     0099                     	;# 
   803     009A                     	;# 
   804     009B                     	;# 
   805     009B                     	;# 
   806     009C                     	;# 
   807     009D                     	;# 
   808     009D                     	;# 
   809     009E                     	;# 
   810     009F                     	;# 
   811     010C                     	;# 
   812     010C                     	;# 
   813     010D                     	;# 
   814     010E                     	;# 
   815     010F                     	;# 
   816     010F                     	;# 
   817     0110                     	;# 
   818     0111                     	;# 
   819     0112                     	;# 
   820     0113                     	;# 
   821     0114                     	;# 
   822     0115                     	;# 
   823     0116                     	;# 
   824     0117                     	;# 
   825     0118                     	;# 
   826     0119                     	;# 
   827     0119                     	;# 
   828     0119                     	;# 
   829     011A                     	;# 
   830     011A                     	;# 
   831     011A                     	;# 
   832     011B                     	;# 
   833     011B                     	;# 
   834     011B                     	;# 
   835     011B                     	;# 
   836     011B                     	;# 
   837     011C                     	;# 
   838     011C                     	;# 
   839     011C                     	;# 
   840     011D                     	;# 
   841     011D                     	;# 
   842     011D                     	;# 
   843     011E                     	;# 
   844     011E                     	;# 
   845     011E                     	;# 
   846     011F                     	;# 
   847     011F                     	;# 
   848     011F                     	;# 
   849     011F                     	;# 
   850     011F                     	;# 
   851     018C                     	;# 
   852     018D                     	;# 
   853     018E                     	;# 
   854     018F                     	;# 
   855     0190                     	;# 
   856     0191                     	;# 
   857     0192                     	;# 
   858     0196                     	;# 
   859     0197                     	;# 
   860     0198                     	;# 
   861     0199                     	;# 
   862     019A                     	;# 
   863     019B                     	;# 
   864     019C                     	;# 
   865     020C                     	;# 
   866     020D                     	;# 
   867     020E                     	;# 
   868     020E                     	;# 
   869     020F                     	;# 
   870     020F                     	;# 
   871     0210                     	;# 
   872     0210                     	;# 
   873     0211                     	;# 
   874     0211                     	;# 
   875     0212                     	;# 
   876     0213                     	;# 
   877     0214                     	;# 
   878     0214                     	;# 
   879     0215                     	;# 
   880     0215                     	;# 
   881     0216                     	;# 
   882     0216                     	;# 
   883     0217                     	;# 
   884     0217                     	;# 
   885     0218                     	;# 
   886     0219                     	;# 
   887     021A                     	;# 
   888     021A                     	;# 
   889     021B                     	;# 
   890     021B                     	;# 
   891     021C                     	;# 
   892     021C                     	;# 
   893     021D                     	;# 
   894     021D                     	;# 
   895     021E                     	;# 
   896     021F                     	;# 
   897     028C                     	;# 
   898     028C                     	;# 
   899     028D                     	;# 
   900     028D                     	;# 
   901     028E                     	;# 
   902     028F                     	;# 
   903     0290                     	;# 
   904     0291                     	;# 
   905     0292                     	;# 
   906     0292                     	;# 
   907     0293                     	;# 
   908     0293                     	;# 
   909     0294                     	;# 
   910     0295                     	;# 
   911     0296                     	;# 
   912     0297                     	;# 
   913     0298                     	;# 
   914     0298                     	;# 
   915     0299                     	;# 
   916     0299                     	;# 
   917     029A                     	;# 
   918     029B                     	;# 
   919     029C                     	;# 
   920     029D                     	;# 
   921     029F                     	;# 
   922     030C                     	;# 
   923     030C                     	;# 
   924     030D                     	;# 
   925     030E                     	;# 
   926     030F                     	;# 
   927     0310                     	;# 
   928     0310                     	;# 
   929     0311                     	;# 
   930     0312                     	;# 
   931     0313                     	;# 
   932     0314                     	;# 
   933     0314                     	;# 
   934     0315                     	;# 
   935     0316                     	;# 
   936     0317                     	;# 
   937     0318                     	;# 
   938     0318                     	;# 
   939     0319                     	;# 
   940     031A                     	;# 
   941     031B                     	;# 
   942     031C                     	;# 
   943     031C                     	;# 
   944     031D                     	;# 
   945     031E                     	;# 
   946     031F                     	;# 
   947     038C                     	;# 
   948     038C                     	;# 
   949     038D                     	;# 
   950     038E                     	;# 
   951     0390                     	;# 
   952     0390                     	;# 
   953     0391                     	;# 
   954     0392                     	;# 
   955     048C                     	;# 
   956     048C                     	;# 
   957     048D                     	;# 
   958     048E                     	;# 
   959     048F                     	;# 
   960     048F                     	;# 
   961     0490                     	;# 
   962     0491                     	;# 
   963     0492                     	;# 
   964     0492                     	;# 
   965     0493                     	;# 
   966     0494                     	;# 
   967     0495                     	;# 
   968     0495                     	;# 
   969     0496                     	;# 
   970     0497                     	;# 
   971     0498                     	;# 
   972     0499                     	;# 
   973     049A                     	;# 
   974     049B                     	;# 
   975     049C                     	;# 
   976     049D                     	;# 
   977     050C                     	;# 
   978     050C                     	;# 
   979     050D                     	;# 
   980     050E                     	;# 
   981     050F                     	;# 
   982     050F                     	;# 
   983     0510                     	;# 
   984     0511                     	;# 
   985     0512                     	;# 
   986     0512                     	;# 
   987     0513                     	;# 
   988     0514                     	;# 
   989     0515                     	;# 
   990     0515                     	;# 
   991     0516                     	;# 
   992     0517                     	;# 
   993     0518                     	;# 
   994     0519                     	;# 
   995     051A                     	;# 
   996     051B                     	;# 
   997     051C                     	;# 
   998     051D                     	;# 
   999     058C                     	;# 
  1000     058C                     	;# 
  1001     058D                     	;# 
  1002     058E                     	;# 
  1003     058F                     	;# 
  1004     058F                     	;# 
  1005     0590                     	;# 
  1006     0591                     	;# 
  1007     0592                     	;# 
  1008     0593                     	;# 
  1009     059C                     	;# 
  1010     059C                     	;# 
  1011     059D                     	;# 
  1012     059D                     	;# 
  1013     059E                     	;# 
  1014     059F                     	;# 
  1015     060C                     	;# 
  1016     060C                     	;# 
  1017     060D                     	;# 
  1018     060D                     	;# 
  1019     060E                     	;# 
  1020     060F                     	;# 
  1021     0610                     	;# 
  1022     0611                     	;# 
  1023     0612                     	;# 
  1024     0613                     	;# 
  1025     0614                     	;# 
  1026     0616                     	;# 
  1027     0616                     	;# 
  1028     0617                     	;# 
  1029     0617                     	;# 
  1030     0618                     	;# 
  1031     0619                     	;# 
  1032     061A                     	;# 
  1033     061B                     	;# 
  1034     061C                     	;# 
  1035     061D                     	;# 
  1036     061E                     	;# 
  1037     068C                     	;# 
  1038     068D                     	;# 
  1039     068E                     	;# 
  1040     068F                     	;# 
  1041     0690                     	;# 
  1042     0691                     	;# 
  1043     0692                     	;# 
  1044     0693                     	;# 
  1045     0694                     	;# 
  1046     070C                     	;# 
  1047     070D                     	;# 
  1048     070E                     	;# 
  1049     070F                     	;# 
  1050     0710                     	;# 
  1051     0711                     	;# 
  1052     0712                     	;# 
  1053     0713                     	;# 
  1054     0714                     	;# 
  1055     0716                     	;# 
  1056     0717                     	;# 
  1057     0718                     	;# 
  1058     0719                     	;# 
  1059     071A                     	;# 
  1060     071B                     	;# 
  1061     071C                     	;# 
  1062     071D                     	;# 
  1063     071E                     	;# 
  1064     0796                     	;# 
  1065     0797                     	;# 
  1066     0798                     	;# 
  1067     0799                     	;# 
  1068     079A                     	;# 
  1069     079B                     	;# 
  1070     079C                     	;# 
  1071     079D                     	;# 
  1072     080C                     	;# 
  1073     080D                     	;# 
  1074     080E                     	;# 
  1075     080F                     	;# 
  1076     0810                     	;# 
  1077     0811                     	;# 
  1078     0813                     	;# 
  1079     0814                     	;# 
  1080     081A                     	;# 
  1081     081A                     	;# 
  1082     081B                     	;# 
  1083     081C                     	;# 
  1084     081C                     	;# 
  1085     081D                     	;# 
  1086     081E                     	;# 
  1087     081F                     	;# 
  1088     088C                     	;# 
  1089     088D                     	;# 
  1090     088E                     	;# 
  1091     088F                     	;# 
  1092     0890                     	;# 
  1093     0891                     	;# 
  1094     0892                     	;# 
  1095     0893                     	;# 
  1096     0895                     	;# 
  1097     0896                     	;# 
  1098     0897                     	;# 
  1099     0898                     	;# 
  1100     0899                     	;# 
  1101     089A                     	;# 
  1102     089B                     	;# 
  1103     090C                     	;# 
  1104     090E                     	;# 
  1105     090F                     	;# 
  1106     091F                     	;# 
  1107     098F                     	;# 
  1108     098F                     	;# 
  1109     0990                     	;# 
  1110     0991                     	;# 
  1111     0992                     	;# 
  1112     0993                     	;# 
  1113     0994                     	;# 
  1114     0995                     	;# 
  1115     0996                     	;# 
  1116     0997                     	;# 
  1117     0A19                     	;# 
  1118     0A19                     	;# 
  1119     0A1A                     	;# 
  1120     0A1A                     	;# 
  1121     0A1B                     	;# 
  1122     0A1B                     	;# 
  1123     0A1B                     	;# 
  1124     0A1C                     	;# 
  1125     0A1C                     	;# 
  1126     0A1D                     	;# 
  1127     0A1D                     	;# 
  1128     0A1E                     	;# 
  1129     0A1E                     	;# 
  1130     0A1F                     	;# 
  1131     0A1F                     	;# 
  1132     0A1F                     	;# 
  1133     1E0F                     	;# 
  1134     1E10                     	;# 
  1135     1E11                     	;# 
  1136     1E12                     	;# 
  1137     1E13                     	;# 
  1138     1E14                     	;# 
  1139     1E15                     	;# 
  1140     1E16                     	;# 
  1141     1E17                     	;# 
  1142     1E18                     	;# 
  1143     1E19                     	;# 
  1144     1E1A                     	;# 
  1145     1E1B                     	;# 
  1146     1E1C                     	;# 
  1147     1E1D                     	;# 
  1148     1E1E                     	;# 
  1149     1E1F                     	;# 
  1150     1E20                     	;# 
  1151     1E21                     	;# 
  1152     1E22                     	;# 
  1153     1E23                     	;# 
  1154     1E24                     	;# 
  1155     1E25                     	;# 
  1156     1E26                     	;# 
  1157     1E27                     	;# 
  1158     1E28                     	;# 
  1159     1E29                     	;# 
  1160     1E2A                     	;# 
  1161     1E2B                     	;# 
  1162     1E2C                     	;# 
  1163     1E2D                     	;# 
  1164     1E2E                     	;# 
  1165     1E2F                     	;# 
  1166     1E30                     	;# 
  1167     1E31                     	;# 
  1168     1E32                     	;# 
  1169     1E33                     	;# 
  1170     1E34                     	;# 
  1171     1E35                     	;# 
  1172     1E36                     	;# 
  1173     1E37                     	;# 
  1174     1E8F                     	;# 
  1175     1E90                     	;# 
  1176     1E91                     	;# 
  1177     1E92                     	;# 
  1178     1E93                     	;# 
  1179     1E94                     	;# 
  1180     1E95                     	;# 
  1181     1E96                     	;# 
  1182     1E97                     	;# 
  1183     1E9C                     	;# 
  1184     1E9D                     	;# 
  1185     1E9E                     	;# 
  1186     1EA1                     	;# 
  1187     1EA2                     	;# 
  1188     1EA3                     	;# 
  1189     1EA4                     	;# 
  1190     1EA5                     	;# 
  1191     1EA9                     	;# 
  1192     1EAA                     	;# 
  1193     1EAB                     	;# 
  1194     1EAC                     	;# 
  1195     1EB1                     	;# 
  1196     1EB2                     	;# 
  1197     1EB3                     	;# 
  1198     1EB8                     	;# 
  1199     1EB9                     	;# 
  1200     1EBA                     	;# 
  1201     1EBB                     	;# 
  1202     1EBC                     	;# 
  1203     1EBD                     	;# 
  1204     1EBE                     	;# 
  1205     1EC3                     	;# 
  1206     1EC5                     	;# 
  1207     1EC6                     	;# 
  1208     1EC7                     	;# 
  1209     1EC8                     	;# 
  1210     1EC9                     	;# 
  1211     1ECA                     	;# 
  1212     1ECB                     	;# 
  1213     1ECC                     	;# 
  1214     1ECD                     	;# 
  1215     1ECE                     	;# 
  1216     1F10                     	;# 
  1217     1F11                     	;# 
  1218     1F12                     	;# 
  1219     1F13                     	;# 
  1220     1F14                     	;# 
  1221     1F15                     	;# 
  1222     1F16                     	;# 
  1223     1F17                     	;# 
  1224     1F18                     	;# 
  1225     1F19                     	;# 
  1226     1F1A                     	;# 
  1227     1F1B                     	;# 
  1228     1F1C                     	;# 
  1229     1F1D                     	;# 
  1230     1F1E                     	;# 
  1231     1F1F                     	;# 
  1232     1F20                     	;# 
  1233     1F21                     	;# 
  1234     1F22                     	;# 
  1235     1F23                     	;# 
  1236     1F24                     	;# 
  1237     1F25                     	;# 
  1238     1F26                     	;# 
  1239     1F27                     	;# 
  1240     1F38                     	;# 
  1241     1F39                     	;# 
  1242     1F3A                     	;# 
  1243     1F3B                     	;# 
  1244     1F3C                     	;# 
  1245     1F3D                     	;# 
  1246     1F3E                     	;# 
  1247     1F3F                     	;# 
  1248     1F43                     	;# 
  1249     1F44                     	;# 
  1250     1F45                     	;# 
  1251     1F46                     	;# 
  1252     1F47                     	;# 
  1253     1F48                     	;# 
  1254     1F49                     	;# 
  1255     1F4A                     	;# 
  1256     1F4E                     	;# 
  1257     1F4F                     	;# 
  1258     1F50                     	;# 
  1259     1F51                     	;# 
  1260     1F52                     	;# 
  1261     1F53                     	;# 
  1262     1F54                     	;# 
  1263     1F55                     	;# 
  1264     1F65                     	;# 
  1265     1F66                     	;# 
  1266     1F67                     	;# 
  1267     1F68                     	;# 
  1268     1F69                     	;# 
  1269     1F6A                     	;# 
  1270     1F6B                     	;# 
  1271     1FE4                     	;# 
  1272     1FE5                     	;# 
  1273     1FE6                     	;# 
  1274     1FE7                     	;# 
  1275     1FE8                     	;# 
  1276     1FE8                     	;# 
  1277     1FE9                     	;# 
  1278     1FEA                     	;# 
  1279     1FEB                     	;# 
  1280     1FED                     	;# 
  1281     1FEE                     	;# 
  1282     1FEF                     	;# 
  1283     0000                     	;# 
  1284     0001                     	;# 
  1285     0002                     	;# 
  1286     0003                     	;# 
  1287     0004                     	;# 
  1288     0005                     	;# 
  1289     0006                     	;# 
  1290     0007                     	;# 
  1291     0008                     	;# 
  1292     0009                     	;# 
  1293     000A                     	;# 
  1294     000B                     	;# 
  1295     000C                     	;# 
  1296     000D                     	;# 
  1297     000E                     	;# 
  1298     0010                     	;# 
  1299     0012                     	;# 
  1300     0013                     	;# 
  1301     0014                     	;# 
  1302     0016                     	;# 
  1303     0018                     	;# 
  1304     0019                     	;# 
  1305     001A                     	;# 
  1306     001C                     	;# 
  1307     008C                     	;# 
  1308     008C                     	;# 
  1309     008D                     	;# 
  1310     008E                     	;# 
  1311     008E                     	;# 
  1312     008F                     	;# 
  1313     0090                     	;# 
  1314     0090                     	;# 
  1315     0091                     	;# 
  1316     0092                     	;# 
  1317     0092                     	;# 
  1318     0093                     	;# 
  1319     0094                     	;# 
  1320     0094                     	;# 
  1321     0095                     	;# 
  1322     0096                     	;# 
  1323     0096                     	;# 
  1324     0097                     	;# 
  1325     0098                     	;# 
  1326     0099                     	;# 
  1327     009A                     	;# 
  1328     009B                     	;# 
  1329     009B                     	;# 
  1330     009C                     	;# 
  1331     009D                     	;# 
  1332     009D                     	;# 
  1333     009E                     	;# 
  1334     009F                     	;# 
  1335     010C                     	;# 
  1336     010C                     	;# 
  1337     010D                     	;# 
  1338     010E                     	;# 
  1339     010F                     	;# 
  1340     010F                     	;# 
  1341     0110                     	;# 
  1342     0111                     	;# 
  1343     0112                     	;# 
  1344     0113                     	;# 
  1345     0114                     	;# 
  1346     0115                     	;# 
  1347     0116                     	;# 
  1348     0117                     	;# 
  1349     0118                     	;# 
  1350     0119                     	;# 
  1351     0119                     	;# 
  1352     0119                     	;# 
  1353     011A                     	;# 
  1354     011A                     	;# 
  1355     011A                     	;# 
  1356     011B                     	;# 
  1357     011B                     	;# 
  1358     011B                     	;# 
  1359     011B                     	;# 
  1360     011B                     	;# 
  1361     011C                     	;# 
  1362     011C                     	;# 
  1363     011C                     	;# 
  1364     011D                     	;# 
  1365     011D                     	;# 
  1366     011D                     	;# 
  1367     011E                     	;# 
  1368     011E                     	;# 
  1369     011E                     	;# 
  1370     011F                     	;# 
  1371     011F                     	;# 
  1372     011F                     	;# 
  1373     011F                     	;# 
  1374     011F                     	;# 
  1375     018C                     	;# 
  1376     018D                     	;# 
  1377     018E                     	;# 
  1378     018F                     	;# 
  1379     0190                     	;# 
  1380     0191                     	;# 
  1381     0192                     	;# 
  1382     0196                     	;# 
  1383     0197                     	;# 
  1384     0198                     	;# 
  1385     0199                     	;# 
  1386     019A                     	;# 
  1387     019B                     	;# 
  1388     019C                     	;# 
  1389     020C                     	;# 
  1390     020D                     	;# 
  1391     020E                     	;# 
  1392     020E                     	;# 
  1393     020F                     	;# 
  1394     020F                     	;# 
  1395     0210                     	;# 
  1396     0210                     	;# 
  1397     0211                     	;# 
  1398     0211                     	;# 
  1399     0212                     	;# 
  1400     0213                     	;# 
  1401     0214                     	;# 
  1402     0214                     	;# 
  1403     0215                     	;# 
  1404     0215                     	;# 
  1405     0216                     	;# 
  1406     0216                     	;# 
  1407     0217                     	;# 
  1408     0217                     	;# 
  1409     0218                     	;# 
  1410     0219                     	;# 
  1411     021A                     	;# 
  1412     021A                     	;# 
  1413     021B                     	;# 
  1414     021B                     	;# 
  1415     021C                     	;# 
  1416     021C                     	;# 
  1417     021D                     	;# 
  1418     021D                     	;# 
  1419     021E                     	;# 
  1420     021F                     	;# 
  1421     028C                     	;# 
  1422     028C                     	;# 
  1423     028D                     	;# 
  1424     028D                     	;# 
  1425     028E                     	;# 
  1426     028F                     	;# 
  1427     0290                     	;# 
  1428     0291                     	;# 
  1429     0292                     	;# 
  1430     0292                     	;# 
  1431     0293                     	;# 
  1432     0293                     	;# 
  1433     0294                     	;# 
  1434     0295                     	;# 
  1435     0296                     	;# 
  1436     0297                     	;# 
  1437     0298                     	;# 
  1438     0298                     	;# 
  1439     0299                     	;# 
  1440     0299                     	;# 
  1441     029A                     	;# 
  1442     029B                     	;# 
  1443     029C                     	;# 
  1444     029D                     	;# 
  1445     029F                     	;# 
  1446     030C                     	;# 
  1447     030C                     	;# 
  1448     030D                     	;# 
  1449     030E                     	;# 
  1450     030F                     	;# 
  1451     0310                     	;# 
  1452     0310                     	;# 
  1453     0311                     	;# 
  1454     0312                     	;# 
  1455     0313                     	;# 
  1456     0314                     	;# 
  1457     0314                     	;# 
  1458     0315                     	;# 
  1459     0316                     	;# 
  1460     0317                     	;# 
  1461     0318                     	;# 
  1462     0318                     	;# 
  1463     0319                     	;# 
  1464     031A                     	;# 
  1465     031B                     	;# 
  1466     031C                     	;# 
  1467     031C                     	;# 
  1468     031D                     	;# 
  1469     031E                     	;# 
  1470     031F                     	;# 
  1471     038C                     	;# 
  1472     038C                     	;# 
  1473     038D                     	;# 
  1474     038E                     	;# 
  1475     0390                     	;# 
  1476     0390                     	;# 
  1477     0391                     	;# 
  1478     0392                     	;# 
  1479     048C                     	;# 
  1480     048C                     	;# 
  1481     048D                     	;# 
  1482     048E                     	;# 
  1483     048F                     	;# 
  1484     048F                     	;# 
  1485     0490                     	;# 
  1486     0491                     	;# 
  1487     0492                     	;# 
  1488     0492                     	;# 
  1489     0493                     	;# 
  1490     0494                     	;# 
  1491     0495                     	;# 
  1492     0495                     	;# 
  1493     0496                     	;# 
  1494     0497                     	;# 
  1495     0498                     	;# 
  1496     0499                     	;# 
  1497     049A                     	;# 
  1498     049B                     	;# 
  1499     049C                     	;# 
  1500     049D                     	;# 
  1501     050C                     	;# 
  1502     050C                     	;# 
  1503     050D                     	;# 
  1504     050E                     	;# 
  1505     050F                     	;# 
  1506     050F                     	;# 
  1507     0510                     	;# 
  1508     0511                     	;# 
  1509     0512                     	;# 
  1510     0512                     	;# 
  1511     0513                     	;# 
  1512     0514                     	;# 
  1513     0515                     	;# 
  1514     0515                     	;# 
  1515     0516                     	;# 
  1516     0517                     	;# 
  1517     0518                     	;# 
  1518     0519                     	;# 
  1519     051A                     	;# 
  1520     051B                     	;# 
  1521     051C                     	;# 
  1522     051D                     	;# 
  1523     058C                     	;# 
  1524     058C                     	;# 
  1525     058D                     	;# 
  1526     058E                     	;# 
  1527     058F                     	;# 
  1528     058F                     	;# 
  1529     0590                     	;# 
  1530     0591                     	;# 
  1531     0592                     	;# 
  1532     0593                     	;# 
  1533     059C                     	;# 
  1534     059C                     	;# 
  1535     059D                     	;# 
  1536     059D                     	;# 
  1537     059E                     	;# 
  1538     059F                     	;# 
  1539     060C                     	;# 
  1540     060C                     	;# 
  1541     060D                     	;# 
  1542     060D                     	;# 
  1543     060E                     	;# 
  1544     060F                     	;# 
  1545     0610                     	;# 
  1546     0611                     	;# 
  1547     0612                     	;# 
  1548     0613                     	;# 
  1549     0614                     	;# 
  1550     0616                     	;# 
  1551     0616                     	;# 
  1552     0617                     	;# 
  1553     0617                     	;# 
  1554     0618                     	;# 
  1555     0619                     	;# 
  1556     061A                     	;# 
  1557     061B                     	;# 
  1558     061C                     	;# 
  1559     061D                     	;# 
  1560     061E                     	;# 
  1561     068C                     	;# 
  1562     068D                     	;# 
  1563     068E                     	;# 
  1564     068F                     	;# 
  1565     0690                     	;# 
  1566     0691                     	;# 
  1567     0692                     	;# 
  1568     0693                     	;# 
  1569     0694                     	;# 
  1570     070C                     	;# 
  1571     070D                     	;# 
  1572     070E                     	;# 
  1573     070F                     	;# 
  1574     0710                     	;# 
  1575     0711                     	;# 
  1576     0712                     	;# 
  1577     0713                     	;# 
  1578     0714                     	;# 
  1579     0716                     	;# 
  1580     0717                     	;# 
  1581     0718                     	;# 
  1582     0719                     	;# 
  1583     071A                     	;# 
  1584     071B                     	;# 
  1585     071C                     	;# 
  1586     071D                     	;# 
  1587     071E                     	;# 
  1588     0796                     	;# 
  1589     0797                     	;# 
  1590     0798                     	;# 
  1591     0799                     	;# 
  1592     079A                     	;# 
  1593     079B                     	;# 
  1594     079C                     	;# 
  1595     079D                     	;# 
  1596     080C                     	;# 
  1597     080D                     	;# 
  1598     080E                     	;# 
  1599     080F                     	;# 
  1600     0810                     	;# 
  1601     0811                     	;# 
  1602     0813                     	;# 
  1603     0814                     	;# 
  1604     081A                     	;# 
  1605     081A                     	;# 
  1606     081B                     	;# 
  1607     081C                     	;# 
  1608     081C                     	;# 
  1609     081D                     	;# 
  1610     081E                     	;# 
  1611     081F                     	;# 
  1612     088C                     	;# 
  1613     088D                     	;# 
  1614     088E                     	;# 
  1615     088F                     	;# 
  1616     0890                     	;# 
  1617     0891                     	;# 
  1618     0892                     	;# 
  1619     0893                     	;# 
  1620     0895                     	;# 
  1621     0896                     	;# 
  1622     0897                     	;# 
  1623     0898                     	;# 
  1624     0899                     	;# 
  1625     089A                     	;# 
  1626     089B                     	;# 
  1627     090C                     	;# 
  1628     090E                     	;# 
  1629     090F                     	;# 
  1630     091F                     	;# 
  1631     098F                     	;# 
  1632     098F                     	;# 
  1633     0990                     	;# 
  1634     0991                     	;# 
  1635     0992                     	;# 
  1636     0993                     	;# 
  1637     0994                     	;# 
  1638     0995                     	;# 
  1639     0996                     	;# 
  1640     0997                     	;# 
  1641     0A19                     	;# 
  1642     0A19                     	;# 
  1643     0A1A                     	;# 
  1644     0A1A                     	;# 
  1645     0A1B                     	;# 
  1646     0A1B                     	;# 
  1647     0A1B                     	;# 
  1648     0A1C                     	;# 
  1649     0A1C                     	;# 
  1650     0A1D                     	;# 
  1651     0A1D                     	;# 
  1652     0A1E                     	;# 
  1653     0A1E                     	;# 
  1654     0A1F                     	;# 
  1655     0A1F                     	;# 
  1656     0A1F                     	;# 
  1657     1E0F                     	;# 
  1658     1E10                     	;# 
  1659     1E11                     	;# 
  1660     1E12                     	;# 
  1661     1E13                     	;# 
  1662     1E14                     	;# 
  1663     1E15                     	;# 
  1664     1E16                     	;# 
  1665     1E17                     	;# 
  1666     1E18                     	;# 
  1667     1E19                     	;# 
  1668     1E1A                     	;# 
  1669     1E1B                     	;# 
  1670     1E1C                     	;# 
  1671     1E1D                     	;# 
  1672     1E1E                     	;# 
  1673     1E1F                     	;# 
  1674     1E20                     	;# 
  1675     1E21                     	;# 
  1676     1E22                     	;# 
  1677     1E23                     	;# 
  1678     1E24                     	;# 
  1679     1E25                     	;# 
  1680     1E26                     	;# 
  1681     1E27                     	;# 
  1682     1E28                     	;# 
  1683     1E29                     	;# 
  1684     1E2A                     	;# 
  1685     1E2B                     	;# 
  1686     1E2C                     	;# 
  1687     1E2D                     	;# 
  1688     1E2E                     	;# 
  1689     1E2F                     	;# 
  1690     1E30                     	;# 
  1691     1E31                     	;# 
  1692     1E32                     	;# 
  1693     1E33                     	;# 
  1694     1E34                     	;# 
  1695     1E35                     	;# 
  1696     1E36                     	;# 
  1697     1E37                     	;# 
  1698     1E8F                     	;# 
  1699     1E90                     	;# 
  1700     1E91                     	;# 
  1701     1E92                     	;# 
  1702     1E93                     	;# 
  1703     1E94                     	;# 
  1704     1E95                     	;# 
  1705     1E96                     	;# 
  1706     1E97                     	;# 
  1707     1E9C                     	;# 
  1708     1E9D                     	;# 
  1709     1E9E                     	;# 
  1710     1EA1                     	;# 
  1711     1EA2                     	;# 
  1712     1EA3                     	;# 
  1713     1EA4                     	;# 
  1714     1EA5                     	;# 
  1715     1EA9                     	;# 
  1716     1EAA                     	;# 
  1717     1EAB                     	;# 
  1718     1EAC                     	;# 
  1719     1EB1                     	;# 
  1720     1EB2                     	;# 
  1721     1EB3                     	;# 
  1722     1EB8                     	;# 
  1723     1EB9                     	;# 
  1724     1EBA                     	;# 
  1725     1EBB                     	;# 
  1726     1EBC                     	;# 
  1727     1EBD                     	;# 
  1728     1EBE                     	;# 
  1729     1EC3                     	;# 
  1730     1EC5                     	;# 
  1731     1EC6                     	;# 
  1732     1EC7                     	;# 
  1733     1EC8                     	;# 
  1734     1EC9                     	;# 
  1735     1ECA                     	;# 
  1736     1ECB                     	;# 
  1737     1ECC                     	;# 
  1738     1ECD                     	;# 
  1739     1ECE                     	;# 
  1740     1F10                     	;# 
  1741     1F11                     	;# 
  1742     1F12                     	;# 
  1743     1F13                     	;# 
  1744     1F14                     	;# 
  1745     1F15                     	;# 
  1746     1F16                     	;# 
  1747     1F17                     	;# 
  1748     1F18                     	;# 
  1749     1F19                     	;# 
  1750     1F1A                     	;# 
  1751     1F1B                     	;# 
  1752     1F1C                     	;# 
  1753     1F1D                     	;# 
  1754     1F1E                     	;# 
  1755     1F1F                     	;# 
  1756     1F20                     	;# 
  1757     1F21                     	;# 
  1758     1F22                     	;# 
  1759     1F23                     	;# 
  1760     1F24                     	;# 
  1761     1F25                     	;# 
  1762     1F26                     	;# 
  1763     1F27                     	;# 
  1764     1F38                     	;# 
  1765     1F39                     	;# 
  1766     1F3A                     	;# 
  1767     1F3B                     	;# 
  1768     1F3C                     	;# 
  1769     1F3D                     	;# 
  1770     1F3E                     	;# 
  1771     1F3F                     	;# 
  1772     1F43                     	;# 
  1773     1F44                     	;# 
  1774     1F45                     	;# 
  1775     1F46                     	;# 
  1776     1F47                     	;# 
  1777     1F48                     	;# 
  1778     1F49                     	;# 
  1779     1F4A                     	;# 
  1780     1F4E                     	;# 
  1781     1F4F                     	;# 
  1782     1F50                     	;# 
  1783     1F51                     	;# 
  1784     1F52                     	;# 
  1785     1F53                     	;# 
  1786     1F54                     	;# 
  1787     1F55                     	;# 
  1788     1F65                     	;# 
  1789     1F66                     	;# 
  1790     1F67                     	;# 
  1791     1F68                     	;# 
  1792     1F69                     	;# 
  1793     1F6A                     	;# 
  1794     1F6B                     	;# 
  1795     1FE4                     	;# 
  1796     1FE5                     	;# 
  1797     1FE6                     	;# 
  1798     1FE7                     	;# 
  1799     1FE8                     	;# 
  1800     1FE8                     	;# 
  1801     1FE9                     	;# 
  1802     1FEA                     	;# 
  1803     1FEB                     	;# 
  1804     1FED                     	;# 
  1805     1FEE                     	;# 
  1806     1FEF                     	;# 
  1807     0000                     	;# 
  1808     0001                     	;# 
  1809     0002                     	;# 
  1810     0003                     	;# 
  1811     0004                     	;# 
  1812     0005                     	;# 
  1813     0006                     	;# 
  1814     0007                     	;# 
  1815     0008                     	;# 
  1816     0009                     	;# 
  1817     000A                     	;# 
  1818     000B                     	;# 
  1819     000C                     	;# 
  1820     000D                     	;# 
  1821     000E                     	;# 
  1822     0010                     	;# 
  1823     0012                     	;# 
  1824     0013                     	;# 
  1825     0014                     	;# 
  1826     0016                     	;# 
  1827     0018                     	;# 
  1828     0019                     	;# 
  1829     001A                     	;# 
  1830     001C                     	;# 
  1831     008C                     	;# 
  1832     008C                     	;# 
  1833     008D                     	;# 
  1834     008E                     	;# 
  1835     008E                     	;# 
  1836     008F                     	;# 
  1837     0090                     	;# 
  1838     0090                     	;# 
  1839     0091                     	;# 
  1840     0092                     	;# 
  1841     0092                     	;# 
  1842     0093                     	;# 
  1843     0094                     	;# 
  1844     0094                     	;# 
  1845     0095                     	;# 
  1846     0096                     	;# 
  1847     0096                     	;# 
  1848     0097                     	;# 
  1849     0098                     	;# 
  1850     0099                     	;# 
  1851     009A                     	;# 
  1852     009B                     	;# 
  1853     009B                     	;# 
  1854     009C                     	;# 
  1855     009D                     	;# 
  1856     009D                     	;# 
  1857     009E                     	;# 
  1858     009F                     	;# 
  1859     010C                     	;# 
  1860     010C                     	;# 
  1861     010D                     	;# 
  1862     010E                     	;# 
  1863     010F                     	;# 
  1864     010F                     	;# 
  1865     0110                     	;# 
  1866     0111                     	;# 
  1867     0112                     	;# 
  1868     0113                     	;# 
  1869     0114                     	;# 
  1870     0115                     	;# 
  1871     0116                     	;# 
  1872     0117                     	;# 
  1873     0118                     	;# 
  1874     0119                     	;# 
  1875     0119                     	;# 
  1876     0119                     	;# 
  1877     011A                     	;# 
  1878     011A                     	;# 
  1879     011A                     	;# 
  1880     011B                     	;# 
  1881     011B                     	;# 
  1882     011B                     	;# 
  1883     011B                     	;# 
  1884     011B                     	;# 
  1885     011C                     	;# 
  1886     011C                     	;# 
  1887     011C                     	;# 
  1888     011D                     	;# 
  1889     011D                     	;# 
  1890     011D                     	;# 
  1891     011E                     	;# 
  1892     011E                     	;# 
  1893     011E                     	;# 
  1894     011F                     	;# 
  1895     011F                     	;# 
  1896     011F                     	;# 
  1897     011F                     	;# 
  1898     011F                     	;# 
  1899     018C                     	;# 
  1900     018D                     	;# 
  1901     018E                     	;# 
  1902     018F                     	;# 
  1903     0190                     	;# 
  1904     0191                     	;# 
  1905     0192                     	;# 
  1906     0196                     	;# 
  1907     0197                     	;# 
  1908     0198                     	;# 
  1909     0199                     	;# 
  1910     019A                     	;# 
  1911     019B                     	;# 
  1912     019C                     	;# 
  1913     020C                     	;# 
  1914     020D                     	;# 
  1915     020E                     	;# 
  1916     020E                     	;# 
  1917     020F                     	;# 
  1918     020F                     	;# 
  1919     0210                     	;# 
  1920     0210                     	;# 
  1921     0211                     	;# 
  1922     0211                     	;# 
  1923     0212                     	;# 
  1924     0213                     	;# 
  1925     0214                     	;# 
  1926     0214                     	;# 
  1927     0215                     	;# 
  1928     0215                     	;# 
  1929     0216                     	;# 
  1930     0216                     	;# 
  1931     0217                     	;# 
  1932     0217                     	;# 
  1933     0218                     	;# 
  1934     0219                     	;# 
  1935     021A                     	;# 
  1936     021A                     	;# 
  1937     021B                     	;# 
  1938     021B                     	;# 
  1939     021C                     	;# 
  1940     021C                     	;# 
  1941     021D                     	;# 
  1942     021D                     	;# 
  1943     021E                     	;# 
  1944     021F                     	;# 
  1945     028C                     	;# 
  1946     028C                     	;# 
  1947     028D                     	;# 
  1948     028D                     	;# 
  1949     028E                     	;# 
  1950     028F                     	;# 
  1951     0290                     	;# 
  1952     0291                     	;# 
  1953     0292                     	;# 
  1954     0292                     	;# 
  1955     0293                     	;# 
  1956     0293                     	;# 
  1957     0294                     	;# 
  1958     0295                     	;# 
  1959     0296                     	;# 
  1960     0297                     	;# 
  1961     0298                     	;# 
  1962     0298                     	;# 
  1963     0299                     	;# 
  1964     0299                     	;# 
  1965     029A                     	;# 
  1966     029B                     	;# 
  1967     029C                     	;# 
  1968     029D                     	;# 
  1969     029F                     	;# 
  1970     030C                     	;# 
  1971     030C                     	;# 
  1972     030D                     	;# 
  1973     030E                     	;# 
  1974     030F                     	;# 
  1975     0310                     	;# 
  1976     0310                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0314                     	;# 
  1981     0314                     	;# 
  1982     0315                     	;# 
  1983     0316                     	;# 
  1984     0317                     	;# 
  1985     0318                     	;# 
  1986     0318                     	;# 
  1987     0319                     	;# 
  1988     031A                     	;# 
  1989     031B                     	;# 
  1990     031C                     	;# 
  1991     031C                     	;# 
  1992     031D                     	;# 
  1993     031E                     	;# 
  1994     031F                     	;# 
  1995     038C                     	;# 
  1996     038C                     	;# 
  1997     038D                     	;# 
  1998     038E                     	;# 
  1999     0390                     	;# 
  2000     0390                     	;# 
  2001     0391                     	;# 
  2002     0392                     	;# 
  2003     048C                     	;# 
  2004     048C                     	;# 
  2005     048D                     	;# 
  2006     048E                     	;# 
  2007     048F                     	;# 
  2008     048F                     	;# 
  2009     0490                     	;# 
  2010     0491                     	;# 
  2011     0492                     	;# 
  2012     0492                     	;# 
  2013     0493                     	;# 
  2014     0494                     	;# 
  2015     0495                     	;# 
  2016     0495                     	;# 
  2017     0496                     	;# 
  2018     0497                     	;# 
  2019     0498                     	;# 
  2020     0499                     	;# 
  2021     049A                     	;# 
  2022     049B                     	;# 
  2023     049C                     	;# 
  2024     049D                     	;# 
  2025     050C                     	;# 
  2026     050C                     	;# 
  2027     050D                     	;# 
  2028     050E                     	;# 
  2029     050F                     	;# 
  2030     050F                     	;# 
  2031     0510                     	;# 
  2032     0511                     	;# 
  2033     0512                     	;# 
  2034     0512                     	;# 
  2035     0513                     	;# 
  2036     0514                     	;# 
  2037     0515                     	;# 
  2038     0515                     	;# 
  2039     0516                     	;# 
  2040     0517                     	;# 
  2041     0518                     	;# 
  2042     0519                     	;# 
  2043     051A                     	;# 
  2044     051B                     	;# 
  2045     051C                     	;# 
  2046     051D                     	;# 
  2047     058C                     	;# 
  2048     058C                     	;# 
  2049     058D                     	;# 
  2050     058E                     	;# 
  2051     058F                     	;# 
  2052     058F                     	;# 
  2053     0590                     	;# 
  2054     0591                     	;# 
  2055     0592                     	;# 
  2056     0593                     	;# 
  2057     059C                     	;# 
  2058     059C                     	;# 
  2059     059D                     	;# 
  2060     059D                     	;# 
  2061     059E                     	;# 
  2062     059F                     	;# 
  2063     060C                     	;# 
  2064     060C                     	;# 
  2065     060D                     	;# 
  2066     060D                     	;# 
  2067     060E                     	;# 
  2068     060F                     	;# 
  2069     0610                     	;# 
  2070     0611                     	;# 
  2071     0612                     	;# 
  2072     0613                     	;# 
  2073     0614                     	;# 
  2074     0616                     	;# 
  2075     0616                     	;# 
  2076     0617                     	;# 
  2077     0617                     	;# 
  2078     0618                     	;# 
  2079     0619                     	;# 
  2080     061A                     	;# 
  2081     061B                     	;# 
  2082     061C                     	;# 
  2083     061D                     	;# 
  2084     061E                     	;# 
  2085     068C                     	;# 
  2086     068D                     	;# 
  2087     068E                     	;# 
  2088     068F                     	;# 
  2089     0690                     	;# 
  2090     0691                     	;# 
  2091     0692                     	;# 
  2092     0693                     	;# 
  2093     0694                     	;# 
  2094     070C                     	;# 
  2095     070D                     	;# 
  2096     070E                     	;# 
  2097     070F                     	;# 
  2098     0710                     	;# 
  2099     0711                     	;# 
  2100     0712                     	;# 
  2101     0713                     	;# 
  2102     0714                     	;# 
  2103     0716                     	;# 
  2104     0717                     	;# 
  2105     0718                     	;# 
  2106     0719                     	;# 
  2107     071A                     	;# 
  2108     071B                     	;# 
  2109     071C                     	;# 
  2110     071D                     	;# 
  2111     071E                     	;# 
  2112     0796                     	;# 
  2113     0797                     	;# 
  2114     0798                     	;# 
  2115     0799                     	;# 
  2116     079A                     	;# 
  2117     079B                     	;# 
  2118     079C                     	;# 
  2119     079D                     	;# 
  2120     080C                     	;# 
  2121     080D                     	;# 
  2122     080E                     	;# 
  2123     080F                     	;# 
  2124     0810                     	;# 
  2125     0811                     	;# 
  2126     0813                     	;# 
  2127     0814                     	;# 
  2128     081A                     	;# 
  2129     081A                     	;# 
  2130     081B                     	;# 
  2131     081C                     	;# 
  2132     081C                     	;# 
  2133     081D                     	;# 
  2134     081E                     	;# 
  2135     081F                     	;# 
  2136     088C                     	;# 
  2137     088D                     	;# 
  2138     088E                     	;# 
  2139     088F                     	;# 
  2140     0890                     	;# 
  2141     0891                     	;# 
  2142     0892                     	;# 
  2143     0893                     	;# 
  2144     0895                     	;# 
  2145     0896                     	;# 
  2146     0897                     	;# 
  2147     0898                     	;# 
  2148     0899                     	;# 
  2149     089A                     	;# 
  2150     089B                     	;# 
  2151     090C                     	;# 
  2152     090E                     	;# 
  2153     090F                     	;# 
  2154     091F                     	;# 
  2155     098F                     	;# 
  2156     098F                     	;# 
  2157     0990                     	;# 
  2158     0991                     	;# 
  2159     0992                     	;# 
  2160     0993                     	;# 
  2161     0994                     	;# 
  2162     0995                     	;# 
  2163     0996                     	;# 
  2164     0997                     	;# 
  2165     0A19                     	;# 
  2166     0A19                     	;# 
  2167     0A1A                     	;# 
  2168     0A1A                     	;# 
  2169     0A1B                     	;# 
  2170     0A1B                     	;# 
  2171     0A1B                     	;# 
  2172     0A1C                     	;# 
  2173     0A1C                     	;# 
  2174     0A1D                     	;# 
  2175     0A1D                     	;# 
  2176     0A1E                     	;# 
  2177     0A1E                     	;# 
  2178     0A1F                     	;# 
  2179     0A1F                     	;# 
  2180     0A1F                     	;# 
  2181     1E0F                     	;# 
  2182     1E10                     	;# 
  2183     1E11                     	;# 
  2184     1E12                     	;# 
  2185     1E13                     	;# 
  2186     1E14                     	;# 
  2187     1E15                     	;# 
  2188     1E16                     	;# 
  2189     1E17                     	;# 
  2190     1E18                     	;# 
  2191     1E19                     	;# 
  2192     1E1A                     	;# 
  2193     1E1B                     	;# 
  2194     1E1C                     	;# 
  2195     1E1D                     	;# 
  2196     1E1E                     	;# 
  2197     1E1F                     	;# 
  2198     1E20                     	;# 
  2199     1E21                     	;# 
  2200     1E22                     	;# 
  2201     1E23                     	;# 
  2202     1E24                     	;# 
  2203     1E25                     	;# 
  2204     1E26                     	;# 
  2205     1E27                     	;# 
  2206     1E28                     	;# 
  2207     1E29                     	;# 
  2208     1E2A                     	;# 
  2209     1E2B                     	;# 
  2210     1E2C                     	;# 
  2211     1E2D                     	;# 
  2212     1E2E                     	;# 
  2213     1E2F                     	;# 
  2214     1E30                     	;# 
  2215     1E31                     	;# 
  2216     1E32                     	;# 
  2217     1E33                     	;# 
  2218     1E34                     	;# 
  2219     1E35                     	;# 
  2220     1E36                     	;# 
  2221     1E37                     	;# 
  2222     1E8F                     	;# 
  2223     1E90                     	;# 
  2224     1E91                     	;# 
  2225     1E92                     	;# 
  2226     1E93                     	;# 
  2227     1E94                     	;# 
  2228     1E95                     	;# 
  2229     1E96                     	;# 
  2230     1E97                     	;# 
  2231     1E9C                     	;# 
  2232     1E9D                     	;# 
  2233     1E9E                     	;# 
  2234     1EA1                     	;# 
  2235     1EA2                     	;# 
  2236     1EA3                     	;# 
  2237     1EA4                     	;# 
  2238     1EA5                     	;# 
  2239     1EA9                     	;# 
  2240     1EAA                     	;# 
  2241     1EAB                     	;# 
  2242     1EAC                     	;# 
  2243     1EB1                     	;# 
  2244     1EB2                     	;# 
  2245     1EB3                     	;# 
  2246     1EB8                     	;# 
  2247     1EB9                     	;# 
  2248     1EBA                     	;# 
  2249     1EBB                     	;# 
  2250     1EBC                     	;# 
  2251     1EBD                     	;# 
  2252     1EBE                     	;# 
  2253     1EC3                     	;# 
  2254     1EC5                     	;# 
  2255     1EC6                     	;# 
  2256     1EC7                     	;# 
  2257     1EC8                     	;# 
  2258     1EC9                     	;# 
  2259     1ECA                     	;# 
  2260     1ECB                     	;# 
  2261     1ECC                     	;# 
  2262     1ECD                     	;# 
  2263     1ECE                     	;# 
  2264     1F10                     	;# 
  2265     1F11                     	;# 
  2266     1F12                     	;# 
  2267     1F13                     	;# 
  2268     1F14                     	;# 
  2269     1F15                     	;# 
  2270     1F16                     	;# 
  2271     1F17                     	;# 
  2272     1F18                     	;# 
  2273     1F19                     	;# 
  2274     1F1A                     	;# 
  2275     1F1B                     	;# 
  2276     1F1C                     	;# 
  2277     1F1D                     	;# 
  2278     1F1E                     	;# 
  2279     1F1F                     	;# 
  2280     1F20                     	;# 
  2281     1F21                     	;# 
  2282     1F22                     	;# 
  2283     1F23                     	;# 
  2284     1F24                     	;# 
  2285     1F25                     	;# 
  2286     1F26                     	;# 
  2287     1F27                     	;# 
  2288     1F38                     	;# 
  2289     1F39                     	;# 
  2290     1F3A                     	;# 
  2291     1F3B                     	;# 
  2292     1F3C                     	;# 
  2293     1F3D                     	;# 
  2294     1F3E                     	;# 
  2295     1F3F                     	;# 
  2296     1F43                     	;# 
  2297     1F44                     	;# 
  2298     1F45                     	;# 
  2299     1F46                     	;# 
  2300     1F47                     	;# 
  2301     1F48                     	;# 
  2302     1F49                     	;# 
  2303     1F4A                     	;# 
  2304     1F4E                     	;# 
  2305     1F4F                     	;# 
  2306     1F50                     	;# 
  2307     1F51                     	;# 
  2308     1F52                     	;# 
  2309     1F53                     	;# 
  2310     1F54                     	;# 
  2311     1F55                     	;# 
  2312     1F65                     	;# 
  2313     1F66                     	;# 
  2314     1F67                     	;# 
  2315     1F68                     	;# 
  2316     1F69                     	;# 
  2317     1F6A                     	;# 
  2318     1F6B                     	;# 
  2319     1FE4                     	;# 
  2320     1FE5                     	;# 
  2321     1FE6                     	;# 
  2322     1FE7                     	;# 
  2323     1FE8                     	;# 
  2324     1FE8                     	;# 
  2325     1FE9                     	;# 
  2326     1FEA                     	;# 
  2327     1FEB                     	;# 
  2328     1FED                     	;# 
  2329     1FEE                     	;# 
  2330     1FEF                     	;# 
  2331     0000                     	;# 
  2332     0001                     	;# 
  2333     0002                     	;# 
  2334     0003                     	;# 
  2335     0004                     	;# 
  2336     0005                     	;# 
  2337     0006                     	;# 
  2338     0007                     	;# 
  2339     0008                     	;# 
  2340     0009                     	;# 
  2341     000A                     	;# 
  2342     000B                     	;# 
  2343     000C                     	;# 
  2344     000D                     	;# 
  2345     000E                     	;# 
  2346     0010                     	;# 
  2347     0012                     	;# 
  2348     0013                     	;# 
  2349     0014                     	;# 
  2350     0016                     	;# 
  2351     0018                     	;# 
  2352     0019                     	;# 
  2353     001A                     	;# 
  2354     001C                     	;# 
  2355     008C                     	;# 
  2356     008C                     	;# 
  2357     008D                     	;# 
  2358     008E                     	;# 
  2359     008E                     	;# 
  2360     008F                     	;# 
  2361     0090                     	;# 
  2362     0090                     	;# 
  2363     0091                     	;# 
  2364     0092                     	;# 
  2365     0092                     	;# 
  2366     0093                     	;# 
  2367     0094                     	;# 
  2368     0094                     	;# 
  2369     0095                     	;# 
  2370     0096                     	;# 
  2371     0096                     	;# 
  2372     0097                     	;# 
  2373     0098                     	;# 
  2374     0099                     	;# 
  2375     009A                     	;# 
  2376     009B                     	;# 
  2377     009B                     	;# 
  2378     009C                     	;# 
  2379     009D                     	;# 
  2380     009D                     	;# 
  2381     009E                     	;# 
  2382     009F                     	;# 
  2383     010C                     	;# 
  2384     010C                     	;# 
  2385     010D                     	;# 
  2386     010E                     	;# 
  2387     010F                     	;# 
  2388     010F                     	;# 
  2389     0110                     	;# 
  2390     0111                     	;# 
  2391     0112                     	;# 
  2392     0113                     	;# 
  2393     0114                     	;# 
  2394     0115                     	;# 
  2395     0116                     	;# 
  2396     0117                     	;# 
  2397     0118                     	;# 
  2398     0119                     	;# 
  2399     0119                     	;# 
  2400     0119                     	;# 
  2401     011A                     	;# 
  2402     011A                     	;# 
  2403     011A                     	;# 
  2404     011B                     	;# 
  2405     011B                     	;# 
  2406     011B                     	;# 
  2407     011B                     	;# 
  2408     011B                     	;# 
  2409     011C                     	;# 
  2410     011C                     	;# 
  2411     011C                     	;# 
  2412     011D                     	;# 
  2413     011D                     	;# 
  2414     011D                     	;# 
  2415     011E                     	;# 
  2416     011E                     	;# 
  2417     011E                     	;# 
  2418     011F                     	;# 
  2419     011F                     	;# 
  2420     011F                     	;# 
  2421     011F                     	;# 
  2422     011F                     	;# 
  2423     018C                     	;# 
  2424     018D                     	;# 
  2425     018E                     	;# 
  2426     018F                     	;# 
  2427     0190                     	;# 
  2428     0191                     	;# 
  2429     0192                     	;# 
  2430     0196                     	;# 
  2431     0197                     	;# 
  2432     0198                     	;# 
  2433     0199                     	;# 
  2434     019A                     	;# 
  2435     019B                     	;# 
  2436     019C                     	;# 
  2437     020C                     	;# 
  2438     020D                     	;# 
  2439     020E                     	;# 
  2440     020E                     	;# 
  2441     020F                     	;# 
  2442     020F                     	;# 
  2443     0210                     	;# 
  2444     0210                     	;# 
  2445     0211                     	;# 
  2446     0211                     	;# 
  2447     0212                     	;# 
  2448     0213                     	;# 
  2449     0214                     	;# 
  2450     0214                     	;# 
  2451     0215                     	;# 
  2452     0215                     	;# 
  2453     0216                     	;# 
  2454     0216                     	;# 
  2455     0217                     	;# 
  2456     0217                     	;# 
  2457     0218                     	;# 
  2458     0219                     	;# 
  2459     021A                     	;# 
  2460     021A                     	;# 
  2461     021B                     	;# 
  2462     021B                     	;# 
  2463     021C                     	;# 
  2464     021C                     	;# 
  2465     021D                     	;# 
  2466     021D                     	;# 
  2467     021E                     	;# 
  2468     021F                     	;# 
  2469     028C                     	;# 
  2470     028C                     	;# 
  2471     028D                     	;# 
  2472     028D                     	;# 
  2473     028E                     	;# 
  2474     028F                     	;# 
  2475     0290                     	;# 
  2476     0291                     	;# 
  2477     0292                     	;# 
  2478     0292                     	;# 
  2479     0293                     	;# 
  2480     0293                     	;# 
  2481     0294                     	;# 
  2482     0295                     	;# 
  2483     0296                     	;# 
  2484     0297                     	;# 
  2485     0298                     	;# 
  2486     0298                     	;# 
  2487     0299                     	;# 
  2488     0299                     	;# 
  2489     029A                     	;# 
  2490     029B                     	;# 
  2491     029C                     	;# 
  2492     029D                     	;# 
  2493     029F                     	;# 
  2494     030C                     	;# 
  2495     030C                     	;# 
  2496     030D                     	;# 
  2497     030E                     	;# 
  2498     030F                     	;# 
  2499     0310                     	;# 
  2500     0310                     	;# 
  2501     0311                     	;# 
  2502     0312                     	;# 
  2503     0313                     	;# 
  2504     0314                     	;# 
  2505     0314                     	;# 
  2506     0315                     	;# 
  2507     0316                     	;# 
  2508     0317                     	;# 
  2509     0318                     	;# 
  2510     0318                     	;# 
  2511     0319                     	;# 
  2512     031A                     	;# 
  2513     031B                     	;# 
  2514     031C                     	;# 
  2515     031C                     	;# 
  2516     031D                     	;# 
  2517     031E                     	;# 
  2518     031F                     	;# 
  2519     038C                     	;# 
  2520     038C                     	;# 
  2521     038D                     	;# 
  2522     038E                     	;# 
  2523     0390                     	;# 
  2524     0390                     	;# 
  2525     0391                     	;# 
  2526     0392                     	;# 
  2527     048C                     	;# 
  2528     048C                     	;# 
  2529     048D                     	;# 
  2530     048E                     	;# 
  2531     048F                     	;# 
  2532     048F                     	;# 
  2533     0490                     	;# 
  2534     0491                     	;# 
  2535     0492                     	;# 
  2536     0492                     	;# 
  2537     0493                     	;# 
  2538     0494                     	;# 
  2539     0495                     	;# 
  2540     0495                     	;# 
  2541     0496                     	;# 
  2542     0497                     	;# 
  2543     0498                     	;# 
  2544     0499                     	;# 
  2545     049A                     	;# 
  2546     049B                     	;# 
  2547     049C                     	;# 
  2548     049D                     	;# 
  2549     050C                     	;# 
  2550     050C                     	;# 
  2551     050D                     	;# 
  2552     050E                     	;# 
  2553     050F                     	;# 
  2554     050F                     	;# 
  2555     0510                     	;# 
  2556     0511                     	;# 
  2557     0512                     	;# 
  2558     0512                     	;# 
  2559     0513                     	;# 
  2560     0514                     	;# 
  2561     0515                     	;# 
  2562     0515                     	;# 
  2563     0516                     	;# 
  2564     0517                     	;# 
  2565     0518                     	;# 
  2566     0519                     	;# 
  2567     051A                     	;# 
  2568     051B                     	;# 
  2569     051C                     	;# 
  2570     051D                     	;# 
  2571     058C                     	;# 
  2572     058C                     	;# 
  2573     058D                     	;# 
  2574     058E                     	;# 
  2575     058F                     	;# 
  2576     058F                     	;# 
  2577     0590                     	;# 
  2578     0591                     	;# 
  2579     0592                     	;# 
  2580     0593                     	;# 
  2581     059C                     	;# 
  2582     059C                     	;# 
  2583     059D                     	;# 
  2584     059D                     	;# 
  2585     059E                     	;# 
  2586     059F                     	;# 
  2587     060C                     	;# 
  2588     060C                     	;# 
  2589     060D                     	;# 
  2590     060D                     	;# 
  2591     060E                     	;# 
  2592     060F                     	;# 
  2593     0610                     	;# 
  2594     0611                     	;# 
  2595     0612                     	;# 
  2596     0613                     	;# 
  2597     0614                     	;# 
  2598     0616                     	;# 
  2599     0616                     	;# 
  2600     0617                     	;# 
  2601     0617                     	;# 
  2602     0618                     	;# 
  2603     0619                     	;# 
  2604     061A                     	;# 
  2605     061B                     	;# 
  2606     061C                     	;# 
  2607     061D                     	;# 
  2608     061E                     	;# 
  2609     068C                     	;# 
  2610     068D                     	;# 
  2611     068E                     	;# 
  2612     068F                     	;# 
  2613     0690                     	;# 
  2614     0691                     	;# 
  2615     0692                     	;# 
  2616     0693                     	;# 
  2617     0694                     	;# 
  2618     070C                     	;# 
  2619     070D                     	;# 
  2620     070E                     	;# 
  2621     070F                     	;# 
  2622     0710                     	;# 
  2623     0711                     	;# 
  2624     0712                     	;# 
  2625     0713                     	;# 
  2626     0714                     	;# 
  2627     0716                     	;# 
  2628     0717                     	;# 
  2629     0718                     	;# 
  2630     0719                     	;# 
  2631     071A                     	;# 
  2632     071B                     	;# 
  2633     071C                     	;# 
  2634     071D                     	;# 
  2635     071E                     	;# 
  2636     0796                     	;# 
  2637     0797                     	;# 
  2638     0798                     	;# 
  2639     0799                     	;# 
  2640     079A                     	;# 
  2641     079B                     	;# 
  2642     079C                     	;# 
  2643     079D                     	;# 
  2644     080C                     	;# 
  2645     080D                     	;# 
  2646     080E                     	;# 
  2647     080F                     	;# 
  2648     0810                     	;# 
  2649     0811                     	;# 
  2650     0813                     	;# 
  2651     0814                     	;# 
  2652     081A                     	;# 
  2653     081A                     	;# 
  2654     081B                     	;# 
  2655     081C                     	;# 
  2656     081C                     	;# 
  2657     081D                     	;# 
  2658     081E                     	;# 
  2659     081F                     	;# 
  2660     088C                     	;# 
  2661     088D                     	;# 
  2662     088E                     	;# 
  2663     088F                     	;# 
  2664     0890                     	;# 
  2665     0891                     	;# 
  2666     0892                     	;# 
  2667     0893                     	;# 
  2668     0895                     	;# 
  2669     0896                     	;# 
  2670     0897                     	;# 
  2671     0898                     	;# 
  2672     0899                     	;# 
  2673     089A                     	;# 
  2674     089B                     	;# 
  2675     090C                     	;# 
  2676     090E                     	;# 
  2677     090F                     	;# 
  2678     091F                     	;# 
  2679     098F                     	;# 
  2680     098F                     	;# 
  2681     0990                     	;# 
  2682     0991                     	;# 
  2683     0992                     	;# 
  2684     0993                     	;# 
  2685     0994                     	;# 
  2686     0995                     	;# 
  2687     0996                     	;# 
  2688     0997                     	;# 
  2689     0A19                     	;# 
  2690     0A19                     	;# 
  2691     0A1A                     	;# 
  2692     0A1A                     	;# 
  2693     0A1B                     	;# 
  2694     0A1B                     	;# 
  2695     0A1B                     	;# 
  2696     0A1C                     	;# 
  2697     0A1C                     	;# 
  2698     0A1D                     	;# 
  2699     0A1D                     	;# 
  2700     0A1E                     	;# 
  2701     0A1E                     	;# 
  2702     0A1F                     	;# 
  2703     0A1F                     	;# 
  2704     0A1F                     	;# 
  2705     1E0F                     	;# 
  2706     1E10                     	;# 
  2707     1E11                     	;# 
  2708     1E12                     	;# 
  2709     1E13                     	;# 
  2710     1E14                     	;# 
  2711     1E15                     	;# 
  2712     1E16                     	;# 
  2713     1E17                     	;# 
  2714     1E18                     	;# 
  2715     1E19                     	;# 
  2716     1E1A                     	;# 
  2717     1E1B                     	;# 
  2718     1E1C                     	;# 
  2719     1E1D                     	;# 
  2720     1E1E                     	;# 
  2721     1E1F                     	;# 
  2722     1E20                     	;# 
  2723     1E21                     	;# 
  2724     1E22                     	;# 
  2725     1E23                     	;# 
  2726     1E24                     	;# 
  2727     1E25                     	;# 
  2728     1E26                     	;# 
  2729     1E27                     	;# 
  2730     1E28                     	;# 
  2731     1E29                     	;# 
  2732     1E2A                     	;# 
  2733     1E2B                     	;# 
  2734     1E2C                     	;# 
  2735     1E2D                     	;# 
  2736     1E2E                     	;# 
  2737     1E2F                     	;# 
  2738     1E30                     	;# 
  2739     1E31                     	;# 
  2740     1E32                     	;# 
  2741     1E33                     	;# 
  2742     1E34                     	;# 
  2743     1E35                     	;# 
  2744     1E36                     	;# 
  2745     1E37                     	;# 
  2746     1E8F                     	;# 
  2747     1E90                     	;# 
  2748     1E91                     	;# 
  2749     1E92                     	;# 
  2750     1E93                     	;# 
  2751     1E94                     	;# 
  2752     1E95                     	;# 
  2753     1E96                     	;# 
  2754     1E97                     	;# 
  2755     1E9C                     	;# 
  2756     1E9D                     	;# 
  2757     1E9E                     	;# 
  2758     1EA1                     	;# 
  2759     1EA2                     	;# 
  2760     1EA3                     	;# 
  2761     1EA4                     	;# 
  2762     1EA5                     	;# 
  2763     1EA9                     	;# 
  2764     1EAA                     	;# 
  2765     1EAB                     	;# 
  2766     1EAC                     	;# 
  2767     1EB1                     	;# 
  2768     1EB2                     	;# 
  2769     1EB3                     	;# 
  2770     1EB8                     	;# 
  2771     1EB9                     	;# 
  2772     1EBA                     	;# 
  2773     1EBB                     	;# 
  2774     1EBC                     	;# 
  2775     1EBD                     	;# 
  2776     1EBE                     	;# 
  2777     1EC3                     	;# 
  2778     1EC5                     	;# 
  2779     1EC6                     	;# 
  2780     1EC7                     	;# 
  2781     1EC8                     	;# 
  2782     1EC9                     	;# 
  2783     1ECA                     	;# 
  2784     1ECB                     	;# 
  2785     1ECC                     	;# 
  2786     1ECD                     	;# 
  2787     1ECE                     	;# 
  2788     1F10                     	;# 
  2789     1F11                     	;# 
  2790     1F12                     	;# 
  2791     1F13                     	;# 
  2792     1F14                     	;# 
  2793     1F15                     	;# 
  2794     1F16                     	;# 
  2795     1F17                     	;# 
  2796     1F18                     	;# 
  2797     1F19                     	;# 
  2798     1F1A                     	;# 
  2799     1F1B                     	;# 
  2800     1F1C                     	;# 
  2801     1F1D                     	;# 
  2802     1F1E                     	;# 
  2803     1F1F                     	;# 
  2804     1F20                     	;# 
  2805     1F21                     	;# 
  2806     1F22                     	;# 
  2807     1F23                     	;# 
  2808     1F24                     	;# 
  2809     1F25                     	;# 
  2810     1F26                     	;# 
  2811     1F27                     	;# 
  2812     1F38                     	;# 
  2813     1F39                     	;# 
  2814     1F3A                     	;# 
  2815     1F3B                     	;# 
  2816     1F3C                     	;# 
  2817     1F3D                     	;# 
  2818     1F3E                     	;# 
  2819     1F3F                     	;# 
  2820     1F43                     	;# 
  2821     1F44                     	;# 
  2822     1F45                     	;# 
  2823     1F46                     	;# 
  2824     1F47                     	;# 
  2825     1F48                     	;# 
  2826     1F49                     	;# 
  2827     1F4A                     	;# 
  2828     1F4E                     	;# 
  2829     1F4F                     	;# 
  2830     1F50                     	;# 
  2831     1F51                     	;# 
  2832     1F52                     	;# 
  2833     1F53                     	;# 
  2834     1F54                     	;# 
  2835     1F55                     	;# 
  2836     1F65                     	;# 
  2837     1F66                     	;# 
  2838     1F67                     	;# 
  2839     1F68                     	;# 
  2840     1F69                     	;# 
  2841     1F6A                     	;# 
  2842     1F6B                     	;# 
  2843     1FE4                     	;# 
  2844     1FE5                     	;# 
  2845     1FE6                     	;# 
  2846     1FE7                     	;# 
  2847     1FE8                     	;# 
  2848     1FE8                     	;# 
  2849     1FE9                     	;# 
  2850     1FEA                     	;# 
  2851     1FEB                     	;# 
  2852     1FED                     	;# 
  2853     1FEE                     	;# 
  2854     1FEF                     	;# 
  2855     0000                     	;# 
  2856     0001                     	;# 
  2857     0002                     	;# 
  2858     0003                     	;# 
  2859     0004                     	;# 
  2860     0005                     	;# 
  2861     0006                     	;# 
  2862     0007                     	;# 
  2863     0008                     	;# 
  2864     0009                     	;# 
  2865     000A                     	;# 
  2866     000B                     	;# 
  2867     000C                     	;# 
  2868     000D                     	;# 
  2869     000E                     	;# 
  2870     0010                     	;# 
  2871     0012                     	;# 
  2872     0013                     	;# 
  2873     0014                     	;# 
  2874     0016                     	;# 
  2875     0018                     	;# 
  2876     0019                     	;# 
  2877     001A                     	;# 
  2878     001C                     	;# 
  2879     008C                     	;# 
  2880     008C                     	;# 
  2881     008D                     	;# 
  2882     008E                     	;# 
  2883     008E                     	;# 
  2884     008F                     	;# 
  2885     0090                     	;# 
  2886     0090                     	;# 
  2887     0091                     	;# 
  2888     0092                     	;# 
  2889     0092                     	;# 
  2890     0093                     	;# 
  2891     0094                     	;# 
  2892     0094                     	;# 
  2893     0095                     	;# 
  2894     0096                     	;# 
  2895     0096                     	;# 
  2896     0097                     	;# 
  2897     0098                     	;# 
  2898     0099                     	;# 
  2899     009A                     	;# 
  2900     009B                     	;# 
  2901     009B                     	;# 
  2902     009C                     	;# 
  2903     009D                     	;# 
  2904     009D                     	;# 
  2905     009E                     	;# 
  2906     009F                     	;# 
  2907     010C                     	;# 
  2908     010C                     	;# 
  2909     010D                     	;# 
  2910     010E                     	;# 
  2911     010F                     	;# 
  2912     010F                     	;# 
  2913     0110                     	;# 
  2914     0111                     	;# 
  2915     0112                     	;# 
  2916     0113                     	;# 
  2917     0114                     	;# 
  2918     0115                     	;# 
  2919     0116                     	;# 
  2920     0117                     	;# 
  2921     0118                     	;# 
  2922     0119                     	;# 
  2923     0119                     	;# 
  2924     0119                     	;# 
  2925     011A                     	;# 
  2926     011A                     	;# 
  2927     011A                     	;# 
  2928     011B                     	;# 
  2929     011B                     	;# 
  2930     011B                     	;# 
  2931     011B                     	;# 
  2932     011B                     	;# 
  2933     011C                     	;# 
  2934     011C                     	;# 
  2935     011C                     	;# 
  2936     011D                     	;# 
  2937     011D                     	;# 
  2938     011D                     	;# 
  2939     011E                     	;# 
  2940     011E                     	;# 
  2941     011E                     	;# 
  2942     011F                     	;# 
  2943     011F                     	;# 
  2944     011F                     	;# 
  2945     011F                     	;# 
  2946     011F                     	;# 
  2947     018C                     	;# 
  2948     018D                     	;# 
  2949     018E                     	;# 
  2950     018F                     	;# 
  2951     0190                     	;# 
  2952     0191                     	;# 
  2953     0192                     	;# 
  2954     0196                     	;# 
  2955     0197                     	;# 
  2956     0198                     	;# 
  2957     0199                     	;# 
  2958     019A                     	;# 
  2959     019B                     	;# 
  2960     019C                     	;# 
  2961     020C                     	;# 
  2962     020D                     	;# 
  2963     020E                     	;# 
  2964     020E                     	;# 
  2965     020F                     	;# 
  2966     020F                     	;# 
  2967     0210                     	;# 
  2968     0210                     	;# 
  2969     0211                     	;# 
  2970     0211                     	;# 
  2971     0212                     	;# 
  2972     0213                     	;# 
  2973     0214                     	;# 
  2974     0214                     	;# 
  2975     0215                     	;# 
  2976     0215                     	;# 
  2977     0216                     	;# 
  2978     0216                     	;# 
  2979     0217                     	;# 
  2980     0217                     	;# 
  2981     0218                     	;# 
  2982     0219                     	;# 
  2983     021A                     	;# 
  2984     021A                     	;# 
  2985     021B                     	;# 
  2986     021B                     	;# 
  2987     021C                     	;# 
  2988     021C                     	;# 
  2989     021D                     	;# 
  2990     021D                     	;# 
  2991     021E                     	;# 
  2992     021F                     	;# 
  2993     028C                     	;# 
  2994     028C                     	;# 
  2995     028D                     	;# 
  2996     028D                     	;# 
  2997     028E                     	;# 
  2998     028F                     	;# 
  2999     0290                     	;# 
  3000     0291                     	;# 
  3001     0292                     	;# 
  3002     0292                     	;# 
  3003     0293                     	;# 
  3004     0293                     	;# 
  3005     0294                     	;# 
  3006     0295                     	;# 
  3007     0296                     	;# 
  3008     0297                     	;# 
  3009     0298                     	;# 
  3010     0298                     	;# 
  3011     0299                     	;# 
  3012     0299                     	;# 
  3013     029A                     	;# 
  3014     029B                     	;# 
  3015     029C                     	;# 
  3016     029D                     	;# 
  3017     029F                     	;# 
  3018     030C                     	;# 
  3019     030C                     	;# 
  3020     030D                     	;# 
  3021     030E                     	;# 
  3022     030F                     	;# 
  3023     0310                     	;# 
  3024     0310                     	;# 
  3025     0311                     	;# 
  3026     0312                     	;# 
  3027     0313                     	;# 
  3028     0314                     	;# 
  3029     0314                     	;# 
  3030     0315                     	;# 
  3031     0316                     	;# 
  3032     0317                     	;# 
  3033     0318                     	;# 
  3034     0318                     	;# 
  3035     0319                     	;# 
  3036     031A                     	;# 
  3037     031B                     	;# 
  3038     031C                     	;# 
  3039     031C                     	;# 
  3040     031D                     	;# 
  3041     031E                     	;# 
  3042     031F                     	;# 
  3043     038C                     	;# 
  3044     038C                     	;# 
  3045     038D                     	;# 
  3046     038E                     	;# 
  3047     0390                     	;# 
  3048     0390                     	;# 
  3049     0391                     	;# 
  3050     0392                     	;# 
  3051     048C                     	;# 
  3052     048C                     	;# 
  3053     048D                     	;# 
  3054     048E                     	;# 
  3055     048F                     	;# 
  3056     048F                     	;# 
  3057     0490                     	;# 
  3058     0491                     	;# 
  3059     0492                     	;# 
  3060     0492                     	;# 
  3061     0493                     	;# 
  3062     0494                     	;# 
  3063     0495                     	;# 
  3064     0495                     	;# 
  3065     0496                     	;# 
  3066     0497                     	;# 
  3067     0498                     	;# 
  3068     0499                     	;# 
  3069     049A                     	;# 
  3070     049B                     	;# 
  3071     049C                     	;# 
  3072     049D                     	;# 
  3073     050C                     	;# 
  3074     050C                     	;# 
  3075     050D                     	;# 
  3076     050E                     	;# 
  3077     050F                     	;# 
  3078     050F                     	;# 
  3079     0510                     	;# 
  3080     0511                     	;# 
  3081     0512                     	;# 
  3082     0512                     	;# 
  3083     0513                     	;# 
  3084     0514                     	;# 
  3085     0515                     	;# 
  3086     0515                     	;# 
  3087     0516                     	;# 
  3088     0517                     	;# 
  3089     0518                     	;# 
  3090     0519                     	;# 
  3091     051A                     	;# 
  3092     051B                     	;# 
  3093     051C                     	;# 
  3094     051D                     	;# 
  3095     058C                     	;# 
  3096     058C                     	;# 
  3097     058D                     	;# 
  3098     058E                     	;# 
  3099     058F                     	;# 
  3100     058F                     	;# 
  3101     0590                     	;# 
  3102     0591                     	;# 
  3103     0592                     	;# 
  3104     0593                     	;# 
  3105     059C                     	;# 
  3106     059C                     	;# 
  3107     059D                     	;# 
  3108     059D                     	;# 
  3109     059E                     	;# 
  3110     059F                     	;# 
  3111     060C                     	;# 
  3112     060C                     	;# 
  3113     060D                     	;# 
  3114     060D                     	;# 
  3115     060E                     	;# 
  3116     060F                     	;# 
  3117     0610                     	;# 
  3118     0611                     	;# 
  3119     0612                     	;# 
  3120     0613                     	;# 
  3121     0614                     	;# 
  3122     0616                     	;# 
  3123     0616                     	;# 
  3124     0617                     	;# 
  3125     0617                     	;# 
  3126     0618                     	;# 
  3127     0619                     	;# 
  3128     061A                     	;# 
  3129     061B                     	;# 
  3130     061C                     	;# 
  3131     061D                     	;# 
  3132     061E                     	;# 
  3133     068C                     	;# 
  3134     068D                     	;# 
  3135     068E                     	;# 
  3136     068F                     	;# 
  3137     0690                     	;# 
  3138     0691                     	;# 
  3139     0692                     	;# 
  3140     0693                     	;# 
  3141     0694                     	;# 
  3142     070C                     	;# 
  3143     070D                     	;# 
  3144     070E                     	;# 
  3145     070F                     	;# 
  3146     0710                     	;# 
  3147     0711                     	;# 
  3148     0712                     	;# 
  3149     0713                     	;# 
  3150     0714                     	;# 
  3151     0716                     	;# 
  3152     0717                     	;# 
  3153     0718                     	;# 
  3154     0719                     	;# 
  3155     071A                     	;# 
  3156     071B                     	;# 
  3157     071C                     	;# 
  3158     071D                     	;# 
  3159     071E                     	;# 
  3160     0796                     	;# 
  3161     0797                     	;# 
  3162     0798                     	;# 
  3163     0799                     	;# 
  3164     079A                     	;# 
  3165     079B                     	;# 
  3166     079C                     	;# 
  3167     079D                     	;# 
  3168     080C                     	;# 
  3169     080D                     	;# 
  3170     080E                     	;# 
  3171     080F                     	;# 
  3172     0810                     	;# 
  3173     0811                     	;# 
  3174     0813                     	;# 
  3175     0814                     	;# 
  3176     081A                     	;# 
  3177     081A                     	;# 
  3178     081B                     	;# 
  3179     081C                     	;# 
  3180     081C                     	;# 
  3181     081D                     	;# 
  3182     081E                     	;# 
  3183     081F                     	;# 
  3184     088C                     	;# 
  3185     088D                     	;# 
  3186     088E                     	;# 
  3187     088F                     	;# 
  3188     0890                     	;# 
  3189     0891                     	;# 
  3190     0892                     	;# 
  3191     0893                     	;# 
  3192     0895                     	;# 
  3193     0896                     	;# 
  3194     0897                     	;# 
  3195     0898                     	;# 
  3196     0899                     	;# 
  3197     089A                     	;# 
  3198     089B                     	;# 
  3199     090C                     	;# 
  3200     090E                     	;# 
  3201     090F                     	;# 
  3202     091F                     	;# 
  3203     098F                     	;# 
  3204     098F                     	;# 
  3205     0990                     	;# 
  3206     0991                     	;# 
  3207     0992                     	;# 
  3208     0993                     	;# 
  3209     0994                     	;# 
  3210     0995                     	;# 
  3211     0996                     	;# 
  3212     0997                     	;# 
  3213     0A19                     	;# 
  3214     0A19                     	;# 
  3215     0A1A                     	;# 
  3216     0A1A                     	;# 
  3217     0A1B                     	;# 
  3218     0A1B                     	;# 
  3219     0A1B                     	;# 
  3220     0A1C                     	;# 
  3221     0A1C                     	;# 
  3222     0A1D                     	;# 
  3223     0A1D                     	;# 
  3224     0A1E                     	;# 
  3225     0A1E                     	;# 
  3226     0A1F                     	;# 
  3227     0A1F                     	;# 
  3228     0A1F                     	;# 
  3229     1E0F                     	;# 
  3230     1E10                     	;# 
  3231     1E11                     	;# 
  3232     1E12                     	;# 
  3233     1E13                     	;# 
  3234     1E14                     	;# 
  3235     1E15                     	;# 
  3236     1E16                     	;# 
  3237     1E17                     	;# 
  3238     1E18                     	;# 
  3239     1E19                     	;# 
  3240     1E1A                     	;# 
  3241     1E1B                     	;# 
  3242     1E1C                     	;# 
  3243     1E1D                     	;# 
  3244     1E1E                     	;# 
  3245     1E1F                     	;# 
  3246     1E20                     	;# 
  3247     1E21                     	;# 
  3248     1E22                     	;# 
  3249     1E23                     	;# 
  3250     1E24                     	;# 
  3251     1E25                     	;# 
  3252     1E26                     	;# 
  3253     1E27                     	;# 
  3254     1E28                     	;# 
  3255     1E29                     	;# 
  3256     1E2A                     	;# 
  3257     1E2B                     	;# 
  3258     1E2C                     	;# 
  3259     1E2D                     	;# 
  3260     1E2E                     	;# 
  3261     1E2F                     	;# 
  3262     1E30                     	;# 
  3263     1E31                     	;# 
  3264     1E32                     	;# 
  3265     1E33                     	;# 
  3266     1E34                     	;# 
  3267     1E35                     	;# 
  3268     1E36                     	;# 
  3269     1E37                     	;# 
  3270     1E8F                     	;# 
  3271     1E90                     	;# 
  3272     1E91                     	;# 
  3273     1E92                     	;# 
  3274     1E93                     	;# 
  3275     1E94                     	;# 
  3276     1E95                     	;# 
  3277     1E96                     	;# 
  3278     1E97                     	;# 
  3279     1E9C                     	;# 
  3280     1E9D                     	;# 
  3281     1E9E                     	;# 
  3282     1EA1                     	;# 
  3283     1EA2                     	;# 
  3284     1EA3                     	;# 
  3285     1EA4                     	;# 
  3286     1EA5                     	;# 
  3287     1EA9                     	;# 
  3288     1EAA                     	;# 
  3289     1EAB                     	;# 
  3290     1EAC                     	;# 
  3291     1EB1                     	;# 
  3292     1EB2                     	;# 
  3293     1EB3                     	;# 
  3294     1EB8                     	;# 
  3295     1EB9                     	;# 
  3296     1EBA                     	;# 
  3297     1EBB                     	;# 
  3298     1EBC                     	;# 
  3299     1EBD                     	;# 
  3300     1EBE                     	;# 
  3301     1EC3                     	;# 
  3302     1EC5                     	;# 
  3303     1EC6                     	;# 
  3304     1EC7                     	;# 
  3305     1EC8                     	;# 
  3306     1EC9                     	;# 
  3307     1ECA                     	;# 
  3308     1ECB                     	;# 
  3309     1ECC                     	;# 
  3310     1ECD                     	;# 
  3311     1ECE                     	;# 
  3312     1F10                     	;# 
  3313     1F11                     	;# 
  3314     1F12                     	;# 
  3315     1F13                     	;# 
  3316     1F14                     	;# 
  3317     1F15                     	;# 
  3318     1F16                     	;# 
  3319     1F17                     	;# 
  3320     1F18                     	;# 
  3321     1F19                     	;# 
  3322     1F1A                     	;# 
  3323     1F1B                     	;# 
  3324     1F1C                     	;# 
  3325     1F1D                     	;# 
  3326     1F1E                     	;# 
  3327     1F1F                     	;# 
  3328     1F20                     	;# 
  3329     1F21                     	;# 
  3330     1F22                     	;# 
  3331     1F23                     	;# 
  3332     1F24                     	;# 
  3333     1F25                     	;# 
  3334     1F26                     	;# 
  3335     1F27                     	;# 
  3336     1F38                     	;# 
  3337     1F39                     	;# 
  3338     1F3A                     	;# 
  3339     1F3B                     	;# 
  3340     1F3C                     	;# 
  3341     1F3D                     	;# 
  3342     1F3E                     	;# 
  3343     1F3F                     	;# 
  3344     1F43                     	;# 
  3345     1F44                     	;# 
  3346     1F45                     	;# 
  3347     1F46                     	;# 
  3348     1F47                     	;# 
  3349     1F48                     	;# 
  3350     1F49                     	;# 
  3351     1F4A                     	;# 
  3352     1F4E                     	;# 
  3353     1F4F                     	;# 
  3354     1F50                     	;# 
  3355     1F51                     	;# 
  3356     1F52                     	;# 
  3357     1F53                     	;# 
  3358     1F54                     	;# 
  3359     1F55                     	;# 
  3360     1F65                     	;# 
  3361     1F66                     	;# 
  3362     1F67                     	;# 
  3363     1F68                     	;# 
  3364     1F69                     	;# 
  3365     1F6A                     	;# 
  3366     1F6B                     	;# 
  3367     1FE4                     	;# 
  3368     1FE5                     	;# 
  3369     1FE6                     	;# 
  3370     1FE7                     	;# 
  3371     1FE8                     	;# 
  3372     1FE8                     	;# 
  3373     1FE9                     	;# 
  3374     1FEA                     	;# 
  3375     1FEB                     	;# 
  3376     1FED                     	;# 
  3377     1FEE                     	;# 
  3378     1FEF                     	;# 
  3379     0000                     	;# 
  3380     0001                     	;# 
  3381     0002                     	;# 
  3382     0003                     	;# 
  3383     0004                     	;# 
  3384     0005                     	;# 
  3385     0006                     	;# 
  3386     0007                     	;# 
  3387     0008                     	;# 
  3388     0009                     	;# 
  3389     000A                     	;# 
  3390     000B                     	;# 
  3391     000C                     	;# 
  3392     000D                     	;# 
  3393     000E                     	;# 
  3394     0010                     	;# 
  3395     0012                     	;# 
  3396     0013                     	;# 
  3397     0014                     	;# 
  3398     0016                     	;# 
  3399     0018                     	;# 
  3400     0019                     	;# 
  3401     001A                     	;# 
  3402     001C                     	;# 
  3403     008C                     	;# 
  3404     008C                     	;# 
  3405     008D                     	;# 
  3406     008E                     	;# 
  3407     008E                     	;# 
  3408     008F                     	;# 
  3409     0090                     	;# 
  3410     0090                     	;# 
  3411     0091                     	;# 
  3412     0092                     	;# 
  3413     0092                     	;# 
  3414     0093                     	;# 
  3415     0094                     	;# 
  3416     0094                     	;# 
  3417     0095                     	;# 
  3418     0096                     	;# 
  3419     0096                     	;# 
  3420     0097                     	;# 
  3421     0098                     	;# 
  3422     0099                     	;# 
  3423     009A                     	;# 
  3424     009B                     	;# 
  3425     009B                     	;# 
  3426     009C                     	;# 
  3427     009D                     	;# 
  3428     009D                     	;# 
  3429     009E                     	;# 
  3430     009F                     	;# 
  3431     010C                     	;# 
  3432     010C                     	;# 
  3433     010D                     	;# 
  3434     010E                     	;# 
  3435     010F                     	;# 
  3436     010F                     	;# 
  3437     0110                     	;# 
  3438     0111                     	;# 
  3439     0112                     	;# 
  3440     0113                     	;# 
  3441     0114                     	;# 
  3442     0115                     	;# 
  3443     0116                     	;# 
  3444     0117                     	;# 
  3445     0118                     	;# 
  3446     0119                     	;# 
  3447     0119                     	;# 
  3448     0119                     	;# 
  3449     011A                     	;# 
  3450     011A                     	;# 
  3451     011A                     	;# 
  3452     011B                     	;# 
  3453     011B                     	;# 
  3454     011B                     	;# 
  3455     011B                     	;# 
  3456     011B                     	;# 
  3457     011C                     	;# 
  3458     011C                     	;# 
  3459     011C                     	;# 
  3460     011D                     	;# 
  3461     011D                     	;# 
  3462     011D                     	;# 
  3463     011E                     	;# 
  3464     011E                     	;# 
  3465     011E                     	;# 
  3466     011F                     	;# 
  3467     011F                     	;# 
  3468     011F                     	;# 
  3469     011F                     	;# 
  3470     011F                     	;# 
  3471     018C                     	;# 
  3472     018D                     	;# 
  3473     018E                     	;# 
  3474     018F                     	;# 
  3475     0190                     	;# 
  3476     0191                     	;# 
  3477     0192                     	;# 
  3478     0196                     	;# 
  3479     0197                     	;# 
  3480     0198                     	;# 
  3481     0199                     	;# 
  3482     019A                     	;# 
  3483     019B                     	;# 
  3484     019C                     	;# 
  3485     020C                     	;# 
  3486     020D                     	;# 
  3487     020E                     	;# 
  3488     020E                     	;# 
  3489     020F                     	;# 
  3490     020F                     	;# 
  3491     0210                     	;# 
  3492     0210                     	;# 
  3493     0211                     	;# 
  3494     0211                     	;# 
  3495     0212                     	;# 
  3496     0213                     	;# 
  3497     0214                     	;# 
  3498     0214                     	;# 
  3499     0215                     	;# 
  3500     0215                     	;# 
  3501     0216                     	;# 
  3502     0216                     	;# 
  3503     0217                     	;# 
  3504     0217                     	;# 
  3505     0218                     	;# 
  3506     0219                     	;# 
  3507     021A                     	;# 
  3508     021A                     	;# 
  3509     021B                     	;# 
  3510     021B                     	;# 
  3511     021C                     	;# 
  3512     021C                     	;# 
  3513     021D                     	;# 
  3514     021D                     	;# 
  3515     021E                     	;# 
  3516     021F                     	;# 
  3517     028C                     	;# 
  3518     028C                     	;# 
  3519     028D                     	;# 
  3520     028D                     	;# 
  3521     028E                     	;# 
  3522     028F                     	;# 
  3523     0290                     	;# 
  3524     0291                     	;# 
  3525     0292                     	;# 
  3526     0292                     	;# 
  3527     0293                     	;# 
  3528     0293                     	;# 
  3529     0294                     	;# 
  3530     0295                     	;# 
  3531     0296                     	;# 
  3532     0297                     	;# 
  3533     0298                     	;# 
  3534     0298                     	;# 
  3535     0299                     	;# 
  3536     0299                     	;# 
  3537     029A                     	;# 
  3538     029B                     	;# 
  3539     029C                     	;# 
  3540     029D                     	;# 
  3541     029F                     	;# 
  3542     030C                     	;# 
  3543     030C                     	;# 
  3544     030D                     	;# 
  3545     030E                     	;# 
  3546     030F                     	;# 
  3547     0310                     	;# 
  3548     0310                     	;# 
  3549     0311                     	;# 
  3550     0312                     	;# 
  3551     0313                     	;# 
  3552     0314                     	;# 
  3553     0314                     	;# 
  3554     0315                     	;# 
  3555     0316                     	;# 
  3556     0317                     	;# 
  3557     0318                     	;# 
  3558     0318                     	;# 
  3559     0319                     	;# 
  3560     031A                     	;# 
  3561     031B                     	;# 
  3562     031C                     	;# 
  3563     031C                     	;# 
  3564     031D                     	;# 
  3565     031E                     	;# 
  3566     031F                     	;# 
  3567     038C                     	;# 
  3568     038C                     	;# 
  3569     038D                     	;# 
  3570     038E                     	;# 
  3571     0390                     	;# 
  3572     0390                     	;# 
  3573     0391                     	;# 
  3574     0392                     	;# 
  3575     048C                     	;# 
  3576     048C                     	;# 
  3577     048D                     	;# 
  3578     048E                     	;# 
  3579     048F                     	;# 
  3580     048F                     	;# 
  3581     0490                     	;# 
  3582     0491                     	;# 
  3583     0492                     	;# 
  3584     0492                     	;# 
  3585     0493                     	;# 
  3586     0494                     	;# 
  3587     0495                     	;# 
  3588     0495                     	;# 
  3589     0496                     	;# 
  3590     0497                     	;# 
  3591     0498                     	;# 
  3592     0499                     	;# 
  3593     049A                     	;# 
  3594     049B                     	;# 
  3595     049C                     	;# 
  3596     049D                     	;# 
  3597     050C                     	;# 
  3598     050C                     	;# 
  3599     050D                     	;# 
  3600     050E                     	;# 
  3601     050F                     	;# 
  3602     050F                     	;# 
  3603     0510                     	;# 
  3604     0511                     	;# 
  3605     0512                     	;# 
  3606     0512                     	;# 
  3607     0513                     	;# 
  3608     0514                     	;# 
  3609     0515                     	;# 
  3610     0515                     	;# 
  3611     0516                     	;# 
  3612     0517                     	;# 
  3613     0518                     	;# 
  3614     0519                     	;# 
  3615     051A                     	;# 
  3616     051B                     	;# 
  3617     051C                     	;# 
  3618     051D                     	;# 
  3619     058C                     	;# 
  3620     058C                     	;# 
  3621     058D                     	;# 
  3622     058E                     	;# 
  3623     058F                     	;# 
  3624     058F                     	;# 
  3625     0590                     	;# 
  3626     0591                     	;# 
  3627     0592                     	;# 
  3628     0593                     	;# 
  3629     059C                     	;# 
  3630     059C                     	;# 
  3631     059D                     	;# 
  3632     059D                     	;# 
  3633     059E                     	;# 
  3634     059F                     	;# 
  3635     060C                     	;# 
  3636     060C                     	;# 
  3637     060D                     	;# 
  3638     060D                     	;# 
  3639     060E                     	;# 
  3640     060F                     	;# 
  3641     0610                     	;# 
  3642     0611                     	;# 
  3643     0612                     	;# 
  3644     0613                     	;# 
  3645     0614                     	;# 
  3646     0616                     	;# 
  3647     0616                     	;# 
  3648     0617                     	;# 
  3649     0617                     	;# 
  3650     0618                     	;# 
  3651     0619                     	;# 
  3652     061A                     	;# 
  3653     061B                     	;# 
  3654     061C                     	;# 
  3655     061D                     	;# 
  3656     061E                     	;# 
  3657     068C                     	;# 
  3658     068D                     	;# 
  3659     068E                     	;# 
  3660     068F                     	;# 
  3661     0690                     	;# 
  3662     0691                     	;# 
  3663     0692                     	;# 
  3664     0693                     	;# 
  3665     0694                     	;# 
  3666     070C                     	;# 
  3667     070D                     	;# 
  3668     070E                     	;# 
  3669     070F                     	;# 
  3670     0710                     	;# 
  3671     0711                     	;# 
  3672     0712                     	;# 
  3673     0713                     	;# 
  3674     0714                     	;# 
  3675     0716                     	;# 
  3676     0717                     	;# 
  3677     0718                     	;# 
  3678     0719                     	;# 
  3679     071A                     	;# 
  3680     071B                     	;# 
  3681     071C                     	;# 
  3682     071D                     	;# 
  3683     071E                     	;# 
  3684     0796                     	;# 
  3685     0797                     	;# 
  3686     0798                     	;# 
  3687     0799                     	;# 
  3688     079A                     	;# 
  3689     079B                     	;# 
  3690     079C                     	;# 
  3691     079D                     	;# 
  3692     080C                     	;# 
  3693     080D                     	;# 
  3694     080E                     	;# 
  3695     080F                     	;# 
  3696     0810                     	;# 
  3697     0811                     	;# 
  3698     0813                     	;# 
  3699     0814                     	;# 
  3700     081A                     	;# 
  3701     081A                     	;# 
  3702     081B                     	;# 
  3703     081C                     	;# 
  3704     081C                     	;# 
  3705     081D                     	;# 
  3706     081E                     	;# 
  3707     081F                     	;# 
  3708     088C                     	;# 
  3709     088D                     	;# 
  3710     088E                     	;# 
  3711     088F                     	;# 
  3712     0890                     	;# 
  3713     0891                     	;# 
  3714     0892                     	;# 
  3715     0893                     	;# 
  3716     0895                     	;# 
  3717     0896                     	;# 
  3718     0897                     	;# 
  3719     0898                     	;# 
  3720     0899                     	;# 
  3721     089A                     	;# 
  3722     089B                     	;# 
  3723     090C                     	;# 
  3724     090E                     	;# 
  3725     090F                     	;# 
  3726     091F                     	;# 
  3727     098F                     	;# 
  3728     098F                     	;# 
  3729     0990                     	;# 
  3730     0991                     	;# 
  3731     0992                     	;# 
  3732     0993                     	;# 
  3733     0994                     	;# 
  3734     0995                     	;# 
  3735     0996                     	;# 
  3736     0997                     	;# 
  3737     0A19                     	;# 
  3738     0A19                     	;# 
  3739     0A1A                     	;# 
  3740     0A1A                     	;# 
  3741     0A1B                     	;# 
  3742     0A1B                     	;# 
  3743     0A1B                     	;# 
  3744     0A1C                     	;# 
  3745     0A1C                     	;# 
  3746     0A1D                     	;# 
  3747     0A1D                     	;# 
  3748     0A1E                     	;# 
  3749     0A1E                     	;# 
  3750     0A1F                     	;# 
  3751     0A1F                     	;# 
  3752     0A1F                     	;# 
  3753     1E0F                     	;# 
  3754     1E10                     	;# 
  3755     1E11                     	;# 
  3756     1E12                     	;# 
  3757     1E13                     	;# 
  3758     1E14                     	;# 
  3759     1E15                     	;# 
  3760     1E16                     	;# 
  3761     1E17                     	;# 
  3762     1E18                     	;# 
  3763     1E19                     	;# 
  3764     1E1A                     	;# 
  3765     1E1B                     	;# 
  3766     1E1C                     	;# 
  3767     1E1D                     	;# 
  3768     1E1E                     	;# 
  3769     1E1F                     	;# 
  3770     1E20                     	;# 
  3771     1E21                     	;# 
  3772     1E22                     	;# 
  3773     1E23                     	;# 
  3774     1E24                     	;# 
  3775     1E25                     	;# 
  3776     1E26                     	;# 
  3777     1E27                     	;# 
  3778     1E28                     	;# 
  3779     1E29                     	;# 
  3780     1E2A                     	;# 
  3781     1E2B                     	;# 
  3782     1E2C                     	;# 
  3783     1E2D                     	;# 
  3784     1E2E                     	;# 
  3785     1E2F                     	;# 
  3786     1E30                     	;# 
  3787     1E31                     	;# 
  3788     1E32                     	;# 
  3789     1E33                     	;# 
  3790     1E34                     	;# 
  3791     1E35                     	;# 
  3792     1E36                     	;# 
  3793     1E37                     	;# 
  3794     1E8F                     	;# 
  3795     1E90                     	;# 
  3796     1E91                     	;# 
  3797     1E92                     	;# 
  3798     1E93                     	;# 
  3799     1E94                     	;# 
  3800     1E95                     	;# 
  3801     1E96                     	;# 
  3802     1E97                     	;# 
  3803     1E9C                     	;# 
  3804     1E9D                     	;# 
  3805     1E9E                     	;# 
  3806     1EA1                     	;# 
  3807     1EA2                     	;# 
  3808     1EA3                     	;# 
  3809     1EA4                     	;# 
  3810     1EA5                     	;# 
  3811     1EA9                     	;# 
  3812     1EAA                     	;# 
  3813     1EAB                     	;# 
  3814     1EAC                     	;# 
  3815     1EB1                     	;# 
  3816     1EB2                     	;# 
  3817     1EB3                     	;# 
  3818     1EB8                     	;# 
  3819     1EB9                     	;# 
  3820     1EBA                     	;# 
  3821     1EBB                     	;# 
  3822     1EBC                     	;# 
  3823     1EBD                     	;# 
  3824     1EBE                     	;# 
  3825     1EC3                     	;# 
  3826     1EC5                     	;# 
  3827     1EC6                     	;# 
  3828     1EC7                     	;# 
  3829     1EC8                     	;# 
  3830     1EC9                     	;# 
  3831     1ECA                     	;# 
  3832     1ECB                     	;# 
  3833     1ECC                     	;# 
  3834     1ECD                     	;# 
  3835     1ECE                     	;# 
  3836     1F10                     	;# 
  3837     1F11                     	;# 
  3838     1F12                     	;# 
  3839     1F13                     	;# 
  3840     1F14                     	;# 
  3841     1F15                     	;# 
  3842     1F16                     	;# 
  3843     1F17                     	;# 
  3844     1F18                     	;# 
  3845     1F19                     	;# 
  3846     1F1A                     	;# 
  3847     1F1B                     	;# 
  3848     1F1C                     	;# 
  3849     1F1D                     	;# 
  3850     1F1E                     	;# 
  3851     1F1F                     	;# 
  3852     1F20                     	;# 
  3853     1F21                     	;# 
  3854     1F22                     	;# 
  3855     1F23                     	;# 
  3856     1F24                     	;# 
  3857     1F25                     	;# 
  3858     1F26                     	;# 
  3859     1F27                     	;# 
  3860     1F38                     	;# 
  3861     1F39                     	;# 
  3862     1F3A                     	;# 
  3863     1F3B                     	;# 
  3864     1F3C                     	;# 
  3865     1F3D                     	;# 
  3866     1F3E                     	;# 
  3867     1F3F                     	;# 
  3868     1F43                     	;# 
  3869     1F44                     	;# 
  3870     1F45                     	;# 
  3871     1F46                     	;# 
  3872     1F47                     	;# 
  3873     1F48                     	;# 
  3874     1F49                     	;# 
  3875     1F4A                     	;# 
  3876     1F4E                     	;# 
  3877     1F4F                     	;# 
  3878     1F50                     	;# 
  3879     1F51                     	;# 
  3880     1F52                     	;# 
  3881     1F53                     	;# 
  3882     1F54                     	;# 
  3883     1F55                     	;# 
  3884     1F65                     	;# 
  3885     1F66                     	;# 
  3886     1F67                     	;# 
  3887     1F68                     	;# 
  3888     1F69                     	;# 
  3889     1F6A                     	;# 
  3890     1F6B                     	;# 
  3891     1FE4                     	;# 
  3892     1FE5                     	;# 
  3893     1FE6                     	;# 
  3894     1FE7                     	;# 
  3895     1FE8                     	;# 
  3896     1FE8                     	;# 
  3897     1FE9                     	;# 
  3898     1FEA                     	;# 
  3899     1FEB                     	;# 
  3900     1FED                     	;# 
  3901     1FEE                     	;# 
  3902     1FEF                     	;# 
  3903     0000                     	;# 
  3904     0001                     	;# 
  3905     0002                     	;# 
  3906     0003                     	;# 
  3907     0004                     	;# 
  3908     0005                     	;# 
  3909     0006                     	;# 
  3910     0007                     	;# 
  3911     0008                     	;# 
  3912     0009                     	;# 
  3913     000A                     	;# 
  3914     000B                     	;# 
  3915     000C                     	;# 
  3916     000D                     	;# 
  3917     000E                     	;# 
  3918     0010                     	;# 
  3919     0012                     	;# 
  3920     0013                     	;# 
  3921     0014                     	;# 
  3922     0016                     	;# 
  3923     0018                     	;# 
  3924     0019                     	;# 
  3925     001A                     	;# 
  3926     001C                     	;# 
  3927     008C                     	;# 
  3928     008C                     	;# 
  3929     008D                     	;# 
  3930     008E                     	;# 
  3931     008E                     	;# 
  3932     008F                     	;# 
  3933     0090                     	;# 
  3934     0090                     	;# 
  3935     0091                     	;# 
  3936     0092                     	;# 
  3937     0092                     	;# 
  3938     0093                     	;# 
  3939     0094                     	;# 
  3940     0094                     	;# 
  3941     0095                     	;# 
  3942     0096                     	;# 
  3943     0096                     	;# 
  3944     0097                     	;# 
  3945     0098                     	;# 
  3946     0099                     	;# 
  3947     009A                     	;# 
  3948     009B                     	;# 
  3949     009B                     	;# 
  3950     009C                     	;# 
  3951     009D                     	;# 
  3952     009D                     	;# 
  3953     009E                     	;# 
  3954     009F                     	;# 
  3955     010C                     	;# 
  3956     010C                     	;# 
  3957     010D                     	;# 
  3958     010E                     	;# 
  3959     010F                     	;# 
  3960     010F                     	;# 
  3961     0110                     	;# 
  3962     0111                     	;# 
  3963     0112                     	;# 
  3964     0113                     	;# 
  3965     0114                     	;# 
  3966     0115                     	;# 
  3967     0116                     	;# 
  3968     0117                     	;# 
  3969     0118                     	;# 
  3970     0119                     	;# 
  3971     0119                     	;# 
  3972     0119                     	;# 
  3973     011A                     	;# 
  3974     011A                     	;# 
  3975     011A                     	;# 
  3976     011B                     	;# 
  3977     011B                     	;# 
  3978     011B                     	;# 
  3979     011B                     	;# 
  3980     011B                     	;# 
  3981     011C                     	;# 
  3982     011C                     	;# 
  3983     011C                     	;# 
  3984     011D                     	;# 
  3985     011D                     	;# 
  3986     011D                     	;# 
  3987     011E                     	;# 
  3988     011E                     	;# 
  3989     011E                     	;# 
  3990     011F                     	;# 
  3991     011F                     	;# 
  3992     011F                     	;# 
  3993     011F                     	;# 
  3994     011F                     	;# 
  3995     018C                     	;# 
  3996     018D                     	;# 
  3997     018E                     	;# 
  3998     018F                     	;# 
  3999     0190                     	;# 
  4000     0191                     	;# 
  4001     0192                     	;# 
  4002     0196                     	;# 
  4003     0197                     	;# 
  4004     0198                     	;# 
  4005     0199                     	;# 
  4006     019A                     	;# 
  4007     019B                     	;# 
  4008     019C                     	;# 
  4009     020C                     	;# 
  4010     020D                     	;# 
  4011     020E                     	;# 
  4012     020E                     	;# 
  4013     020F                     	;# 
  4014     020F                     	;# 
  4015     0210                     	;# 
  4016     0210                     	;# 
  4017     0211                     	;# 
  4018     0211                     	;# 
  4019     0212                     	;# 
  4020     0213                     	;# 
  4021     0214                     	;# 
  4022     0214                     	;# 
  4023     0215                     	;# 
  4024     0215                     	;# 
  4025     0216                     	;# 
  4026     0216                     	;# 
  4027     0217                     	;# 
  4028     0217                     	;# 
  4029     0218                     	;# 
  4030     0219                     	;# 
  4031     021A                     	;# 
  4032     021A                     	;# 
  4033     021B                     	;# 
  4034     021B                     	;# 
  4035     021C                     	;# 
  4036     021C                     	;# 
  4037     021D                     	;# 
  4038     021D                     	;# 
  4039     021E                     	;# 
  4040     021F                     	;# 
  4041     028C                     	;# 
  4042     028C                     	;# 
  4043     028D                     	;# 
  4044     028D                     	;# 
  4045     028E                     	;# 
  4046     028F                     	;# 
  4047     0290                     	;# 
  4048     0291                     	;# 
  4049     0292                     	;# 
  4050     0292                     	;# 
  4051     0293                     	;# 
  4052     0293                     	;# 
  4053     0294                     	;# 
  4054     0295                     	;# 
  4055     0296                     	;# 
  4056     0297                     	;# 
  4057     0298                     	;# 
  4058     0298                     	;# 
  4059     0299                     	;# 
  4060     0299                     	;# 
  4061     029A                     	;# 
  4062     029B                     	;# 
  4063     029C                     	;# 
  4064     029D                     	;# 
  4065     029F                     	;# 
  4066     030C                     	;# 
  4067     030C                     	;# 
  4068     030D                     	;# 
  4069     030E                     	;# 
  4070     030F                     	;# 
  4071     0310                     	;# 
  4072     0310                     	;# 
  4073     0311                     	;# 
  4074     0312                     	;# 
  4075     0313                     	;# 
  4076     0314                     	;# 
  4077     0314                     	;# 
  4078     0315                     	;# 
  4079     0316                     	;# 
  4080     0317                     	;# 
  4081     0318                     	;# 
  4082     0318                     	;# 
  4083     0319                     	;# 
  4084     031A                     	;# 
  4085     031B                     	;# 
  4086     031C                     	;# 
  4087     031C                     	;# 
  4088     031D                     	;# 
  4089     031E                     	;# 
  4090     031F                     	;# 
  4091     038C                     	;# 
  4092     038C                     	;# 
  4093     038D                     	;# 
  4094     038E                     	;# 
  4095     0390                     	;# 
  4096     0390                     	;# 
  4097     0391                     	;# 
  4098     0392                     	;# 
  4099     048C                     	;# 
  4100     048C                     	;# 
  4101     048D                     	;# 
  4102     048E                     	;# 
  4103     048F                     	;# 
  4104     048F                     	;# 
  4105     0490                     	;# 
  4106     0491                     	;# 
  4107     0492                     	;# 
  4108     0492                     	;# 
  4109     0493                     	;# 
  4110     0494                     	;# 
  4111     0495                     	;# 
  4112     0495                     	;# 
  4113     0496                     	;# 
  4114     0497                     	;# 
  4115     0498                     	;# 
  4116     0499                     	;# 
  4117     049A                     	;# 
  4118     049B                     	;# 
  4119     049C                     	;# 
  4120     049D                     	;# 
  4121     050C                     	;# 
  4122     050C                     	;# 
  4123     050D                     	;# 
  4124     050E                     	;# 
  4125     050F                     	;# 
  4126     050F                     	;# 
  4127     0510                     	;# 
  4128     0511                     	;# 
  4129     0512                     	;# 
  4130     0512                     	;# 
  4131     0513                     	;# 
  4132     0514                     	;# 
  4133     0515                     	;# 
  4134     0515                     	;# 
  4135     0516                     	;# 
  4136     0517                     	;# 
  4137     0518                     	;# 
  4138     0519                     	;# 
  4139     051A                     	;# 
  4140     051B                     	;# 
  4141     051C                     	;# 
  4142     051D                     	;# 
  4143     058C                     	;# 
  4144     058C                     	;# 
  4145     058D                     	;# 
  4146     058E                     	;# 
  4147     058F                     	;# 
  4148     058F                     	;# 
  4149     0590                     	;# 
  4150     0591                     	;# 
  4151     0592                     	;# 
  4152     0593                     	;# 
  4153     059C                     	;# 
  4154     059C                     	;# 
  4155     059D                     	;# 
  4156     059D                     	;# 
  4157     059E                     	;# 
  4158     059F                     	;# 
  4159     060C                     	;# 
  4160     060C                     	;# 
  4161     060D                     	;# 
  4162     060D                     	;# 
  4163     060E                     	;# 
  4164     060F                     	;# 
  4165     0610                     	;# 
  4166     0611                     	;# 
  4167     0612                     	;# 
  4168     0613                     	;# 
  4169     0614                     	;# 
  4170     0616                     	;# 
  4171     0616                     	;# 
  4172     0617                     	;# 
  4173     0617                     	;# 
  4174     0618                     	;# 
  4175     0619                     	;# 
  4176     061A                     	;# 
  4177     061B                     	;# 
  4178     061C                     	;# 
  4179     061D                     	;# 
  4180     061E                     	;# 
  4181     068C                     	;# 
  4182     068D                     	;# 
  4183     068E                     	;# 
  4184     068F                     	;# 
  4185     0690                     	;# 
  4186     0691                     	;# 
  4187     0692                     	;# 
  4188     0693                     	;# 
  4189     0694                     	;# 
  4190     070C                     	;# 
  4191     070D                     	;# 
  4192     070E                     	;# 
  4193     070F                     	;# 
  4194     0710                     	;# 
  4195     0711                     	;# 
  4196     0712                     	;# 
  4197     0713                     	;# 
  4198     0714                     	;# 
  4199     0716                     	;# 
  4200     0717                     	;# 
  4201     0718                     	;# 
  4202     0719                     	;# 
  4203     071A                     	;# 
  4204     071B                     	;# 
  4205     071C                     	;# 
  4206     071D                     	;# 
  4207     071E                     	;# 
  4208     0796                     	;# 
  4209     0797                     	;# 
  4210     0798                     	;# 
  4211     0799                     	;# 
  4212     079A                     	;# 
  4213     079B                     	;# 
  4214     079C                     	;# 
  4215     079D                     	;# 
  4216     080C                     	;# 
  4217     080D                     	;# 
  4218     080E                     	;# 
  4219     080F                     	;# 
  4220     0810                     	;# 
  4221     0811                     	;# 
  4222     0813                     	;# 
  4223     0814                     	;# 
  4224     081A                     	;# 
  4225     081A                     	;# 
  4226     081B                     	;# 
  4227     081C                     	;# 
  4228     081C                     	;# 
  4229     081D                     	;# 
  4230     081E                     	;# 
  4231     081F                     	;# 
  4232     088C                     	;# 
  4233     088D                     	;# 
  4234     088E                     	;# 
  4235     088F                     	;# 
  4236     0890                     	;# 
  4237     0891                     	;# 
  4238     0892                     	;# 
  4239     0893                     	;# 
  4240     0895                     	;# 
  4241     0896                     	;# 
  4242     0897                     	;# 
  4243     0898                     	;# 
  4244     0899                     	;# 
  4245     089A                     	;# 
  4246     089B                     	;# 
  4247     090C                     	;# 
  4248     090E                     	;# 
  4249     090F                     	;# 
  4250     091F                     	;# 
  4251     098F                     	;# 
  4252     098F                     	;# 
  4253     0990                     	;# 
  4254     0991                     	;# 
  4255     0992                     	;# 
  4256     0993                     	;# 
  4257     0994                     	;# 
  4258     0995                     	;# 
  4259     0996                     	;# 
  4260     0997                     	;# 
  4261     0A19                     	;# 
  4262     0A19                     	;# 
  4263     0A1A                     	;# 
  4264     0A1A                     	;# 
  4265     0A1B                     	;# 
  4266     0A1B                     	;# 
  4267     0A1B                     	;# 
  4268     0A1C                     	;# 
  4269     0A1C                     	;# 
  4270     0A1D                     	;# 
  4271     0A1D                     	;# 
  4272     0A1E                     	;# 
  4273     0A1E                     	;# 
  4274     0A1F                     	;# 
  4275     0A1F                     	;# 
  4276     0A1F                     	;# 
  4277     1E0F                     	;# 
  4278     1E10                     	;# 
  4279     1E11                     	;# 
  4280     1E12                     	;# 
  4281     1E13                     	;# 
  4282     1E14                     	;# 
  4283     1E15                     	;# 
  4284     1E16                     	;# 
  4285     1E17                     	;# 
  4286     1E18                     	;# 
  4287     1E19                     	;# 
  4288     1E1A                     	;# 
  4289     1E1B                     	;# 
  4290     1E1C                     	;# 
  4291     1E1D                     	;# 
  4292     1E1E                     	;# 
  4293     1E1F                     	;# 
  4294     1E20                     	;# 
  4295     1E21                     	;# 
  4296     1E22                     	;# 
  4297     1E23                     	;# 
  4298     1E24                     	;# 
  4299     1E25                     	;# 
  4300     1E26                     	;# 
  4301     1E27                     	;# 
  4302     1E28                     	;# 
  4303     1E29                     	;# 
  4304     1E2A                     	;# 
  4305     1E2B                     	;# 
  4306     1E2C                     	;# 
  4307     1E2D                     	;# 
  4308     1E2E                     	;# 
  4309     1E2F                     	;# 
  4310     1E30                     	;# 
  4311     1E31                     	;# 
  4312     1E32                     	;# 
  4313     1E33                     	;# 
  4314     1E34                     	;# 
  4315     1E35                     	;# 
  4316     1E36                     	;# 
  4317     1E37                     	;# 
  4318     1E8F                     	;# 
  4319     1E90                     	;# 
  4320     1E91                     	;# 
  4321     1E92                     	;# 
  4322     1E93                     	;# 
  4323     1E94                     	;# 
  4324     1E95                     	;# 
  4325     1E96                     	;# 
  4326     1E97                     	;# 
  4327     1E9C                     	;# 
  4328     1E9D                     	;# 
  4329     1E9E                     	;# 
  4330     1EA1                     	;# 
  4331     1EA2                     	;# 
  4332     1EA3                     	;# 
  4333     1EA4                     	;# 
  4334     1EA5                     	;# 
  4335     1EA9                     	;# 
  4336     1EAA                     	;# 
  4337     1EAB                     	;# 
  4338     1EAC                     	;# 
  4339     1EB1                     	;# 
  4340     1EB2                     	;# 
  4341     1EB3                     	;# 
  4342     1EB8                     	;# 
  4343     1EB9                     	;# 
  4344     1EBA                     	;# 
  4345     1EBB                     	;# 
  4346     1EBC                     	;# 
  4347     1EBD                     	;# 
  4348     1EBE                     	;# 
  4349     1EC3                     	;# 
  4350     1EC5                     	;# 
  4351     1EC6                     	;# 
  4352     1EC7                     	;# 
  4353     1EC8                     	;# 
  4354     1EC9                     	;# 
  4355     1ECA                     	;# 
  4356     1ECB                     	;# 
  4357     1ECC                     	;# 
  4358     1ECD                     	;# 
  4359     1ECE                     	;# 
  4360     1F10                     	;# 
  4361     1F11                     	;# 
  4362     1F12                     	;# 
  4363     1F13                     	;# 
  4364     1F14                     	;# 
  4365     1F15                     	;# 
  4366     1F16                     	;# 
  4367     1F17                     	;# 
  4368     1F18                     	;# 
  4369     1F19                     	;# 
  4370     1F1A                     	;# 
  4371     1F1B                     	;# 
  4372     1F1C                     	;# 
  4373     1F1D                     	;# 
  4374     1F1E                     	;# 
  4375     1F1F                     	;# 
  4376     1F20                     	;# 
  4377     1F21                     	;# 
  4378     1F22                     	;# 
  4379     1F23                     	;# 
  4380     1F24                     	;# 
  4381     1F25                     	;# 
  4382     1F26                     	;# 
  4383     1F27                     	;# 
  4384     1F38                     	;# 
  4385     1F39                     	;# 
  4386     1F3A                     	;# 
  4387     1F3B                     	;# 
  4388     1F3C                     	;# 
  4389     1F3D                     	;# 
  4390     1F3E                     	;# 
  4391     1F3F                     	;# 
  4392     1F43                     	;# 
  4393     1F44                     	;# 
  4394     1F45                     	;# 
  4395     1F46                     	;# 
  4396     1F47                     	;# 
  4397     1F48                     	;# 
  4398     1F49                     	;# 
  4399     1F4A                     	;# 
  4400     1F4E                     	;# 
  4401     1F4F                     	;# 
  4402     1F50                     	;# 
  4403     1F51                     	;# 
  4404     1F52                     	;# 
  4405     1F53                     	;# 
  4406     1F54                     	;# 
  4407     1F55                     	;# 
  4408     1F65                     	;# 
  4409     1F66                     	;# 
  4410     1F67                     	;# 
  4411     1F68                     	;# 
  4412     1F69                     	;# 
  4413     1F6A                     	;# 
  4414     1F6B                     	;# 
  4415     1FE4                     	;# 
  4416     1FE5                     	;# 
  4417     1FE6                     	;# 
  4418     1FE7                     	;# 
  4419     1FE8                     	;# 
  4420     1FE8                     	;# 
  4421     1FE9                     	;# 
  4422     1FEA                     	;# 
  4423     1FEB                     	;# 
  4424     1FED                     	;# 
  4425     1FEE                     	;# 
  4426     1FEF                     	;# 
  4427     0000                     	;# 
  4428     0001                     	;# 
  4429     0002                     	;# 
  4430     0003                     	;# 
  4431     0004                     	;# 
  4432     0005                     	;# 
  4433     0006                     	;# 
  4434     0007                     	;# 
  4435     0008                     	;# 
  4436     0009                     	;# 
  4437     000A                     	;# 
  4438     000B                     	;# 
  4439     000C                     	;# 
  4440     000D                     	;# 
  4441     000E                     	;# 
  4442     0010                     	;# 
  4443     0012                     	;# 
  4444     0013                     	;# 
  4445     0014                     	;# 
  4446     0016                     	;# 
  4447     0018                     	;# 
  4448     0019                     	;# 
  4449     001A                     	;# 
  4450     001C                     	;# 
  4451     008C                     	;# 
  4452     008C                     	;# 
  4453     008D                     	;# 
  4454     008E                     	;# 
  4455     008E                     	;# 
  4456     008F                     	;# 
  4457     0090                     	;# 
  4458     0090                     	;# 
  4459     0091                     	;# 
  4460     0092                     	;# 
  4461     0092                     	;# 
  4462     0093                     	;# 
  4463     0094                     	;# 
  4464     0094                     	;# 
  4465     0095                     	;# 
  4466     0096                     	;# 
  4467     0096                     	;# 
  4468     0097                     	;# 
  4469     0098                     	;# 
  4470     0099                     	;# 
  4471     009A                     	;# 
  4472     009B                     	;# 
  4473     009B                     	;# 
  4474     009C                     	;# 
  4475     009D                     	;# 
  4476     009D                     	;# 
  4477     009E                     	;# 
  4478     009F                     	;# 
  4479     010C                     	;# 
  4480     010C                     	;# 
  4481     010D                     	;# 
  4482     010E                     	;# 
  4483     010F                     	;# 
  4484     010F                     	;# 
  4485     0110                     	;# 
  4486     0111                     	;# 
  4487     0112                     	;# 
  4488     0113                     	;# 
  4489     0114                     	;# 
  4490     0115                     	;# 
  4491     0116                     	;# 
  4492     0117                     	;# 
  4493     0118                     	;# 
  4494     0119                     	;# 
  4495     0119                     	;# 
  4496     0119                     	;# 
  4497     011A                     	;# 
  4498     011A                     	;# 
  4499     011A                     	;# 
  4500     011B                     	;# 
  4501     011B                     	;# 
  4502     011B                     	;# 
  4503     011B                     	;# 
  4504     011B                     	;# 
  4505     011C                     	;# 
  4506     011C                     	;# 
  4507     011C                     	;# 
  4508     011D                     	;# 
  4509     011D                     	;# 
  4510     011D                     	;# 
  4511     011E                     	;# 
  4512     011E                     	;# 
  4513     011E                     	;# 
  4514     011F                     	;# 
  4515     011F                     	;# 
  4516     011F                     	;# 
  4517     011F                     	;# 
  4518     011F                     	;# 
  4519     018C                     	;# 
  4520     018D                     	;# 
  4521     018E                     	;# 
  4522     018F                     	;# 
  4523     0190                     	;# 
  4524     0191                     	;# 
  4525     0192                     	;# 
  4526     0196                     	;# 
  4527     0197                     	;# 
  4528     0198                     	;# 
  4529     0199                     	;# 
  4530     019A                     	;# 
  4531     019B                     	;# 
  4532     019C                     	;# 
  4533     020C                     	;# 
  4534     020D                     	;# 
  4535     020E                     	;# 
  4536     020E                     	;# 
  4537     020F                     	;# 
  4538     020F                     	;# 
  4539     0210                     	;# 
  4540     0210                     	;# 
  4541     0211                     	;# 
  4542     0211                     	;# 
  4543     0212                     	;# 
  4544     0213                     	;# 
  4545     0214                     	;# 
  4546     0214                     	;# 
  4547     0215                     	;# 
  4548     0215                     	;# 
  4549     0216                     	;# 
  4550     0216                     	;# 
  4551     0217                     	;# 
  4552     0217                     	;# 
  4553     0218                     	;# 
  4554     0219                     	;# 
  4555     021A                     	;# 
  4556     021A                     	;# 
  4557     021B                     	;# 
  4558     021B                     	;# 
  4559     021C                     	;# 
  4560     021C                     	;# 
  4561     021D                     	;# 
  4562     021D                     	;# 
  4563     021E                     	;# 
  4564     021F                     	;# 
  4565     028C                     	;# 
  4566     028C                     	;# 
  4567     028D                     	;# 
  4568     028D                     	;# 
  4569     028E                     	;# 
  4570     028F                     	;# 
  4571     0290                     	;# 
  4572     0291                     	;# 
  4573     0292                     	;# 
  4574     0292                     	;# 
  4575     0293                     	;# 
  4576     0293                     	;# 
  4577     0294                     	;# 
  4578     0295                     	;# 
  4579     0296                     	;# 
  4580     0297                     	;# 
  4581     0298                     	;# 
  4582     0298                     	;# 
  4583     0299                     	;# 
  4584     0299                     	;# 
  4585     029A                     	;# 
  4586     029B                     	;# 
  4587     029C                     	;# 
  4588     029D                     	;# 
  4589     029F                     	;# 
  4590     030C                     	;# 
  4591     030C                     	;# 
  4592     030D                     	;# 
  4593     030E                     	;# 
  4594     030F                     	;# 
  4595     0310                     	;# 
  4596     0310                     	;# 
  4597     0311                     	;# 
  4598     0312                     	;# 
  4599     0313                     	;# 
  4600     0314                     	;# 
  4601     0314                     	;# 
  4602     0315                     	;# 
  4603     0316                     	;# 
  4604     0317                     	;# 
  4605     0318                     	;# 
  4606     0318                     	;# 
  4607     0319                     	;# 
  4608     031A                     	;# 
  4609     031B                     	;# 
  4610     031C                     	;# 
  4611     031C                     	;# 
  4612     031D                     	;# 
  4613     031E                     	;# 
  4614     031F                     	;# 
  4615     038C                     	;# 
  4616     038C                     	;# 
  4617     038D                     	;# 
  4618     038E                     	;# 
  4619     0390                     	;# 
  4620     0390                     	;# 
  4621     0391                     	;# 
  4622     0392                     	;# 
  4623     048C                     	;# 
  4624     048C                     	;# 
  4625     048D                     	;# 
  4626     048E                     	;# 
  4627     048F                     	;# 
  4628     048F                     	;# 
  4629     0490                     	;# 
  4630     0491                     	;# 
  4631     0492                     	;# 
  4632     0492                     	;# 
  4633     0493                     	;# 
  4634     0494                     	;# 
  4635     0495                     	;# 
  4636     0495                     	;# 
  4637     0496                     	;# 
  4638     0497                     	;# 
  4639     0498                     	;# 
  4640     0499                     	;# 
  4641     049A                     	;# 
  4642     049B                     	;# 
  4643     049C                     	;# 
  4644     049D                     	;# 
  4645     050C                     	;# 
  4646     050C                     	;# 
  4647     050D                     	;# 
  4648     050E                     	;# 
  4649     050F                     	;# 
  4650     050F                     	;# 
  4651     0510                     	;# 
  4652     0511                     	;# 
  4653     0512                     	;# 
  4654     0512                     	;# 
  4655     0513                     	;# 
  4656     0514                     	;# 
  4657     0515                     	;# 
  4658     0515                     	;# 
  4659     0516                     	;# 
  4660     0517                     	;# 
  4661     0518                     	;# 
  4662     0519                     	;# 
  4663     051A                     	;# 
  4664     051B                     	;# 
  4665     051C                     	;# 
  4666     051D                     	;# 
  4667     058C                     	;# 
  4668     058C                     	;# 
  4669     058D                     	;# 
  4670     058E                     	;# 
  4671     058F                     	;# 
  4672     058F                     	;# 
  4673     0590                     	;# 
  4674     0591                     	;# 
  4675     0592                     	;# 
  4676     0593                     	;# 
  4677     059C                     	;# 
  4678     059C                     	;# 
  4679     059D                     	;# 
  4680     059D                     	;# 
  4681     059E                     	;# 
  4682     059F                     	;# 
  4683     060C                     	;# 
  4684     060C                     	;# 
  4685     060D                     	;# 
  4686     060D                     	;# 
  4687     060E                     	;# 
  4688     060F                     	;# 
  4689     0610                     	;# 
  4690     0611                     	;# 
  4691     0612                     	;# 
  4692     0613                     	;# 
  4693     0614                     	;# 
  4694     0616                     	;# 
  4695     0616                     	;# 
  4696     0617                     	;# 
  4697     0617                     	;# 
  4698     0618                     	;# 
  4699     0619                     	;# 
  4700     061A                     	;# 
  4701     061B                     	;# 
  4702     061C                     	;# 
  4703     061D                     	;# 
  4704     061E                     	;# 
  4705     068C                     	;# 
  4706     068D                     	;# 
  4707     068E                     	;# 
  4708     068F                     	;# 
  4709     0690                     	;# 
  4710     0691                     	;# 
  4711     0692                     	;# 
  4712     0693                     	;# 
  4713     0694                     	;# 
  4714     070C                     	;# 
  4715     070D                     	;# 
  4716     070E                     	;# 
  4717     070F                     	;# 
  4718     0710                     	;# 
  4719     0711                     	;# 
  4720     0712                     	;# 
  4721     0713                     	;# 
  4722     0714                     	;# 
  4723     0716                     	;# 
  4724     0717                     	;# 
  4725     0718                     	;# 
  4726     0719                     	;# 
  4727     071A                     	;# 
  4728     071B                     	;# 
  4729     071C                     	;# 
  4730     071D                     	;# 
  4731     071E                     	;# 
  4732     0796                     	;# 
  4733     0797                     	;# 
  4734     0798                     	;# 
  4735     0799                     	;# 
  4736     079A                     	;# 
  4737     079B                     	;# 
  4738     079C                     	;# 
  4739     079D                     	;# 
  4740     080C                     	;# 
  4741     080D                     	;# 
  4742     080E                     	;# 
  4743     080F                     	;# 
  4744     0810                     	;# 
  4745     0811                     	;# 
  4746     0813                     	;# 
  4747     0814                     	;# 
  4748     081A                     	;# 
  4749     081A                     	;# 
  4750     081B                     	;# 
  4751     081C                     	;# 
  4752     081C                     	;# 
  4753     081D                     	;# 
  4754     081E                     	;# 
  4755     081F                     	;# 
  4756     088C                     	;# 
  4757     088D                     	;# 
  4758     088E                     	;# 
  4759     088F                     	;# 
  4760     0890                     	;# 
  4761     0891                     	;# 
  4762     0892                     	;# 
  4763     0893                     	;# 
  4764     0895                     	;# 
  4765     0896                     	;# 
  4766     0897                     	;# 
  4767     0898                     	;# 
  4768     0899                     	;# 
  4769     089A                     	;# 
  4770     089B                     	;# 
  4771     090C                     	;# 
  4772     090E                     	;# 
  4773     090F                     	;# 
  4774     091F                     	;# 
  4775     098F                     	;# 
  4776     098F                     	;# 
  4777     0990                     	;# 
  4778     0991                     	;# 
  4779     0992                     	;# 
  4780     0993                     	;# 
  4781     0994                     	;# 
  4782     0995                     	;# 
  4783     0996                     	;# 
  4784     0997                     	;# 
  4785     0A19                     	;# 
  4786     0A19                     	;# 
  4787     0A1A                     	;# 
  4788     0A1A                     	;# 
  4789     0A1B                     	;# 
  4790     0A1B                     	;# 
  4791     0A1B                     	;# 
  4792     0A1C                     	;# 
  4793     0A1C                     	;# 
  4794     0A1D                     	;# 
  4795     0A1D                     	;# 
  4796     0A1E                     	;# 
  4797     0A1E                     	;# 
  4798     0A1F                     	;# 
  4799     0A1F                     	;# 
  4800     0A1F                     	;# 
  4801     1E0F                     	;# 
  4802     1E10                     	;# 
  4803     1E11                     	;# 
  4804     1E12                     	;# 
  4805     1E13                     	;# 
  4806     1E14                     	;# 
  4807     1E15                     	;# 
  4808     1E16                     	;# 
  4809     1E17                     	;# 
  4810     1E18                     	;# 
  4811     1E19                     	;# 
  4812     1E1A                     	;# 
  4813     1E1B                     	;# 
  4814     1E1C                     	;# 
  4815     1E1D                     	;# 
  4816     1E1E                     	;# 
  4817     1E1F                     	;# 
  4818     1E20                     	;# 
  4819     1E21                     	;# 
  4820     1E22                     	;# 
  4821     1E23                     	;# 
  4822     1E24                     	;# 
  4823     1E25                     	;# 
  4824     1E26                     	;# 
  4825     1E27                     	;# 
  4826     1E28                     	;# 
  4827     1E29                     	;# 
  4828     1E2A                     	;# 
  4829     1E2B                     	;# 
  4830     1E2C                     	;# 
  4831     1E2D                     	;# 
  4832     1E2E                     	;# 
  4833     1E2F                     	;# 
  4834     1E30                     	;# 
  4835     1E31                     	;# 
  4836     1E32                     	;# 
  4837     1E33                     	;# 
  4838     1E34                     	;# 
  4839     1E35                     	;# 
  4840     1E36                     	;# 
  4841     1E37                     	;# 
  4842     1E8F                     	;# 
  4843     1E90                     	;# 
  4844     1E91                     	;# 
  4845     1E92                     	;# 
  4846     1E93                     	;# 
  4847     1E94                     	;# 
  4848     1E95                     	;# 
  4849     1E96                     	;# 
  4850     1E97                     	;# 
  4851     1E9C                     	;# 
  4852     1E9D                     	;# 
  4853     1E9E                     	;# 
  4854     1EA1                     	;# 
  4855     1EA2                     	;# 
  4856     1EA3                     	;# 
  4857     1EA4                     	;# 
  4858     1EA5                     	;# 
  4859     1EA9                     	;# 
  4860     1EAA                     	;# 
  4861     1EAB                     	;# 
  4862     1EAC                     	;# 
  4863     1EB1                     	;# 
  4864     1EB2                     	;# 
  4865     1EB3                     	;# 
  4866     1EB8                     	;# 
  4867     1EB9                     	;# 
  4868     1EBA                     	;# 
  4869     1EBB                     	;# 
  4870     1EBC                     	;# 
  4871     1EBD                     	;# 
  4872     1EBE                     	;# 
  4873     1EC3                     	;# 
  4874     1EC5                     	;# 
  4875     1EC6                     	;# 
  4876     1EC7                     	;# 
  4877     1EC8                     	;# 
  4878     1EC9                     	;# 
  4879     1ECA                     	;# 
  4880     1ECB                     	;# 
  4881     1ECC                     	;# 
  4882     1ECD                     	;# 
  4883     1ECE                     	;# 
  4884     1F10                     	;# 
  4885     1F11                     	;# 
  4886     1F12                     	;# 
  4887     1F13                     	;# 
  4888     1F14                     	;# 
  4889     1F15                     	;# 
  4890     1F16                     	;# 
  4891     1F17                     	;# 
  4892     1F18                     	;# 
  4893     1F19                     	;# 
  4894     1F1A                     	;# 
  4895     1F1B                     	;# 
  4896     1F1C                     	;# 
  4897     1F1D                     	;# 
  4898     1F1E                     	;# 
  4899     1F1F                     	;# 
  4900     1F20                     	;# 
  4901     1F21                     	;# 
  4902     1F22                     	;# 
  4903     1F23                     	;# 
  4904     1F24                     	;# 
  4905     1F25                     	;# 
  4906     1F26                     	;# 
  4907     1F27                     	;# 
  4908     1F38                     	;# 
  4909     1F39                     	;# 
  4910     1F3A                     	;# 
  4911     1F3B                     	;# 
  4912     1F3C                     	;# 
  4913     1F3D                     	;# 
  4914     1F3E                     	;# 
  4915     1F3F                     	;# 
  4916     1F43                     	;# 
  4917     1F44                     	;# 
  4918     1F45                     	;# 
  4919     1F46                     	;# 
  4920     1F47                     	;# 
  4921     1F48                     	;# 
  4922     1F49                     	;# 
  4923     1F4A                     	;# 
  4924     1F4E                     	;# 
  4925     1F4F                     	;# 
  4926     1F50                     	;# 
  4927     1F51                     	;# 
  4928     1F52                     	;# 
  4929     1F53                     	;# 
  4930     1F54                     	;# 
  4931     1F55                     	;# 
  4932     1F65                     	;# 
  4933     1F66                     	;# 
  4934     1F67                     	;# 
  4935     1F68                     	;# 
  4936     1F69                     	;# 
  4937     1F6A                     	;# 
  4938     1F6B                     	;# 
  4939     1FE4                     	;# 
  4940     1FE5                     	;# 
  4941     1FE6                     	;# 
  4942     1FE7                     	;# 
  4943     1FE8                     	;# 
  4944     1FE8                     	;# 
  4945     1FE9                     	;# 
  4946     1FEA                     	;# 
  4947     1FEB                     	;# 
  4948     1FED                     	;# 
  4949     1FEE                     	;# 
  4950     1FEF                     	;# 
  4951     0000                     	;# 
  4952     0001                     	;# 
  4953     0002                     	;# 
  4954     0003                     	;# 
  4955     0004                     	;# 
  4956     0005                     	;# 
  4957     0006                     	;# 
  4958     0007                     	;# 
  4959     0008                     	;# 
  4960     0009                     	;# 
  4961     000A                     	;# 
  4962     000B                     	;# 
  4963     000C                     	;# 
  4964     000D                     	;# 
  4965     000E                     	;# 
  4966     0010                     	;# 
  4967     0012                     	;# 
  4968     0013                     	;# 
  4969     0014                     	;# 
  4970     0016                     	;# 
  4971     0018                     	;# 
  4972     0019                     	;# 
  4973     001A                     	;# 
  4974     001C                     	;# 
  4975     008C                     	;# 
  4976     008C                     	;# 
  4977     008D                     	;# 
  4978     008E                     	;# 
  4979     008E                     	;# 
  4980     008F                     	;# 
  4981     0090                     	;# 
  4982     0090                     	;# 
  4983     0091                     	;# 
  4984     0092                     	;# 
  4985     0092                     	;# 
  4986     0093                     	;# 
  4987     0094                     	;# 
  4988     0094                     	;# 
  4989     0095                     	;# 
  4990     0096                     	;# 
  4991     0096                     	;# 
  4992     0097                     	;# 
  4993     0098                     	;# 
  4994     0099                     	;# 
  4995     009A                     	;# 
  4996     009B                     	;# 
  4997     009B                     	;# 
  4998     009C                     	;# 
  4999     009D                     	;# 
  5000     009D                     	;# 
  5001     009E                     	;# 
  5002     009F                     	;# 
  5003     010C                     	;# 
  5004     010C                     	;# 
  5005     010D                     	;# 
  5006     010E                     	;# 
  5007     010F                     	;# 
  5008     010F                     	;# 
  5009     0110                     	;# 
  5010     0111                     	;# 
  5011     0112                     	;# 
  5012     0113                     	;# 
  5013     0114                     	;# 
  5014     0115                     	;# 
  5015     0116                     	;# 
  5016     0117                     	;# 
  5017     0118                     	;# 
  5018     0119                     	;# 
  5019     0119                     	;# 
  5020     0119                     	;# 
  5021     011A                     	;# 
  5022     011A                     	;# 
  5023     011A                     	;# 
  5024     011B                     	;# 
  5025     011B                     	;# 
  5026     011B                     	;# 
  5027     011B                     	;# 
  5028     011B                     	;# 
  5029     011C                     	;# 
  5030     011C                     	;# 
  5031     011C                     	;# 
  5032     011D                     	;# 
  5033     011D                     	;# 
  5034     011D                     	;# 
  5035     011E                     	;# 
  5036     011E                     	;# 
  5037     011E                     	;# 
  5038     011F                     	;# 
  5039     011F                     	;# 
  5040     011F                     	;# 
  5041     011F                     	;# 
  5042     011F                     	;# 
  5043     018C                     	;# 
  5044     018D                     	;# 
  5045     018E                     	;# 
  5046     018F                     	;# 
  5047     0190                     	;# 
  5048     0191                     	;# 
  5049     0192                     	;# 
  5050     0196                     	;# 
  5051     0197                     	;# 
  5052     0198                     	;# 
  5053     0199                     	;# 
  5054     019A                     	;# 
  5055     019B                     	;# 
  5056     019C                     	;# 
  5057     020C                     	;# 
  5058     020D                     	;# 
  5059     020E                     	;# 
  5060     020E                     	;# 
  5061     020F                     	;# 
  5062     020F                     	;# 
  5063     0210                     	;# 
  5064     0210                     	;# 
  5065     0211                     	;# 
  5066     0211                     	;# 
  5067     0212                     	;# 
  5068     0213                     	;# 
  5069     0214                     	;# 
  5070     0214                     	;# 
  5071     0215                     	;# 
  5072     0215                     	;# 
  5073     0216                     	;# 
  5074     0216                     	;# 
  5075     0217                     	;# 
  5076     0217                     	;# 
  5077     0218                     	;# 
  5078     0219                     	;# 
  5079     021A                     	;# 
  5080     021A                     	;# 
  5081     021B                     	;# 
  5082     021B                     	;# 
  5083     021C                     	;# 
  5084     021C                     	;# 
  5085     021D                     	;# 
  5086     021D                     	;# 
  5087     021E                     	;# 
  5088     021F                     	;# 
  5089     028C                     	;# 
  5090     028C                     	;# 
  5091     028D                     	;# 
  5092     028D                     	;# 
  5093     028E                     	;# 
  5094     028F                     	;# 
  5095     0290                     	;# 
  5096     0291                     	;# 
  5097     0292                     	;# 
  5098     0292                     	;# 
  5099     0293                     	;# 
  5100     0293                     	;# 
  5101     0294                     	;# 
  5102     0295                     	;# 
  5103     0296                     	;# 
  5104     0297                     	;# 
  5105     0298                     	;# 
  5106     0298                     	;# 
  5107     0299                     	;# 
  5108     0299                     	;# 
  5109     029A                     	;# 
  5110     029B                     	;# 
  5111     029C                     	;# 
  5112     029D                     	;# 
  5113     029F                     	;# 
  5114     030C                     	;# 
  5115     030C                     	;# 
  5116     030D                     	;# 
  5117     030E                     	;# 
  5118     030F                     	;# 
  5119     0310                     	;# 
  5120     0310                     	;# 
  5121     0311                     	;# 
  5122     0312                     	;# 
  5123     0313                     	;# 
  5124     0314                     	;# 
  5125     0314                     	;# 
  5126     0315                     	;# 
  5127     0316                     	;# 
  5128     0317                     	;# 
  5129     0318                     	;# 
  5130     0318                     	;# 
  5131     0319                     	;# 
  5132     031A                     	;# 
  5133     031B                     	;# 
  5134     031C                     	;# 
  5135     031C                     	;# 
  5136     031D                     	;# 
  5137     031E                     	;# 
  5138     031F                     	;# 
  5139     038C                     	;# 
  5140     038C                     	;# 
  5141     038D                     	;# 
  5142     038E                     	;# 
  5143     0390                     	;# 
  5144     0390                     	;# 
  5145     0391                     	;# 
  5146     0392                     	;# 
  5147     048C                     	;# 
  5148     048C                     	;# 
  5149     048D                     	;# 
  5150     048E                     	;# 
  5151     048F                     	;# 
  5152     048F                     	;# 
  5153     0490                     	;# 
  5154     0491                     	;# 
  5155     0492                     	;# 
  5156     0492                     	;# 
  5157     0493                     	;# 
  5158     0494                     	;# 
  5159     0495                     	;# 
  5160     0495                     	;# 
  5161     0496                     	;# 
  5162     0497                     	;# 
  5163     0498                     	;# 
  5164     0499                     	;# 
  5165     049A                     	;# 
  5166     049B                     	;# 
  5167     049C                     	;# 
  5168     049D                     	;# 
  5169     050C                     	;# 
  5170     050C                     	;# 
  5171     050D                     	;# 
  5172     050E                     	;# 
  5173     050F                     	;# 
  5174     050F                     	;# 
  5175     0510                     	;# 
  5176     0511                     	;# 
  5177     0512                     	;# 
  5178     0512                     	;# 
  5179     0513                     	;# 
  5180     0514                     	;# 
  5181     0515                     	;# 
  5182     0515                     	;# 
  5183     0516                     	;# 
  5184     0517                     	;# 
  5185     0518                     	;# 
  5186     0519                     	;# 
  5187     051A                     	;# 
  5188     051B                     	;# 
  5189     051C                     	;# 
  5190     051D                     	;# 
  5191     058C                     	;# 
  5192     058C                     	;# 
  5193     058D                     	;# 
  5194     058E                     	;# 
  5195     058F                     	;# 
  5196     058F                     	;# 
  5197     0590                     	;# 
  5198     0591                     	;# 
  5199     0592                     	;# 
  5200     0593                     	;# 
  5201     059C                     	;# 
  5202     059C                     	;# 
  5203     059D                     	;# 
  5204     059D                     	;# 
  5205     059E                     	;# 
  5206     059F                     	;# 
  5207     060C                     	;# 
  5208     060C                     	;# 
  5209     060D                     	;# 
  5210     060D                     	;# 
  5211     060E                     	;# 
  5212     060F                     	;# 
  5213     0610                     	;# 
  5214     0611                     	;# 
  5215     0612                     	;# 
  5216     0613                     	;# 
  5217     0614                     	;# 
  5218     0616                     	;# 
  5219     0616                     	;# 
  5220     0617                     	;# 
  5221     0617                     	;# 
  5222     0618                     	;# 
  5223     0619                     	;# 
  5224     061A                     	;# 
  5225     061B                     	;# 
  5226     061C                     	;# 
  5227     061D                     	;# 
  5228     061E                     	;# 
  5229     068C                     	;# 
  5230     068D                     	;# 
  5231     068E                     	;# 
  5232     068F                     	;# 
  5233     0690                     	;# 
  5234     0691                     	;# 
  5235     0692                     	;# 
  5236     0693                     	;# 
  5237     0694                     	;# 
  5238     070C                     	;# 
  5239     070D                     	;# 
  5240     070E                     	;# 
  5241     070F                     	;# 
  5242     0710                     	;# 
  5243     0711                     	;# 
  5244     0712                     	;# 
  5245     0713                     	;# 
  5246     0714                     	;# 
  5247     0716                     	;# 
  5248     0717                     	;# 
  5249     0718                     	;# 
  5250     0719                     	;# 
  5251     071A                     	;# 
  5252     071B                     	;# 
  5253     071C                     	;# 
  5254     071D                     	;# 
  5255     071E                     	;# 
  5256     0796                     	;# 
  5257     0797                     	;# 
  5258     0798                     	;# 
  5259     0799                     	;# 
  5260     079A                     	;# 
  5261     079B                     	;# 
  5262     079C                     	;# 
  5263     079D                     	;# 
  5264     080C                     	;# 
  5265     080D                     	;# 
  5266     080E                     	;# 
  5267     080F                     	;# 
  5268     0810                     	;# 
  5269     0811                     	;# 
  5270     0813                     	;# 
  5271     0814                     	;# 
  5272     081A                     	;# 
  5273     081A                     	;# 
  5274     081B                     	;# 
  5275     081C                     	;# 
  5276     081C                     	;# 
  5277     081D                     	;# 
  5278     081E                     	;# 
  5279     081F                     	;# 
  5280     088C                     	;# 
  5281     088D                     	;# 
  5282     088E                     	;# 
  5283     088F                     	;# 
  5284     0890                     	;# 
  5285     0891                     	;# 
  5286     0892                     	;# 
  5287     0893                     	;# 
  5288     0895                     	;# 
  5289     0896                     	;# 
  5290     0897                     	;# 
  5291     0898                     	;# 
  5292     0899                     	;# 
  5293     089A                     	;# 
  5294     089B                     	;# 
  5295     090C                     	;# 
  5296     090E                     	;# 
  5297     090F                     	;# 
  5298     091F                     	;# 
  5299     098F                     	;# 
  5300     098F                     	;# 
  5301     0990                     	;# 
  5302     0991                     	;# 
  5303     0992                     	;# 
  5304     0993                     	;# 
  5305     0994                     	;# 
  5306     0995                     	;# 
  5307     0996                     	;# 
  5308     0997                     	;# 
  5309     0A19                     	;# 
  5310     0A19                     	;# 
  5311     0A1A                     	;# 
  5312     0A1A                     	;# 
  5313     0A1B                     	;# 
  5314     0A1B                     	;# 
  5315     0A1B                     	;# 
  5316     0A1C                     	;# 
  5317     0A1C                     	;# 
  5318     0A1D                     	;# 
  5319     0A1D                     	;# 
  5320     0A1E                     	;# 
  5321     0A1E                     	;# 
  5322     0A1F                     	;# 
  5323     0A1F                     	;# 
  5324     0A1F                     	;# 
  5325     1E0F                     	;# 
  5326     1E10                     	;# 
  5327     1E11                     	;# 
  5328     1E12                     	;# 
  5329     1E13                     	;# 
  5330     1E14                     	;# 
  5331     1E15                     	;# 
  5332     1E16                     	;# 
  5333     1E17                     	;# 
  5334     1E18                     	;# 
  5335     1E19                     	;# 
  5336     1E1A                     	;# 
  5337     1E1B                     	;# 
  5338     1E1C                     	;# 
  5339     1E1D                     	;# 
  5340     1E1E                     	;# 
  5341     1E1F                     	;# 
  5342     1E20                     	;# 
  5343     1E21                     	;# 
  5344     1E22                     	;# 
  5345     1E23                     	;# 
  5346     1E24                     	;# 
  5347     1E25                     	;# 
  5348     1E26                     	;# 
  5349     1E27                     	;# 
  5350     1E28                     	;# 
  5351     1E29                     	;# 
  5352     1E2A                     	;# 
  5353     1E2B                     	;# 
  5354     1E2C                     	;# 
  5355     1E2D                     	;# 
  5356     1E2E                     	;# 
  5357     1E2F                     	;# 
  5358     1E30                     	;# 
  5359     1E31                     	;# 
  5360     1E32                     	;# 
  5361     1E33                     	;# 
  5362     1E34                     	;# 
  5363     1E35                     	;# 
  5364     1E36                     	;# 
  5365     1E37                     	;# 
  5366     1E8F                     	;# 
  5367     1E90                     	;# 
  5368     1E91                     	;# 
  5369     1E92                     	;# 
  5370     1E93                     	;# 
  5371     1E94                     	;# 
  5372     1E95                     	;# 
  5373     1E96                     	;# 
  5374     1E97                     	;# 
  5375     1E9C                     	;# 
  5376     1E9D                     	;# 
  5377     1E9E                     	;# 
  5378     1EA1                     	;# 
  5379     1EA2                     	;# 
  5380     1EA3                     	;# 
  5381     1EA4                     	;# 
  5382     1EA5                     	;# 
  5383     1EA9                     	;# 
  5384     1EAA                     	;# 
  5385     1EAB                     	;# 
  5386     1EAC                     	;# 
  5387     1EB1                     	;# 
  5388     1EB2                     	;# 
  5389     1EB3                     	;# 
  5390     1EB8                     	;# 
  5391     1EB9                     	;# 
  5392     1EBA                     	;# 
  5393     1EBB                     	;# 
  5394     1EBC                     	;# 
  5395     1EBD                     	;# 
  5396     1EBE                     	;# 
  5397     1EC3                     	;# 
  5398     1EC5                     	;# 
  5399     1EC6                     	;# 
  5400     1EC7                     	;# 
  5401     1EC8                     	;# 
  5402     1EC9                     	;# 
  5403     1ECA                     	;# 
  5404     1ECB                     	;# 
  5405     1ECC                     	;# 
  5406     1ECD                     	;# 
  5407     1ECE                     	;# 
  5408     1F10                     	;# 
  5409     1F11                     	;# 
  5410     1F12                     	;# 
  5411     1F13                     	;# 
  5412     1F14                     	;# 
  5413     1F15                     	;# 
  5414     1F16                     	;# 
  5415     1F17                     	;# 
  5416     1F18                     	;# 
  5417     1F19                     	;# 
  5418     1F1A                     	;# 
  5419     1F1B                     	;# 
  5420     1F1C                     	;# 
  5421     1F1D                     	;# 
  5422     1F1E                     	;# 
  5423     1F1F                     	;# 
  5424     1F20                     	;# 
  5425     1F21                     	;# 
  5426     1F22                     	;# 
  5427     1F23                     	;# 
  5428     1F24                     	;# 
  5429     1F25                     	;# 
  5430     1F26                     	;# 
  5431     1F27                     	;# 
  5432     1F38                     	;# 
  5433     1F39                     	;# 
  5434     1F3A                     	;# 
  5435     1F3B                     	;# 
  5436     1F3C                     	;# 
  5437     1F3D                     	;# 
  5438     1F3E                     	;# 
  5439     1F3F                     	;# 
  5440     1F43                     	;# 
  5441     1F44                     	;# 
  5442     1F45                     	;# 
  5443     1F46                     	;# 
  5444     1F47                     	;# 
  5445     1F48                     	;# 
  5446     1F49                     	;# 
  5447     1F4A                     	;# 
  5448     1F4E                     	;# 
  5449     1F4F                     	;# 
  5450     1F50                     	;# 
  5451     1F51                     	;# 
  5452     1F52                     	;# 
  5453     1F53                     	;# 
  5454     1F54                     	;# 
  5455     1F55                     	;# 
  5456     1F65                     	;# 
  5457     1F66                     	;# 
  5458     1F67                     	;# 
  5459     1F68                     	;# 
  5460     1F69                     	;# 
  5461     1F6A                     	;# 
  5462     1F6B                     	;# 
  5463     1FE4                     	;# 
  5464     1FE5                     	;# 
  5465     1FE6                     	;# 
  5466     1FE7                     	;# 
  5467     1FE8                     	;# 
  5468     1FE8                     	;# 
  5469     1FE9                     	;# 
  5470     1FEA                     	;# 
  5471     1FEB                     	;# 
  5472     1FED                     	;# 
  5473     1FEE                     	;# 
  5474     1FEF                     	;# 
  5475     0000                     	;# 
  5476     0001                     	;# 
  5477     0002                     	;# 
  5478     0003                     	;# 
  5479     0004                     	;# 
  5480     0005                     	;# 
  5481     0006                     	;# 
  5482     0007                     	;# 
  5483     0008                     	;# 
  5484     0009                     	;# 
  5485     000A                     	;# 
  5486     000B                     	;# 
  5487     000C                     	;# 
  5488     000D                     	;# 
  5489     000E                     	;# 
  5490     0010                     	;# 
  5491     0012                     	;# 
  5492     0013                     	;# 
  5493     0014                     	;# 
  5494     0016                     	;# 
  5495     0018                     	;# 
  5496     0019                     	;# 
  5497     001A                     	;# 
  5498     001C                     	;# 
  5499     008C                     	;# 
  5500     008C                     	;# 
  5501     008D                     	;# 
  5502     008E                     	;# 
  5503     008E                     	;# 
  5504     008F                     	;# 
  5505     0090                     	;# 
  5506     0090                     	;# 
  5507     0091                     	;# 
  5508     0092                     	;# 
  5509     0092                     	;# 
  5510     0093                     	;# 
  5511     0094                     	;# 
  5512     0094                     	;# 
  5513     0095                     	;# 
  5514     0096                     	;# 
  5515     0096                     	;# 
  5516     0097                     	;# 
  5517     0098                     	;# 
  5518     0099                     	;# 
  5519     009A                     	;# 
  5520     009B                     	;# 
  5521     009B                     	;# 
  5522     009C                     	;# 
  5523     009D                     	;# 
  5524     009D                     	;# 
  5525     009E                     	;# 
  5526     009F                     	;# 
  5527     010C                     	;# 
  5528     010C                     	;# 
  5529     010D                     	;# 
  5530     010E                     	;# 
  5531     010F                     	;# 
  5532     010F                     	;# 
  5533     0110                     	;# 
  5534     0111                     	;# 
  5535     0112                     	;# 
  5536     0113                     	;# 
  5537     0114                     	;# 
  5538     0115                     	;# 
  5539     0116                     	;# 
  5540     0117                     	;# 
  5541     0118                     	;# 
  5542     0119                     	;# 
  5543     0119                     	;# 
  5544     0119                     	;# 
  5545     011A                     	;# 
  5546     011A                     	;# 
  5547     011A                     	;# 
  5548     011B                     	;# 
  5549     011B                     	;# 
  5550     011B                     	;# 
  5551     011B                     	;# 
  5552     011B                     	;# 
  5553     011C                     	;# 
  5554     011C                     	;# 
  5555     011C                     	;# 
  5556     011D                     	;# 
  5557     011D                     	;# 
  5558     011D                     	;# 
  5559     011E                     	;# 
  5560     011E                     	;# 
  5561     011E                     	;# 
  5562     011F                     	;# 
  5563     011F                     	;# 
  5564     011F                     	;# 
  5565     011F                     	;# 
  5566     011F                     	;# 
  5567     018C                     	;# 
  5568     018D                     	;# 
  5569     018E                     	;# 
  5570     018F                     	;# 
  5571     0190                     	;# 
  5572     0191                     	;# 
  5573     0192                     	;# 
  5574     0196                     	;# 
  5575     0197                     	;# 
  5576     0198                     	;# 
  5577     0199                     	;# 
  5578     019A                     	;# 
  5579     019B                     	;# 
  5580     019C                     	;# 
  5581     020C                     	;# 
  5582     020D                     	;# 
  5583     020E                     	;# 
  5584     020E                     	;# 
  5585     020F                     	;# 
  5586     020F                     	;# 
  5587     0210                     	;# 
  5588     0210                     	;# 
  5589     0211                     	;# 
  5590     0211                     	;# 
  5591     0212                     	;# 
  5592     0213                     	;# 
  5593     0214                     	;# 
  5594     0214                     	;# 
  5595     0215                     	;# 
  5596     0215                     	;# 
  5597     0216                     	;# 
  5598     0216                     	;# 
  5599     0217                     	;# 
  5600     0217                     	;# 
  5601     0218                     	;# 
  5602     0219                     	;# 
  5603     021A                     	;# 
  5604     021A                     	;# 
  5605     021B                     	;# 
  5606     021B                     	;# 
  5607     021C                     	;# 
  5608     021C                     	;# 
  5609     021D                     	;# 
  5610     021D                     	;# 
  5611     021E                     	;# 
  5612     021F                     	;# 
  5613     028C                     	;# 
  5614     028C                     	;# 
  5615     028D                     	;# 
  5616     028D                     	;# 
  5617     028E                     	;# 
  5618     028F                     	;# 
  5619     0290                     	;# 
  5620     0291                     	;# 
  5621     0292                     	;# 
  5622     0292                     	;# 
  5623     0293                     	;# 
  5624     0293                     	;# 
  5625     0294                     	;# 
  5626     0295                     	;# 
  5627     0296                     	;# 
  5628     0297                     	;# 
  5629     0298                     	;# 
  5630     0298                     	;# 
  5631     0299                     	;# 
  5632     0299                     	;# 
  5633     029A                     	;# 
  5634     029B                     	;# 
  5635     029C                     	;# 
  5636     029D                     	;# 
  5637     029F                     	;# 
  5638     030C                     	;# 
  5639     030C                     	;# 
  5640     030D                     	;# 
  5641     030E                     	;# 
  5642     030F                     	;# 
  5643     0310                     	;# 
  5644     0310                     	;# 
  5645     0311                     	;# 
  5646     0312                     	;# 
  5647     0313                     	;# 
  5648     0314                     	;# 
  5649     0314                     	;# 
  5650     0315                     	;# 
  5651     0316                     	;# 
  5652     0317                     	;# 
  5653     0318                     	;# 
  5654     0318                     	;# 
  5655     0319                     	;# 
  5656     031A                     	;# 
  5657     031B                     	;# 
  5658     031C                     	;# 
  5659     031C                     	;# 
  5660     031D                     	;# 
  5661     031E                     	;# 
  5662     031F                     	;# 
  5663     038C                     	;# 
  5664     038C                     	;# 
  5665     038D                     	;# 
  5666     038E                     	;# 
  5667     0390                     	;# 
  5668     0390                     	;# 
  5669     0391                     	;# 
  5670     0392                     	;# 
  5671     048C                     	;# 
  5672     048C                     	;# 
  5673     048D                     	;# 
  5674     048E                     	;# 
  5675     048F                     	;# 
  5676     048F                     	;# 
  5677     0490                     	;# 
  5678     0491                     	;# 
  5679     0492                     	;# 
  5680     0492                     	;# 
  5681     0493                     	;# 
  5682     0494                     	;# 
  5683     0495                     	;# 
  5684     0495                     	;# 
  5685     0496                     	;# 
  5686     0497                     	;# 
  5687     0498                     	;# 
  5688     0499                     	;# 
  5689     049A                     	;# 
  5690     049B                     	;# 
  5691     049C                     	;# 
  5692     049D                     	;# 
  5693     050C                     	;# 
  5694     050C                     	;# 
  5695     050D                     	;# 
  5696     050E                     	;# 
  5697     050F                     	;# 
  5698     050F                     	;# 
  5699     0510                     	;# 
  5700     0511                     	;# 
  5701     0512                     	;# 
  5702     0512                     	;# 
  5703     0513                     	;# 
  5704     0514                     	;# 
  5705     0515                     	;# 
  5706     0515                     	;# 
  5707     0516                     	;# 
  5708     0517                     	;# 
  5709     0518                     	;# 
  5710     0519                     	;# 
  5711     051A                     	;# 
  5712     051B                     	;# 
  5713     051C                     	;# 
  5714     051D                     	;# 
  5715     058C                     	;# 
  5716     058C                     	;# 
  5717     058D                     	;# 
  5718     058E                     	;# 
  5719     058F                     	;# 
  5720     058F                     	;# 
  5721     0590                     	;# 
  5722     0591                     	;# 
  5723     0592                     	;# 
  5724     0593                     	;# 
  5725     059C                     	;# 
  5726     059C                     	;# 
  5727     059D                     	;# 
  5728     059D                     	;# 
  5729     059E                     	;# 
  5730     059F                     	;# 
  5731     060C                     	;# 
  5732     060C                     	;# 
  5733     060D                     	;# 
  5734     060D                     	;# 
  5735     060E                     	;# 
  5736     060F                     	;# 
  5737     0610                     	;# 
  5738     0611                     	;# 
  5739     0612                     	;# 
  5740     0613                     	;# 
  5741     0614                     	;# 
  5742     0616                     	;# 
  5743     0616                     	;# 
  5744     0617                     	;# 
  5745     0617                     	;# 
  5746     0618                     	;# 
  5747     0619                     	;# 
  5748     061A                     	;# 
  5749     061B                     	;# 
  5750     061C                     	;# 
  5751     061D                     	;# 
  5752     061E                     	;# 
  5753     068C                     	;# 
  5754     068D                     	;# 
  5755     068E                     	;# 
  5756     068F                     	;# 
  5757     0690                     	;# 
  5758     0691                     	;# 
  5759     0692                     	;# 
  5760     0693                     	;# 
  5761     0694                     	;# 
  5762     070C                     	;# 
  5763     070D                     	;# 
  5764     070E                     	;# 
  5765     070F                     	;# 
  5766     0710                     	;# 
  5767     0711                     	;# 
  5768     0712                     	;# 
  5769     0713                     	;# 
  5770     0714                     	;# 
  5771     0716                     	;# 
  5772     0717                     	;# 
  5773     0718                     	;# 
  5774     0719                     	;# 
  5775     071A                     	;# 
  5776     071B                     	;# 
  5777     071C                     	;# 
  5778     071D                     	;# 
  5779     071E                     	;# 
  5780     0796                     	;# 
  5781     0797                     	;# 
  5782     0798                     	;# 
  5783     0799                     	;# 
  5784     079A                     	;# 
  5785     079B                     	;# 
  5786     079C                     	;# 
  5787     079D                     	;# 
  5788     080C                     	;# 
  5789     080D                     	;# 
  5790     080E                     	;# 
  5791     080F                     	;# 
  5792     0810                     	;# 
  5793     0811                     	;# 
  5794     0813                     	;# 
  5795     0814                     	;# 
  5796     081A                     	;# 
  5797     081A                     	;# 
  5798     081B                     	;# 
  5799     081C                     	;# 
  5800     081C                     	;# 
  5801     081D                     	;# 
  5802     081E                     	;# 
  5803     081F                     	;# 
  5804     088C                     	;# 
  5805     088D                     	;# 
  5806     088E                     	;# 
  5807     088F                     	;# 
  5808     0890                     	;# 
  5809     0891                     	;# 
  5810     0892                     	;# 
  5811     0893                     	;# 
  5812     0895                     	;# 
  5813     0896                     	;# 
  5814     0897                     	;# 
  5815     0898                     	;# 
  5816     0899                     	;# 
  5817     089A                     	;# 
  5818     089B                     	;# 
  5819     090C                     	;# 
  5820     090E                     	;# 
  5821     090F                     	;# 
  5822     091F                     	;# 
  5823     098F                     	;# 
  5824     098F                     	;# 
  5825     0990                     	;# 
  5826     0991                     	;# 
  5827     0992                     	;# 
  5828     0993                     	;# 
  5829     0994                     	;# 
  5830     0995                     	;# 
  5831     0996                     	;# 
  5832     0997                     	;# 
  5833     0A19                     	;# 
  5834     0A19                     	;# 
  5835     0A1A                     	;# 
  5836     0A1A                     	;# 
  5837     0A1B                     	;# 
  5838     0A1B                     	;# 
  5839     0A1B                     	;# 
  5840     0A1C                     	;# 
  5841     0A1C                     	;# 
  5842     0A1D                     	;# 
  5843     0A1D                     	;# 
  5844     0A1E                     	;# 
  5845     0A1E                     	;# 
  5846     0A1F                     	;# 
  5847     0A1F                     	;# 
  5848     0A1F                     	;# 
  5849     1E0F                     	;# 
  5850     1E10                     	;# 
  5851     1E11                     	;# 
  5852     1E12                     	;# 
  5853     1E13                     	;# 
  5854     1E14                     	;# 
  5855     1E15                     	;# 
  5856     1E16                     	;# 
  5857     1E17                     	;# 
  5858     1E18                     	;# 
  5859     1E19                     	;# 
  5860     1E1A                     	;# 
  5861     1E1B                     	;# 
  5862     1E1C                     	;# 
  5863     1E1D                     	;# 
  5864     1E1E                     	;# 
  5865     1E1F                     	;# 
  5866     1E20                     	;# 
  5867     1E21                     	;# 
  5868     1E22                     	;# 
  5869     1E23                     	;# 
  5870     1E24                     	;# 
  5871     1E25                     	;# 
  5872     1E26                     	;# 
  5873     1E27                     	;# 
  5874     1E28                     	;# 
  5875     1E29                     	;# 
  5876     1E2A                     	;# 
  5877     1E2B                     	;# 
  5878     1E2C                     	;# 
  5879     1E2D                     	;# 
  5880     1E2E                     	;# 
  5881     1E2F                     	;# 
  5882     1E30                     	;# 
  5883     1E31                     	;# 
  5884     1E32                     	;# 
  5885     1E33                     	;# 
  5886     1E34                     	;# 
  5887     1E35                     	;# 
  5888     1E36                     	;# 
  5889     1E37                     	;# 
  5890     1E8F                     	;# 
  5891     1E90                     	;# 
  5892     1E91                     	;# 
  5893     1E92                     	;# 
  5894     1E93                     	;# 
  5895     1E94                     	;# 
  5896     1E95                     	;# 
  5897     1E96                     	;# 
  5898     1E97                     	;# 
  5899     1E9C                     	;# 
  5900     1E9D                     	;# 
  5901     1E9E                     	;# 
  5902     1EA1                     	;# 
  5903     1EA2                     	;# 
  5904     1EA3                     	;# 
  5905     1EA4                     	;# 
  5906     1EA5                     	;# 
  5907     1EA9                     	;# 
  5908     1EAA                     	;# 
  5909     1EAB                     	;# 
  5910     1EAC                     	;# 
  5911     1EB1                     	;# 
  5912     1EB2                     	;# 
  5913     1EB3                     	;# 
  5914     1EB8                     	;# 
  5915     1EB9                     	;# 
  5916     1EBA                     	;# 
  5917     1EBB                     	;# 
  5918     1EBC                     	;# 
  5919     1EBD                     	;# 
  5920     1EBE                     	;# 
  5921     1EC3                     	;# 
  5922     1EC5                     	;# 
  5923     1EC6                     	;# 
  5924     1EC7                     	;# 
  5925     1EC8                     	;# 
  5926     1EC9                     	;# 
  5927     1ECA                     	;# 
  5928     1ECB                     	;# 
  5929     1ECC                     	;# 
  5930     1ECD                     	;# 
  5931     1ECE                     	;# 
  5932     1F10                     	;# 
  5933     1F11                     	;# 
  5934     1F12                     	;# 
  5935     1F13                     	;# 
  5936     1F14                     	;# 
  5937     1F15                     	;# 
  5938     1F16                     	;# 
  5939     1F17                     	;# 
  5940     1F18                     	;# 
  5941     1F19                     	;# 
  5942     1F1A                     	;# 
  5943     1F1B                     	;# 
  5944     1F1C                     	;# 
  5945     1F1D                     	;# 
  5946     1F1E                     	;# 
  5947     1F1F                     	;# 
  5948     1F20                     	;# 
  5949     1F21                     	;# 
  5950     1F22                     	;# 
  5951     1F23                     	;# 
  5952     1F24                     	;# 
  5953     1F25                     	;# 
  5954     1F26                     	;# 
  5955     1F27                     	;# 
  5956     1F38                     	;# 
  5957     1F39                     	;# 
  5958     1F3A                     	;# 
  5959     1F3B                     	;# 
  5960     1F3C                     	;# 
  5961     1F3D                     	;# 
  5962     1F3E                     	;# 
  5963     1F3F                     	;# 
  5964     1F43                     	;# 
  5965     1F44                     	;# 
  5966     1F45                     	;# 
  5967     1F46                     	;# 
  5968     1F47                     	;# 
  5969     1F48                     	;# 
  5970     1F49                     	;# 
  5971     1F4A                     	;# 
  5972     1F4E                     	;# 
  5973     1F4F                     	;# 
  5974     1F50                     	;# 
  5975     1F51                     	;# 
  5976     1F52                     	;# 
  5977     1F53                     	;# 
  5978     1F54                     	;# 
  5979     1F55                     	;# 
  5980     1F65                     	;# 
  5981     1F66                     	;# 
  5982     1F67                     	;# 
  5983     1F68                     	;# 
  5984     1F69                     	;# 
  5985     1F6A                     	;# 
  5986     1F6B                     	;# 
  5987     1FE4                     	;# 
  5988     1FE5                     	;# 
  5989     1FE6                     	;# 
  5990     1FE7                     	;# 
  5991     1FE8                     	;# 
  5992     1FE8                     	;# 
  5993     1FE9                     	;# 
  5994     1FEA                     	;# 
  5995     1FEB                     	;# 
  5996     1FED                     	;# 
  5997     1FEE                     	;# 
  5998     1FEF                     	;# 
  5999     0000                     	;# 
  6000     0001                     	;# 
  6001     0002                     	;# 
  6002     0003                     	;# 
  6003     0004                     	;# 
  6004     0005                     	;# 
  6005     0006                     	;# 
  6006     0007                     	;# 
  6007     0008                     	;# 
  6008     0009                     	;# 
  6009     000A                     	;# 
  6010     000B                     	;# 
  6011     000C                     	;# 
  6012     000D                     	;# 
  6013     000E                     	;# 
  6014     0010                     	;# 
  6015     0012                     	;# 
  6016     0013                     	;# 
  6017     0014                     	;# 
  6018     0016                     	;# 
  6019     0018                     	;# 
  6020     0019                     	;# 
  6021     001A                     	;# 
  6022     001C                     	;# 
  6023     008C                     	;# 
  6024     008C                     	;# 
  6025     008D                     	;# 
  6026     008E                     	;# 
  6027     008E                     	;# 
  6028     008F                     	;# 
  6029     0090                     	;# 
  6030     0090                     	;# 
  6031     0091                     	;# 
  6032     0092                     	;# 
  6033     0092                     	;# 
  6034     0093                     	;# 
  6035     0094                     	;# 
  6036     0094                     	;# 
  6037     0095                     	;# 
  6038     0096                     	;# 
  6039     0096                     	;# 
  6040     0097                     	;# 
  6041     0098                     	;# 
  6042     0099                     	;# 
  6043     009A                     	;# 
  6044     009B                     	;# 
  6045     009B                     	;# 
  6046     009C                     	;# 
  6047     009D                     	;# 
  6048     009D                     	;# 
  6049     009E                     	;# 
  6050     009F                     	;# 
  6051     010C                     	;# 
  6052     010C                     	;# 
  6053     010D                     	;# 
  6054     010E                     	;# 
  6055     010F                     	;# 
  6056     010F                     	;# 
  6057     0110                     	;# 
  6058     0111                     	;# 
  6059     0112                     	;# 
  6060     0113                     	;# 
  6061     0114                     	;# 
  6062     0115                     	;# 
  6063     0116                     	;# 
  6064     0117                     	;# 
  6065     0118                     	;# 
  6066     0119                     	;# 
  6067     0119                     	;# 
  6068     0119                     	;# 
  6069     011A                     	;# 
  6070     011A                     	;# 
  6071     011A                     	;# 
  6072     011B                     	;# 
  6073     011B                     	;# 
  6074     011B                     	;# 
  6075     011B                     	;# 
  6076     011B                     	;# 
  6077     011C                     	;# 
  6078     011C                     	;# 
  6079     011C                     	;# 
  6080     011D                     	;# 
  6081     011D                     	;# 
  6082     011D                     	;# 
  6083     011E                     	;# 
  6084     011E                     	;# 
  6085     011E                     	;# 
  6086     011F                     	;# 
  6087     011F                     	;# 
  6088     011F                     	;# 
  6089     011F                     	;# 
  6090     011F                     	;# 
  6091     018C                     	;# 
  6092     018D                     	;# 
  6093     018E                     	;# 
  6094     018F                     	;# 
  6095     0190                     	;# 
  6096     0191                     	;# 
  6097     0192                     	;# 
  6098     0196                     	;# 
  6099     0197                     	;# 
  6100     0198                     	;# 
  6101     0199                     	;# 
  6102     019A                     	;# 
  6103     019B                     	;# 
  6104     019C                     	;# 
  6105     020C                     	;# 
  6106     020D                     	;# 
  6107     020E                     	;# 
  6108     020E                     	;# 
  6109     020F                     	;# 
  6110     020F                     	;# 
  6111     0210                     	;# 
  6112     0210                     	;# 
  6113     0211                     	;# 
  6114     0211                     	;# 
  6115     0212                     	;# 
  6116     0213                     	;# 
  6117     0214                     	;# 
  6118     0214                     	;# 
  6119     0215                     	;# 
  6120     0215                     	;# 
  6121     0216                     	;# 
  6122     0216                     	;# 
  6123     0217                     	;# 
  6124     0217                     	;# 
  6125     0218                     	;# 
  6126     0219                     	;# 
  6127     021A                     	;# 
  6128     021A                     	;# 
  6129     021B                     	;# 
  6130     021B                     	;# 
  6131     021C                     	;# 
  6132     021C                     	;# 
  6133     021D                     	;# 
  6134     021D                     	;# 
  6135     021E                     	;# 
  6136     021F                     	;# 
  6137     028C                     	;# 
  6138     028C                     	;# 
  6139     028D                     	;# 
  6140     028D                     	;# 
  6141     028E                     	;# 
  6142     028F                     	;# 
  6143     0290                     	;# 
  6144     0291                     	;# 
  6145     0292                     	;# 
  6146     0292                     	;# 
  6147     0293                     	;# 
  6148     0293                     	;# 
  6149     0294                     	;# 
  6150     0295                     	;# 
  6151     0296                     	;# 
  6152     0297                     	;# 
  6153     0298                     	;# 
  6154     0298                     	;# 
  6155     0299                     	;# 
  6156     0299                     	;# 
  6157     029A                     	;# 
  6158     029B                     	;# 
  6159     029C                     	;# 
  6160     029D                     	;# 
  6161     029F                     	;# 
  6162     030C                     	;# 
  6163     030C                     	;# 
  6164     030D                     	;# 
  6165     030E                     	;# 
  6166     030F                     	;# 
  6167     0310                     	;# 
  6168     0310                     	;# 
  6169     0311                     	;# 
  6170     0312                     	;# 
  6171     0313                     	;# 
  6172     0314                     	;# 
  6173     0314                     	;# 
  6174     0315                     	;# 
  6175     0316                     	;# 
  6176     0317                     	;# 
  6177     0318                     	;# 
  6178     0318                     	;# 
  6179     0319                     	;# 
  6180     031A                     	;# 
  6181     031B                     	;# 
  6182     031C                     	;# 
  6183     031C                     	;# 
  6184     031D                     	;# 
  6185     031E                     	;# 
  6186     031F                     	;# 
  6187     038C                     	;# 
  6188     038C                     	;# 
  6189     038D                     	;# 
  6190     038E                     	;# 
  6191     0390                     	;# 
  6192     0390                     	;# 
  6193     0391                     	;# 
  6194     0392                     	;# 
  6195     048C                     	;# 
  6196     048C                     	;# 
  6197     048D                     	;# 
  6198     048E                     	;# 
  6199     048F                     	;# 
  6200     048F                     	;# 
  6201     0490                     	;# 
  6202     0491                     	;# 
  6203     0492                     	;# 
  6204     0492                     	;# 
  6205     0493                     	;# 
  6206     0494                     	;# 
  6207     0495                     	;# 
  6208     0495                     	;# 
  6209     0496                     	;# 
  6210     0497                     	;# 
  6211     0498                     	;# 
  6212     0499                     	;# 
  6213     049A                     	;# 
  6214     049B                     	;# 
  6215     049C                     	;# 
  6216     049D                     	;# 
  6217     050C                     	;# 
  6218     050C                     	;# 
  6219     050D                     	;# 
  6220     050E                     	;# 
  6221     050F                     	;# 
  6222     050F                     	;# 
  6223     0510                     	;# 
  6224     0511                     	;# 
  6225     0512                     	;# 
  6226     0512                     	;# 
  6227     0513                     	;# 
  6228     0514                     	;# 
  6229     0515                     	;# 
  6230     0515                     	;# 
  6231     0516                     	;# 
  6232     0517                     	;# 
  6233     0518                     	;# 
  6234     0519                     	;# 
  6235     051A                     	;# 
  6236     051B                     	;# 
  6237     051C                     	;# 
  6238     051D                     	;# 
  6239     058C                     	;# 
  6240     058C                     	;# 
  6241     058D                     	;# 
  6242     058E                     	;# 
  6243     058F                     	;# 
  6244     058F                     	;# 
  6245     0590                     	;# 
  6246     0591                     	;# 
  6247     0592                     	;# 
  6248     0593                     	;# 
  6249     059C                     	;# 
  6250     059C                     	;# 
  6251     059D                     	;# 
  6252     059D                     	;# 
  6253     059E                     	;# 
  6254     059F                     	;# 
  6255     060C                     	;# 
  6256     060C                     	;# 
  6257     060D                     	;# 
  6258     060D                     	;# 
  6259     060E                     	;# 
  6260     060F                     	;# 
  6261     0610                     	;# 
  6262     0611                     	;# 
  6263     0612                     	;# 
  6264     0613                     	;# 
  6265     0614                     	;# 
  6266     0616                     	;# 
  6267     0616                     	;# 
  6268     0617                     	;# 
  6269     0617                     	;# 
  6270     0618                     	;# 
  6271     0619                     	;# 
  6272     061A                     	;# 
  6273     061B                     	;# 
  6274     061C                     	;# 
  6275     061D                     	;# 
  6276     061E                     	;# 
  6277     068C                     	;# 
  6278     068D                     	;# 
  6279     068E                     	;# 
  6280     068F                     	;# 
  6281     0690                     	;# 
  6282     0691                     	;# 
  6283     0692                     	;# 
  6284     0693                     	;# 
  6285     0694                     	;# 
  6286     070C                     	;# 
  6287     070D                     	;# 
  6288     070E                     	;# 
  6289     070F                     	;# 
  6290     0710                     	;# 
  6291     0711                     	;# 
  6292     0712                     	;# 
  6293     0713                     	;# 
  6294     0714                     	;# 
  6295     0716                     	;# 
  6296     0717                     	;# 
  6297     0718                     	;# 
  6298     0719                     	;# 
  6299     071A                     	;# 
  6300     071B                     	;# 
  6301     071C                     	;# 
  6302     071D                     	;# 
  6303     071E                     	;# 
  6304     0796                     	;# 
  6305     0797                     	;# 
  6306     0798                     	;# 
  6307     0799                     	;# 
  6308     079A                     	;# 
  6309     079B                     	;# 
  6310     079C                     	;# 
  6311     079D                     	;# 
  6312     080C                     	;# 
  6313     080D                     	;# 
  6314     080E                     	;# 
  6315     080F                     	;# 
  6316     0810                     	;# 
  6317     0811                     	;# 
  6318     0813                     	;# 
  6319     0814                     	;# 
  6320     081A                     	;# 
  6321     081A                     	;# 
  6322     081B                     	;# 
  6323     081C                     	;# 
  6324     081C                     	;# 
  6325     081D                     	;# 
  6326     081E                     	;# 
  6327     081F                     	;# 
  6328     088C                     	;# 
  6329     088D                     	;# 
  6330     088E                     	;# 
  6331     088F                     	;# 
  6332     0890                     	;# 
  6333     0891                     	;# 
  6334     0892                     	;# 
  6335     0893                     	;# 
  6336     0895                     	;# 
  6337     0896                     	;# 
  6338     0897                     	;# 
  6339     0898                     	;# 
  6340     0899                     	;# 
  6341     089A                     	;# 
  6342     089B                     	;# 
  6343     090C                     	;# 
  6344     090E                     	;# 
  6345     090F                     	;# 
  6346     091F                     	;# 
  6347     098F                     	;# 
  6348     098F                     	;# 
  6349     0990                     	;# 
  6350     0991                     	;# 
  6351     0992                     	;# 
  6352     0993                     	;# 
  6353     0994                     	;# 
  6354     0995                     	;# 
  6355     0996                     	;# 
  6356     0997                     	;# 
  6357     0A19                     	;# 
  6358     0A19                     	;# 
  6359     0A1A                     	;# 
  6360     0A1A                     	;# 
  6361     0A1B                     	;# 
  6362     0A1B                     	;# 
  6363     0A1B                     	;# 
  6364     0A1C                     	;# 
  6365     0A1C                     	;# 
  6366     0A1D                     	;# 
  6367     0A1D                     	;# 
  6368     0A1E                     	;# 
  6369     0A1E                     	;# 
  6370     0A1F                     	;# 
  6371     0A1F                     	;# 
  6372     0A1F                     	;# 
  6373     1E0F                     	;# 
  6374     1E10                     	;# 
  6375     1E11                     	;# 
  6376     1E12                     	;# 
  6377     1E13                     	;# 
  6378     1E14                     	;# 
  6379     1E15                     	;# 
  6380     1E16                     	;# 
  6381     1E17                     	;# 
  6382     1E18                     	;# 
  6383     1E19                     	;# 
  6384     1E1A                     	;# 
  6385     1E1B                     	;# 
  6386     1E1C                     	;# 
  6387     1E1D                     	;# 
  6388     1E1E                     	;# 
  6389     1E1F                     	;# 
  6390     1E20                     	;# 
  6391     1E21                     	;# 
  6392     1E22                     	;# 
  6393     1E23                     	;# 
  6394     1E24                     	;# 
  6395     1E25                     	;# 
  6396     1E26                     	;# 
  6397     1E27                     	;# 
  6398     1E28                     	;# 
  6399     1E29                     	;# 
  6400     1E2A                     	;# 
  6401     1E2B                     	;# 
  6402     1E2C                     	;# 
  6403     1E2D                     	;# 
  6404     1E2E                     	;# 
  6405     1E2F                     	;# 
  6406     1E30                     	;# 
  6407     1E31                     	;# 
  6408     1E32                     	;# 
  6409     1E33                     	;# 
  6410     1E34                     	;# 
  6411     1E35                     	;# 
  6412     1E36                     	;# 
  6413     1E37                     	;# 
  6414     1E8F                     	;# 
  6415     1E90                     	;# 
  6416     1E91                     	;# 
  6417     1E92                     	;# 
  6418     1E93                     	;# 
  6419     1E94                     	;# 
  6420     1E95                     	;# 
  6421     1E96                     	;# 
  6422     1E97                     	;# 
  6423     1E9C                     	;# 
  6424     1E9D                     	;# 
  6425     1E9E                     	;# 
  6426     1EA1                     	;# 
  6427     1EA2                     	;# 
  6428     1EA3                     	;# 
  6429     1EA4                     	;# 
  6430     1EA5                     	;# 
  6431     1EA9                     	;# 
  6432     1EAA                     	;# 
  6433     1EAB                     	;# 
  6434     1EAC                     	;# 
  6435     1EB1                     	;# 
  6436     1EB2                     	;# 
  6437     1EB3                     	;# 
  6438     1EB8                     	;# 
  6439     1EB9                     	;# 
  6440     1EBA                     	;# 
  6441     1EBB                     	;# 
  6442     1EBC                     	;# 
  6443     1EBD                     	;# 
  6444     1EBE                     	;# 
  6445     1EC3                     	;# 
  6446     1EC5                     	;# 
  6447     1EC6                     	;# 
  6448     1EC7                     	;# 
  6449     1EC8                     	;# 
  6450     1EC9                     	;# 
  6451     1ECA                     	;# 
  6452     1ECB                     	;# 
  6453     1ECC                     	;# 
  6454     1ECD                     	;# 
  6455     1ECE                     	;# 
  6456     1F10                     	;# 
  6457     1F11                     	;# 
  6458     1F12                     	;# 
  6459     1F13                     	;# 
  6460     1F14                     	;# 
  6461     1F15                     	;# 
  6462     1F16                     	;# 
  6463     1F17                     	;# 
  6464     1F18                     	;# 
  6465     1F19                     	;# 
  6466     1F1A                     	;# 
  6467     1F1B                     	;# 
  6468     1F1C                     	;# 
  6469     1F1D                     	;# 
  6470     1F1E                     	;# 
  6471     1F1F                     	;# 
  6472     1F20                     	;# 
  6473     1F21                     	;# 
  6474     1F22                     	;# 
  6475     1F23                     	;# 
  6476     1F24                     	;# 
  6477     1F25                     	;# 
  6478     1F26                     	;# 
  6479     1F27                     	;# 
  6480     1F38                     	;# 
  6481     1F39                     	;# 
  6482     1F3A                     	;# 
  6483     1F3B                     	;# 
  6484     1F3C                     	;# 
  6485     1F3D                     	;# 
  6486     1F3E                     	;# 
  6487     1F3F                     	;# 
  6488     1F43                     	;# 
  6489     1F44                     	;# 
  6490     1F45                     	;# 
  6491     1F46                     	;# 
  6492     1F47                     	;# 
  6493     1F48                     	;# 
  6494     1F49                     	;# 
  6495     1F4A                     	;# 
  6496     1F4E                     	;# 
  6497     1F4F                     	;# 
  6498     1F50                     	;# 
  6499     1F51                     	;# 
  6500     1F52                     	;# 
  6501     1F53                     	;# 
  6502     1F54                     	;# 
  6503     1F55                     	;# 
  6504     1F65                     	;# 
  6505     1F66                     	;# 
  6506     1F67                     	;# 
  6507     1F68                     	;# 
  6508     1F69                     	;# 
  6509     1F6A                     	;# 
  6510     1F6B                     	;# 
  6511     1FE4                     	;# 
  6512     1FE5                     	;# 
  6513     1FE6                     	;# 
  6514     1FE7                     	;# 
  6515     1FE8                     	;# 
  6516     1FE8                     	;# 
  6517     1FE9                     	;# 
  6518     1FEA                     	;# 
  6519     1FEB                     	;# 
  6520     1FED                     	;# 
  6521     1FEE                     	;# 
  6522     1FEF                     	;# 
  6523     0000                     	;# 
  6524     0001                     	;# 
  6525     0002                     	;# 
  6526     0003                     	;# 
  6527     0004                     	;# 
  6528     0005                     	;# 
  6529     0006                     	;# 
  6530     0007                     	;# 
  6531     0008                     	;# 
  6532     0009                     	;# 
  6533     000A                     	;# 
  6534     000B                     	;# 
  6535     000C                     	;# 
  6536     000D                     	;# 
  6537     000E                     	;# 
  6538     0010                     	;# 
  6539     0012                     	;# 
  6540     0013                     	;# 
  6541     0014                     	;# 
  6542     0016                     	;# 
  6543     0018                     	;# 
  6544     0019                     	;# 
  6545     001A                     	;# 
  6546     001C                     	;# 
  6547     008C                     	;# 
  6548     008C                     	;# 
  6549     008D                     	;# 
  6550     008E                     	;# 
  6551     008E                     	;# 
  6552     008F                     	;# 
  6553     0090                     	;# 
  6554     0090                     	;# 
  6555     0091                     	;# 
  6556     0092                     	;# 
  6557     0092                     	;# 
  6558     0093                     	;# 
  6559     0094                     	;# 
  6560     0094                     	;# 
  6561     0095                     	;# 
  6562     0096                     	;# 
  6563     0096                     	;# 
  6564     0097                     	;# 
  6565     0098                     	;# 
  6566     0099                     	;# 
  6567     009A                     	;# 
  6568     009B                     	;# 
  6569     009B                     	;# 
  6570     009C                     	;# 
  6571     009D                     	;# 
  6572     009D                     	;# 
  6573     009E                     	;# 
  6574     009F                     	;# 
  6575     010C                     	;# 
  6576     010C                     	;# 
  6577     010D                     	;# 
  6578     010E                     	;# 
  6579     010F                     	;# 
  6580     010F                     	;# 
  6581     0110                     	;# 
  6582     0111                     	;# 
  6583     0112                     	;# 
  6584     0113                     	;# 
  6585     0114                     	;# 
  6586     0115                     	;# 
  6587     0116                     	;# 
  6588     0117                     	;# 
  6589     0118                     	;# 
  6590     0119                     	;# 
  6591     0119                     	;# 
  6592     0119                     	;# 
  6593     011A                     	;# 
  6594     011A                     	;# 
  6595     011A                     	;# 
  6596     011B                     	;# 
  6597     011B                     	;# 
  6598     011B                     	;# 
  6599     011B                     	;# 
  6600     011B                     	;# 
  6601     011C                     	;# 
  6602     011C                     	;# 
  6603     011C                     	;# 
  6604     011D                     	;# 
  6605     011D                     	;# 
  6606     011D                     	;# 
  6607     011E                     	;# 
  6608     011E                     	;# 
  6609     011E                     	;# 
  6610     011F                     	;# 
  6611     011F                     	;# 
  6612     011F                     	;# 
  6613     011F                     	;# 
  6614     011F                     	;# 
  6615     018C                     	;# 
  6616     018D                     	;# 
  6617     018E                     	;# 
  6618     018F                     	;# 
  6619     0190                     	;# 
  6620     0191                     	;# 
  6621     0192                     	;# 
  6622     0196                     	;# 
  6623     0197                     	;# 
  6624     0198                     	;# 
  6625     0199                     	;# 
  6626     019A                     	;# 
  6627     019B                     	;# 
  6628     019C                     	;# 
  6629     020C                     	;# 
  6630     020D                     	;# 
  6631     020E                     	;# 
  6632     020E                     	;# 
  6633     020F                     	;# 
  6634     020F                     	;# 
  6635     0210                     	;# 
  6636     0210                     	;# 
  6637     0211                     	;# 
  6638     0211                     	;# 
  6639     0212                     	;# 
  6640     0213                     	;# 
  6641     0214                     	;# 
  6642     0214                     	;# 
  6643     0215                     	;# 
  6644     0215                     	;# 
  6645     0216                     	;# 
  6646     0216                     	;# 
  6647     0217                     	;# 
  6648     0217                     	;# 
  6649     0218                     	;# 
  6650     0219                     	;# 
  6651     021A                     	;# 
  6652     021A                     	;# 
  6653     021B                     	;# 
  6654     021B                     	;# 
  6655     021C                     	;# 
  6656     021C                     	;# 
  6657     021D                     	;# 
  6658     021D                     	;# 
  6659     021E                     	;# 
  6660     021F                     	;# 
  6661     028C                     	;# 
  6662     028C                     	;# 
  6663     028D                     	;# 
  6664     028D                     	;# 
  6665     028E                     	;# 
  6666     028F                     	;# 
  6667     0290                     	;# 
  6668     0291                     	;# 
  6669     0292                     	;# 
  6670     0292                     	;# 
  6671     0293                     	;# 
  6672     0293                     	;# 
  6673     0294                     	;# 
  6674     0295                     	;# 
  6675     0296                     	;# 
  6676     0297                     	;# 
  6677     0298                     	;# 
  6678     0298                     	;# 
  6679     0299                     	;# 
  6680     0299                     	;# 
  6681     029A                     	;# 
  6682     029B                     	;# 
  6683     029C                     	;# 
  6684     029D                     	;# 
  6685     029F                     	;# 
  6686     030C                     	;# 
  6687     030C                     	;# 
  6688     030D                     	;# 
  6689     030E                     	;# 
  6690     030F                     	;# 
  6691     0310                     	;# 
  6692     0310                     	;# 
  6693     0311                     	;# 
  6694     0312                     	;# 
  6695     0313                     	;# 
  6696     0314                     	;# 
  6697     0314                     	;# 
  6698     0315                     	;# 
  6699     0316                     	;# 
  6700     0317                     	;# 
  6701     0318                     	;# 
  6702     0318                     	;# 
  6703     0319                     	;# 
  6704     031A                     	;# 
  6705     031B                     	;# 
  6706     031C                     	;# 
  6707     031C                     	;# 
  6708     031D                     	;# 
  6709     031E                     	;# 
  6710     031F                     	;# 
  6711     038C                     	;# 
  6712     038C                     	;# 
  6713     038D                     	;# 
  6714     038E                     	;# 
  6715     0390                     	;# 
  6716     0390                     	;# 
  6717     0391                     	;# 
  6718     0392                     	;# 
  6719     048C                     	;# 
  6720     048C                     	;# 
  6721     048D                     	;# 
  6722     048E                     	;# 
  6723     048F                     	;# 
  6724     048F                     	;# 
  6725     0490                     	;# 
  6726     0491                     	;# 
  6727     0492                     	;# 
  6728     0492                     	;# 
  6729     0493                     	;# 
  6730     0494                     	;# 
  6731     0495                     	;# 
  6732     0495                     	;# 
  6733     0496                     	;# 
  6734     0497                     	;# 
  6735     0498                     	;# 
  6736     0499                     	;# 
  6737     049A                     	;# 
  6738     049B                     	;# 
  6739     049C                     	;# 
  6740     049D                     	;# 
  6741     050C                     	;# 
  6742     050C                     	;# 
  6743     050D                     	;# 
  6744     050E                     	;# 
  6745     050F                     	;# 
  6746     050F                     	;# 
  6747     0510                     	;# 
  6748     0511                     	;# 
  6749     0512                     	;# 
  6750     0512                     	;# 
  6751     0513                     	;# 
  6752     0514                     	;# 
  6753     0515                     	;# 
  6754     0515                     	;# 
  6755     0516                     	;# 
  6756     0517                     	;# 
  6757     0518                     	;# 
  6758     0519                     	;# 
  6759     051A                     	;# 
  6760     051B                     	;# 
  6761     051C                     	;# 
  6762     051D                     	;# 
  6763     058C                     	;# 
  6764     058C                     	;# 
  6765     058D                     	;# 
  6766     058E                     	;# 
  6767     058F                     	;# 
  6768     058F                     	;# 
  6769     0590                     	;# 
  6770     0591                     	;# 
  6771     0592                     	;# 
  6772     0593                     	;# 
  6773     059C                     	;# 
  6774     059C                     	;# 
  6775     059D                     	;# 
  6776     059D                     	;# 
  6777     059E                     	;# 
  6778     059F                     	;# 
  6779     060C                     	;# 
  6780     060C                     	;# 
  6781     060D                     	;# 
  6782     060D                     	;# 
  6783     060E                     	;# 
  6784     060F                     	;# 
  6785     0610                     	;# 
  6786     0611                     	;# 
  6787     0612                     	;# 
  6788     0613                     	;# 
  6789     0614                     	;# 
  6790     0616                     	;# 
  6791     0616                     	;# 
  6792     0617                     	;# 
  6793     0617                     	;# 
  6794     0618                     	;# 
  6795     0619                     	;# 
  6796     061A                     	;# 
  6797     061B                     	;# 
  6798     061C                     	;# 
  6799     061D                     	;# 
  6800     061E                     	;# 
  6801     068C                     	;# 
  6802     068D                     	;# 
  6803     068E                     	;# 
  6804     068F                     	;# 
  6805     0690                     	;# 
  6806     0691                     	;# 
  6807     0692                     	;# 
  6808     0693                     	;# 
  6809     0694                     	;# 
  6810     070C                     	;# 
  6811     070D                     	;# 
  6812     070E                     	;# 
  6813     070F                     	;# 
  6814     0710                     	;# 
  6815     0711                     	;# 
  6816     0712                     	;# 
  6817     0713                     	;# 
  6818     0714                     	;# 
  6819     0716                     	;# 
  6820     0717                     	;# 
  6821     0718                     	;# 
  6822     0719                     	;# 
  6823     071A                     	;# 
  6824     071B                     	;# 
  6825     071C                     	;# 
  6826     071D                     	;# 
  6827     071E                     	;# 
  6828     0796                     	;# 
  6829     0797                     	;# 
  6830     0798                     	;# 
  6831     0799                     	;# 
  6832     079A                     	;# 
  6833     079B                     	;# 
  6834     079C                     	;# 
  6835     079D                     	;# 
  6836     080C                     	;# 
  6837     080D                     	;# 
  6838     080E                     	;# 
  6839     080F                     	;# 
  6840     0810                     	;# 
  6841     0811                     	;# 
  6842     0813                     	;# 
  6843     0814                     	;# 
  6844     081A                     	;# 
  6845     081A                     	;# 
  6846     081B                     	;# 
  6847     081C                     	;# 
  6848     081C                     	;# 
  6849     081D                     	;# 
  6850     081E                     	;# 
  6851     081F                     	;# 
  6852     088C                     	;# 
  6853     088D                     	;# 
  6854     088E                     	;# 
  6855     088F                     	;# 
  6856     0890                     	;# 
  6857     0891                     	;# 
  6858     0892                     	;# 
  6859     0893                     	;# 
  6860     0895                     	;# 
  6861     0896                     	;# 
  6862     0897                     	;# 
  6863     0898                     	;# 
  6864     0899                     	;# 
  6865     089A                     	;# 
  6866     089B                     	;# 
  6867     090C                     	;# 
  6868     090E                     	;# 
  6869     090F                     	;# 
  6870     091F                     	;# 
  6871     098F                     	;# 
  6872     098F                     	;# 
  6873     0990                     	;# 
  6874     0991                     	;# 
  6875     0992                     	;# 
  6876     0993                     	;# 
  6877     0994                     	;# 
  6878     0995                     	;# 
  6879     0996                     	;# 
  6880     0997                     	;# 
  6881     0A19                     	;# 
  6882     0A19                     	;# 
  6883     0A1A                     	;# 
  6884     0A1A                     	;# 
  6885     0A1B                     	;# 
  6886     0A1B                     	;# 
  6887     0A1B                     	;# 
  6888     0A1C                     	;# 
  6889     0A1C                     	;# 
  6890     0A1D                     	;# 
  6891     0A1D                     	;# 
  6892     0A1E                     	;# 
  6893     0A1E                     	;# 
  6894     0A1F                     	;# 
  6895     0A1F                     	;# 
  6896     0A1F                     	;# 
  6897     1E0F                     	;# 
  6898     1E10                     	;# 
  6899     1E11                     	;# 
  6900     1E12                     	;# 
  6901     1E13                     	;# 
  6902     1E14                     	;# 
  6903     1E15                     	;# 
  6904     1E16                     	;# 
  6905     1E17                     	;# 
  6906     1E18                     	;# 
  6907     1E19                     	;# 
  6908     1E1A                     	;# 
  6909     1E1B                     	;# 
  6910     1E1C                     	;# 
  6911     1E1D                     	;# 
  6912     1E1E                     	;# 
  6913     1E1F                     	;# 
  6914     1E20                     	;# 
  6915     1E21                     	;# 
  6916     1E22                     	;# 
  6917     1E23                     	;# 
  6918     1E24                     	;# 
  6919     1E25                     	;# 
  6920     1E26                     	;# 
  6921     1E27                     	;# 
  6922     1E28                     	;# 
  6923     1E29                     	;# 
  6924     1E2A                     	;# 
  6925     1E2B                     	;# 
  6926     1E2C                     	;# 
  6927     1E2D                     	;# 
  6928     1E2E                     	;# 
  6929     1E2F                     	;# 
  6930     1E30                     	;# 
  6931     1E31                     	;# 
  6932     1E32                     	;# 
  6933     1E33                     	;# 
  6934     1E34                     	;# 
  6935     1E35                     	;# 
  6936     1E36                     	;# 
  6937     1E37                     	;# 
  6938     1E8F                     	;# 
  6939     1E90                     	;# 
  6940     1E91                     	;# 
  6941     1E92                     	;# 
  6942     1E93                     	;# 
  6943     1E94                     	;# 
  6944     1E95                     	;# 
  6945     1E96                     	;# 
  6946     1E97                     	;# 
  6947     1E9C                     	;# 
  6948     1E9D                     	;# 
  6949     1E9E                     	;# 
  6950     1EA1                     	;# 
  6951     1EA2                     	;# 
  6952     1EA3                     	;# 
  6953     1EA4                     	;# 
  6954     1EA5                     	;# 
  6955     1EA9                     	;# 
  6956     1EAA                     	;# 
  6957     1EAB                     	;# 
  6958     1EAC                     	;# 
  6959     1EB1                     	;# 
  6960     1EB2                     	;# 
  6961     1EB3                     	;# 
  6962     1EB8                     	;# 
  6963     1EB9                     	;# 
  6964     1EBA                     	;# 
  6965     1EBB                     	;# 
  6966     1EBC                     	;# 
  6967     1EBD                     	;# 
  6968     1EBE                     	;# 
  6969     1EC3                     	;# 
  6970     1EC5                     	;# 
  6971     1EC6                     	;# 
  6972     1EC7                     	;# 
  6973     1EC8                     	;# 
  6974     1EC9                     	;# 
  6975     1ECA                     	;# 
  6976     1ECB                     	;# 
  6977     1ECC                     	;# 
  6978     1ECD                     	;# 
  6979     1ECE                     	;# 
  6980     1F10                     	;# 
  6981     1F11                     	;# 
  6982     1F12                     	;# 
  6983     1F13                     	;# 
  6984     1F14                     	;# 
  6985     1F15                     	;# 
  6986     1F16                     	;# 
  6987     1F17                     	;# 
  6988     1F18                     	;# 
  6989     1F19                     	;# 
  6990     1F1A                     	;# 
  6991     1F1B                     	;# 
  6992     1F1C                     	;# 
  6993     1F1D                     	;# 
  6994     1F1E                     	;# 
  6995     1F1F                     	;# 
  6996     1F20                     	;# 
  6997     1F21                     	;# 
  6998     1F22                     	;# 
  6999     1F23                     	;# 
  7000     1F24                     	;# 
  7001     1F25                     	;# 
  7002     1F26                     	;# 
  7003     1F27                     	;# 
  7004     1F38                     	;# 
  7005     1F39                     	;# 
  7006     1F3A                     	;# 
  7007     1F3B                     	;# 
  7008     1F3C                     	;# 
  7009     1F3D                     	;# 
  7010     1F3E                     	;# 
  7011     1F3F                     	;# 
  7012     1F43                     	;# 
  7013     1F44                     	;# 
  7014     1F45                     	;# 
  7015     1F46                     	;# 
  7016     1F47                     	;# 
  7017     1F48                     	;# 
  7018     1F49                     	;# 
  7019     1F4A                     	;# 
  7020     1F4E                     	;# 
  7021     1F4F                     	;# 
  7022     1F50                     	;# 
  7023     1F51                     	;# 
  7024     1F52                     	;# 
  7025     1F53                     	;# 
  7026     1F54                     	;# 
  7027     1F55                     	;# 
  7028     1F65                     	;# 
  7029     1F66                     	;# 
  7030     1F67                     	;# 
  7031     1F68                     	;# 
  7032     1F69                     	;# 
  7033     1F6A                     	;# 
  7034     1F6B                     	;# 
  7035     1FE4                     	;# 
  7036     1FE5                     	;# 
  7037     1FE6                     	;# 
  7038     1FE7                     	;# 
  7039     1FE8                     	;# 
  7040     1FE8                     	;# 
  7041     1FE9                     	;# 
  7042     1FEA                     	;# 
  7043     1FEB                     	;# 
  7044     1FED                     	;# 
  7045     1FEE                     	;# 
  7046     1FEF                     	;# 
  7047     0000                     	;# 
  7048     0001                     	;# 
  7049     0002                     	;# 
  7050     0003                     	;# 
  7051     0004                     	;# 
  7052     0005                     	;# 
  7053     0006                     	;# 
  7054     0007                     	;# 
  7055     0008                     	;# 
  7056     0009                     	;# 
  7057     000A                     	;# 
  7058     000B                     	;# 
  7059     000C                     	;# 
  7060     000D                     	;# 
  7061     000E                     	;# 
  7062     0010                     	;# 
  7063     0012                     	;# 
  7064     0013                     	;# 
  7065     0014                     	;# 
  7066     0016                     	;# 
  7067     0018                     	;# 
  7068     0019                     	;# 
  7069     001A                     	;# 
  7070     001C                     	;# 
  7071     008C                     	;# 
  7072     008C                     	;# 
  7073     008D                     	;# 
  7074     008E                     	;# 
  7075     008E                     	;# 
  7076     008F                     	;# 
  7077     0090                     	;# 
  7078     0090                     	;# 
  7079     0091                     	;# 
  7080     0092                     	;# 
  7081     0092                     	;# 
  7082     0093                     	;# 
  7083     0094                     	;# 
  7084     0094                     	;# 
  7085     0095                     	;# 
  7086     0096                     	;# 
  7087     0096                     	;# 
  7088     0097                     	;# 
  7089     0098                     	;# 
  7090     0099                     	;# 
  7091     009A                     	;# 
  7092     009B                     	;# 
  7093     009B                     	;# 
  7094     009C                     	;# 
  7095     009D                     	;# 
  7096     009D                     	;# 
  7097     009E                     	;# 
  7098     009F                     	;# 
  7099     010C                     	;# 
  7100     010C                     	;# 
  7101     010D                     	;# 
  7102     010E                     	;# 
  7103     010F                     	;# 
  7104     010F                     	;# 
  7105     0110                     	;# 
  7106     0111                     	;# 
  7107     0112                     	;# 
  7108     0113                     	;# 
  7109     0114                     	;# 
  7110     0115                     	;# 
  7111     0116                     	;# 
  7112     0117                     	;# 
  7113     0118                     	;# 
  7114     0119                     	;# 
  7115     0119                     	;# 
  7116     0119                     	;# 
  7117     011A                     	;# 
  7118     011A                     	;# 
  7119     011A                     	;# 
  7120     011B                     	;# 
  7121     011B                     	;# 
  7122     011B                     	;# 
  7123     011B                     	;# 
  7124     011B                     	;# 
  7125     011C                     	;# 
  7126     011C                     	;# 
  7127     011C                     	;# 
  7128     011D                     	;# 
  7129     011D                     	;# 
  7130     011D                     	;# 
  7131     011E                     	;# 
  7132     011E                     	;# 
  7133     011E                     	;# 
  7134     011F                     	;# 
  7135     011F                     	;# 
  7136     011F                     	;# 
  7137     011F                     	;# 
  7138     011F                     	;# 
  7139     018C                     	;# 
  7140     018D                     	;# 
  7141     018E                     	;# 
  7142     018F                     	;# 
  7143     0190                     	;# 
  7144     0191                     	;# 
  7145     0192                     	;# 
  7146     0196                     	;# 
  7147     0197                     	;# 
  7148     0198                     	;# 
  7149     0199                     	;# 
  7150     019A                     	;# 
  7151     019B                     	;# 
  7152     019C                     	;# 
  7153     020C                     	;# 
  7154     020D                     	;# 
  7155     020E                     	;# 
  7156     020E                     	;# 
  7157     020F                     	;# 
  7158     020F                     	;# 
  7159     0210                     	;# 
  7160     0210                     	;# 
  7161     0211                     	;# 
  7162     0211                     	;# 
  7163     0212                     	;# 
  7164     0213                     	;# 
  7165     0214                     	;# 
  7166     0214                     	;# 
  7167     0215                     	;# 
  7168     0215                     	;# 
  7169     0216                     	;# 
  7170     0216                     	;# 
  7171     0217                     	;# 
  7172     0217                     	;# 
  7173     0218                     	;# 
  7174     0219                     	;# 
  7175     021A                     	;# 
  7176     021A                     	;# 
  7177     021B                     	;# 
  7178     021B                     	;# 
  7179     021C                     	;# 
  7180     021C                     	;# 
  7181     021D                     	;# 
  7182     021D                     	;# 
  7183     021E                     	;# 
  7184     021F                     	;# 
  7185     028C                     	;# 
  7186     028C                     	;# 
  7187     028D                     	;# 
  7188     028D                     	;# 
  7189     028E                     	;# 
  7190     028F                     	;# 
  7191     0290                     	;# 
  7192     0291                     	;# 
  7193     0292                     	;# 
  7194     0292                     	;# 
  7195     0293                     	;# 
  7196     0293                     	;# 
  7197     0294                     	;# 
  7198     0295                     	;# 
  7199     0296                     	;# 
  7200     0297                     	;# 
  7201     0298                     	;# 
  7202     0298                     	;# 
  7203     0299                     	;# 
  7204     0299                     	;# 
  7205     029A                     	;# 
  7206     029B                     	;# 
  7207     029C                     	;# 
  7208     029D                     	;# 
  7209     029F                     	;# 
  7210     030C                     	;# 
  7211     030C                     	;# 
  7212     030D                     	;# 
  7213     030E                     	;# 
  7214     030F                     	;# 
  7215     0310                     	;# 
  7216     0310                     	;# 
  7217     0311                     	;# 
  7218     0312                     	;# 
  7219     0313                     	;# 
  7220     0314                     	;# 
  7221     0314                     	;# 
  7222     0315                     	;# 
  7223     0316                     	;# 
  7224     0317                     	;# 
  7225     0318                     	;# 
  7226     0318                     	;# 
  7227     0319                     	;# 
  7228     031A                     	;# 
  7229     031B                     	;# 
  7230     031C                     	;# 
  7231     031C                     	;# 
  7232     031D                     	;# 
  7233     031E                     	;# 
  7234     031F                     	;# 
  7235     038C                     	;# 
  7236     038C                     	;# 
  7237     038D                     	;# 
  7238     038E                     	;# 
  7239     0390                     	;# 
  7240     0390                     	;# 
  7241     0391                     	;# 
  7242     0392                     	;# 
  7243     048C                     	;# 
  7244     048C                     	;# 
  7245     048D                     	;# 
  7246     048E                     	;# 
  7247     048F                     	;# 
  7248     048F                     	;# 
  7249     0490                     	;# 
  7250     0491                     	;# 
  7251     0492                     	;# 
  7252     0492                     	;# 
  7253     0493                     	;# 
  7254     0494                     	;# 
  7255     0495                     	;# 
  7256     0495                     	;# 
  7257     0496                     	;# 
  7258     0497                     	;# 
  7259     0498                     	;# 
  7260     0499                     	;# 
  7261     049A                     	;# 
  7262     049B                     	;# 
  7263     049C                     	;# 
  7264     049D                     	;# 
  7265     050C                     	;# 
  7266     050C                     	;# 
  7267     050D                     	;# 
  7268     050E                     	;# 
  7269     050F                     	;# 
  7270     050F                     	;# 
  7271     0510                     	;# 
  7272     0511                     	;# 
  7273     0512                     	;# 
  7274     0512                     	;# 
  7275     0513                     	;# 
  7276     0514                     	;# 
  7277     0515                     	;# 
  7278     0515                     	;# 
  7279     0516                     	;# 
  7280     0517                     	;# 
  7281     0518                     	;# 
  7282     0519                     	;# 
  7283     051A                     	;# 
  7284     051B                     	;# 
  7285     051C                     	;# 
  7286     051D                     	;# 
  7287     058C                     	;# 
  7288     058C                     	;# 
  7289     058D                     	;# 
  7290     058E                     	;# 
  7291     058F                     	;# 
  7292     058F                     	;# 
  7293     0590                     	;# 
  7294     0591                     	;# 
  7295     0592                     	;# 
  7296     0593                     	;# 
  7297     059C                     	;# 
  7298     059C                     	;# 
  7299     059D                     	;# 
  7300     059D                     	;# 
  7301     059E                     	;# 
  7302     059F                     	;# 
  7303     060C                     	;# 
  7304     060C                     	;# 
  7305     060D                     	;# 
  7306     060D                     	;# 
  7307     060E                     	;# 
  7308     060F                     	;# 
  7309     0610                     	;# 
  7310     0611                     	;# 
  7311     0612                     	;# 
  7312     0613                     	;# 
  7313     0614                     	;# 
  7314     0616                     	;# 
  7315     0616                     	;# 
  7316     0617                     	;# 
  7317     0617                     	;# 
  7318     0618                     	;# 
  7319     0619                     	;# 
  7320     061A                     	;# 
  7321     061B                     	;# 
  7322     061C                     	;# 
  7323     061D                     	;# 
  7324     061E                     	;# 
  7325     068C                     	;# 
  7326     068D                     	;# 
  7327     068E                     	;# 
  7328     068F                     	;# 
  7329     0690                     	;# 
  7330     0691                     	;# 
  7331     0692                     	;# 
  7332     0693                     	;# 
  7333     0694                     	;# 
  7334     070C                     	;# 
  7335     070D                     	;# 
  7336     070E                     	;# 
  7337     070F                     	;# 
  7338     0710                     	;# 
  7339     0711                     	;# 
  7340     0712                     	;# 
  7341     0713                     	;# 
  7342     0714                     	;# 
  7343     0716                     	;# 
  7344     0717                     	;# 
  7345     0718                     	;# 
  7346     0719                     	;# 
  7347     071A                     	;# 
  7348     071B                     	;# 
  7349     071C                     	;# 
  7350     071D                     	;# 
  7351     071E                     	;# 
  7352     0796                     	;# 
  7353     0797                     	;# 
  7354     0798                     	;# 
  7355     0799                     	;# 
  7356     079A                     	;# 
  7357     079B                     	;# 
  7358     079C                     	;# 
  7359     079D                     	;# 
  7360     080C                     	;# 
  7361     080D                     	;# 
  7362     080E                     	;# 
  7363     080F                     	;# 
  7364     0810                     	;# 
  7365     0811                     	;# 
  7366     0813                     	;# 
  7367     0814                     	;# 
  7368     081A                     	;# 
  7369     081A                     	;# 
  7370     081B                     	;# 
  7371     081C                     	;# 
  7372     081C                     	;# 
  7373     081D                     	;# 
  7374     081E                     	;# 
  7375     081F                     	;# 
  7376     088C                     	;# 
  7377     088D                     	;# 
  7378     088E                     	;# 
  7379     088F                     	;# 
  7380     0890                     	;# 
  7381     0891                     	;# 
  7382     0892                     	;# 
  7383     0893                     	;# 
  7384     0895                     	;# 
  7385     0896                     	;# 
  7386     0897                     	;# 
  7387     0898                     	;# 
  7388     0899                     	;# 
  7389     089A                     	;# 
  7390     089B                     	;# 
  7391     090C                     	;# 
  7392     090E                     	;# 
  7393     090F                     	;# 
  7394     091F                     	;# 
  7395     098F                     	;# 
  7396     098F                     	;# 
  7397     0990                     	;# 
  7398     0991                     	;# 
  7399     0992                     	;# 
  7400     0993                     	;# 
  7401     0994                     	;# 
  7402     0995                     	;# 
  7403     0996                     	;# 
  7404     0997                     	;# 
  7405     0A19                     	;# 
  7406     0A19                     	;# 
  7407     0A1A                     	;# 
  7408     0A1A                     	;# 
  7409     0A1B                     	;# 
  7410     0A1B                     	;# 
  7411     0A1B                     	;# 
  7412     0A1C                     	;# 
  7413     0A1C                     	;# 
  7414     0A1D                     	;# 
  7415     0A1D                     	;# 
  7416     0A1E                     	;# 
  7417     0A1E                     	;# 
  7418     0A1F                     	;# 
  7419     0A1F                     	;# 
  7420     0A1F                     	;# 
  7421     1E0F                     	;# 
  7422     1E10                     	;# 
  7423     1E11                     	;# 
  7424     1E12                     	;# 
  7425     1E13                     	;# 
  7426     1E14                     	;# 
  7427     1E15                     	;# 
  7428     1E16                     	;# 
  7429     1E17                     	;# 
  7430     1E18                     	;# 
  7431     1E19                     	;# 
  7432     1E1A                     	;# 
  7433     1E1B                     	;# 
  7434     1E1C                     	;# 
  7435     1E1D                     	;# 
  7436     1E1E                     	;# 
  7437     1E1F                     	;# 
  7438     1E20                     	;# 
  7439     1E21                     	;# 
  7440     1E22                     	;# 
  7441     1E23                     	;# 
  7442     1E24                     	;# 
  7443     1E25                     	;# 
  7444     1E26                     	;# 
  7445     1E27                     	;# 
  7446     1E28                     	;# 
  7447     1E29                     	;# 
  7448     1E2A                     	;# 
  7449     1E2B                     	;# 
  7450     1E2C                     	;# 
  7451     1E2D                     	;# 
  7452     1E2E                     	;# 
  7453     1E2F                     	;# 
  7454     1E30                     	;# 
  7455     1E31                     	;# 
  7456     1E32                     	;# 
  7457     1E33                     	;# 
  7458     1E34                     	;# 
  7459     1E35                     	;# 
  7460     1E36                     	;# 
  7461     1E37                     	;# 
  7462     1E8F                     	;# 
  7463     1E90                     	;# 
  7464     1E91                     	;# 
  7465     1E92                     	;# 
  7466     1E93                     	;# 
  7467     1E94                     	;# 
  7468     1E95                     	;# 
  7469     1E96                     	;# 
  7470     1E97                     	;# 
  7471     1E9C                     	;# 
  7472     1E9D                     	;# 
  7473     1E9E                     	;# 
  7474     1EA1                     	;# 
  7475     1EA2                     	;# 
  7476     1EA3                     	;# 
  7477     1EA4                     	;# 
  7478     1EA5                     	;# 
  7479     1EA9                     	;# 
  7480     1EAA                     	;# 
  7481     1EAB                     	;# 
  7482     1EAC                     	;# 
  7483     1EB1                     	;# 
  7484     1EB2                     	;# 
  7485     1EB3                     	;# 
  7486     1EB8                     	;# 
  7487     1EB9                     	;# 
  7488     1EBA                     	;# 
  7489     1EBB                     	;# 
  7490     1EBC                     	;# 
  7491     1EBD                     	;# 
  7492     1EBE                     	;# 
  7493     1EC3                     	;# 
  7494     1EC5                     	;# 
  7495     1EC6                     	;# 
  7496     1EC7                     	;# 
  7497     1EC8                     	;# 
  7498     1EC9                     	;# 
  7499     1ECA                     	;# 
  7500     1ECB                     	;# 
  7501     1ECC                     	;# 
  7502     1ECD                     	;# 
  7503     1ECE                     	;# 
  7504     1F10                     	;# 
  7505     1F11                     	;# 
  7506     1F12                     	;# 
  7507     1F13                     	;# 
  7508     1F14                     	;# 
  7509     1F15                     	;# 
  7510     1F16                     	;# 
  7511     1F17                     	;# 
  7512     1F18                     	;# 
  7513     1F19                     	;# 
  7514     1F1A                     	;# 
  7515     1F1B                     	;# 
  7516     1F1C                     	;# 
  7517     1F1D                     	;# 
  7518     1F1E                     	;# 
  7519     1F1F                     	;# 
  7520     1F20                     	;# 
  7521     1F21                     	;# 
  7522     1F22                     	;# 
  7523     1F23                     	;# 
  7524     1F24                     	;# 
  7525     1F25                     	;# 
  7526     1F26                     	;# 
  7527     1F27                     	;# 
  7528     1F38                     	;# 
  7529     1F39                     	;# 
  7530     1F3A                     	;# 
  7531     1F3B                     	;# 
  7532     1F3C                     	;# 
  7533     1F3D                     	;# 
  7534     1F3E                     	;# 
  7535     1F3F                     	;# 
  7536     1F43                     	;# 
  7537     1F44                     	;# 
  7538     1F45                     	;# 
  7539     1F46                     	;# 
  7540     1F47                     	;# 
  7541     1F48                     	;# 
  7542     1F49                     	;# 
  7543     1F4A                     	;# 
  7544     1F4E                     	;# 
  7545     1F4F                     	;# 
  7546     1F50                     	;# 
  7547     1F51                     	;# 
  7548     1F52                     	;# 
  7549     1F53                     	;# 
  7550     1F54                     	;# 
  7551     1F55                     	;# 
  7552     1F65                     	;# 
  7553     1F66                     	;# 
  7554     1F67                     	;# 
  7555     1F68                     	;# 
  7556     1F69                     	;# 
  7557     1F6A                     	;# 
  7558     1F6B                     	;# 
  7559     1FE4                     	;# 
  7560     1FE5                     	;# 
  7561     1FE6                     	;# 
  7562     1FE7                     	;# 
  7563     1FE8                     	;# 
  7564     1FE8                     	;# 
  7565     1FE9                     	;# 
  7566     1FEA                     	;# 
  7567     1FEB                     	;# 
  7568     1FED                     	;# 
  7569     1FEE                     	;# 
  7570     1FEF                     	;# 
  7571     0000                     	;# 
  7572     0001                     	;# 
  7573     0002                     	;# 
  7574     0003                     	;# 
  7575     0004                     	;# 
  7576     0005                     	;# 
  7577     0006                     	;# 
  7578     0007                     	;# 
  7579     0008                     	;# 
  7580     0009                     	;# 
  7581     000A                     	;# 
  7582     000B                     	;# 
  7583     000C                     	;# 
  7584     000D                     	;# 
  7585     000E                     	;# 
  7586     0010                     	;# 
  7587     0012                     	;# 
  7588     0013                     	;# 
  7589     0014                     	;# 
  7590     0016                     	;# 
  7591     0018                     	;# 
  7592     0019                     	;# 
  7593     001A                     	;# 
  7594     001C                     	;# 
  7595     008C                     	;# 
  7596     008C                     	;# 
  7597     008D                     	;# 
  7598     008E                     	;# 
  7599     008E                     	;# 
  7600     008F                     	;# 
  7601     0090                     	;# 
  7602     0090                     	;# 
  7603     0091                     	;# 
  7604     0092                     	;# 
  7605     0092                     	;# 
  7606     0093                     	;# 
  7607     0094                     	;# 
  7608     0094                     	;# 
  7609     0095                     	;# 
  7610     0096                     	;# 
  7611     0096                     	;# 
  7612     0097                     	;# 
  7613     0098                     	;# 
  7614     0099                     	;# 
  7615     009A                     	;# 
  7616     009B                     	;# 
  7617     009B                     	;# 
  7618     009C                     	;# 
  7619     009D                     	;# 
  7620     009D                     	;# 
  7621     009E                     	;# 
  7622     009F                     	;# 
  7623     010C                     	;# 
  7624     010C                     	;# 
  7625     010D                     	;# 
  7626     010E                     	;# 
  7627     010F                     	;# 
  7628     010F                     	;# 
  7629     0110                     	;# 
  7630     0111                     	;# 
  7631     0112                     	;# 
  7632     0113                     	;# 
  7633     0114                     	;# 
  7634     0115                     	;# 
  7635     0116                     	;# 
  7636     0117                     	;# 
  7637     0118                     	;# 
  7638     0119                     	;# 
  7639     0119                     	;# 
  7640     0119                     	;# 
  7641     011A                     	;# 
  7642     011A                     	;# 
  7643     011A                     	;# 
  7644     011B                     	;# 
  7645     011B                     	;# 
  7646     011B                     	;# 
  7647     011B                     	;# 
  7648     011B                     	;# 
  7649     011C                     	;# 
  7650     011C                     	;# 
  7651     011C                     	;# 
  7652     011D                     	;# 
  7653     011D                     	;# 
  7654     011D                     	;# 
  7655     011E                     	;# 
  7656     011E                     	;# 
  7657     011E                     	;# 
  7658     011F                     	;# 
  7659     011F                     	;# 
  7660     011F                     	;# 
  7661     011F                     	;# 
  7662     011F                     	;# 
  7663     018C                     	;# 
  7664     018D                     	;# 
  7665     018E                     	;# 
  7666     018F                     	;# 
  7667     0190                     	;# 
  7668     0191                     	;# 
  7669     0192                     	;# 
  7670     0196                     	;# 
  7671     0197                     	;# 
  7672     0198                     	;# 
  7673     0199                     	;# 
  7674     019A                     	;# 
  7675     019B                     	;# 
  7676     019C                     	;# 
  7677     020C                     	;# 
  7678     020D                     	;# 
  7679     020E                     	;# 
  7680     020E                     	;# 
  7681     020F                     	;# 
  7682     020F                     	;# 
  7683     0210                     	;# 
  7684     0210                     	;# 
  7685     0211                     	;# 
  7686     0211                     	;# 
  7687     0212                     	;# 
  7688     0213                     	;# 
  7689     0214                     	;# 
  7690     0214                     	;# 
  7691     0215                     	;# 
  7692     0215                     	;# 
  7693     0216                     	;# 
  7694     0216                     	;# 
  7695     0217                     	;# 
  7696     0217                     	;# 
  7697     0218                     	;# 
  7698     0219                     	;# 
  7699     021A                     	;# 
  7700     021A                     	;# 
  7701     021B                     	;# 
  7702     021B                     	;# 
  7703     021C                     	;# 
  7704     021C                     	;# 
  7705     021D                     	;# 
  7706     021D                     	;# 
  7707     021E                     	;# 
  7708     021F                     	;# 
  7709     028C                     	;# 
  7710     028C                     	;# 
  7711     028D                     	;# 
  7712     028D                     	;# 
  7713     028E                     	;# 
  7714     028F                     	;# 
  7715     0290                     	;# 
  7716     0291                     	;# 
  7717     0292                     	;# 
  7718     0292                     	;# 
  7719     0293                     	;# 
  7720     0293                     	;# 
  7721     0294                     	;# 
  7722     0295                     	;# 
  7723     0296                     	;# 
  7724     0297                     	;# 
  7725     0298                     	;# 
  7726     0298                     	;# 
  7727     0299                     	;# 
  7728     0299                     	;# 
  7729     029A                     	;# 
  7730     029B                     	;# 
  7731     029C                     	;# 
  7732     029D                     	;# 
  7733     029F                     	;# 
  7734     030C                     	;# 
  7735     030C                     	;# 
  7736     030D                     	;# 
  7737     030E                     	;# 
  7738     030F                     	;# 
  7739     0310                     	;# 
  7740     0310                     	;# 
  7741     0311                     	;# 
  7742     0312                     	;# 
  7743     0313                     	;# 
  7744     0314                     	;# 
  7745     0314                     	;# 
  7746     0315                     	;# 
  7747     0316                     	;# 
  7748     0317                     	;# 
  7749     0318                     	;# 
  7750     0318                     	;# 
  7751     0319                     	;# 
  7752     031A                     	;# 
  7753     031B                     	;# 
  7754     031C                     	;# 
  7755     031C                     	;# 
  7756     031D                     	;# 
  7757     031E                     	;# 
  7758     031F                     	;# 
  7759     038C                     	;# 
  7760     038C                     	;# 
  7761     038D                     	;# 
  7762     038E                     	;# 
  7763     0390                     	;# 
  7764     0390                     	;# 
  7765     0391                     	;# 
  7766     0392                     	;# 
  7767     048C                     	;# 
  7768     048C                     	;# 
  7769     048D                     	;# 
  7770     048E                     	;# 
  7771     048F                     	;# 
  7772     048F                     	;# 
  7773     0490                     	;# 
  7774     0491                     	;# 
  7775     0492                     	;# 
  7776     0492                     	;# 
  7777     0493                     	;# 
  7778     0494                     	;# 
  7779     0495                     	;# 
  7780     0495                     	;# 
  7781     0496                     	;# 
  7782     0497                     	;# 
  7783     0498                     	;# 
  7784     0499                     	;# 
  7785     049A                     	;# 
  7786     049B                     	;# 
  7787     049C                     	;# 
  7788     049D                     	;# 
  7789     050C                     	;# 
  7790     050C                     	;# 
  7791     050D                     	;# 
  7792     050E                     	;# 
  7793     050F                     	;# 
  7794     050F                     	;# 
  7795     0510                     	;# 
  7796     0511                     	;# 
  7797     0512                     	;# 
  7798     0512                     	;# 
  7799     0513                     	;# 
  7800     0514                     	;# 
  7801     0515                     	;# 
  7802     0515                     	;# 
  7803     0516                     	;# 
  7804     0517                     	;# 
  7805     0518                     	;# 
  7806     0519                     	;# 
  7807     051A                     	;# 
  7808     051B                     	;# 
  7809     051C                     	;# 
  7810     051D                     	;# 
  7811     058C                     	;# 
  7812     058C                     	;# 
  7813     058D                     	;# 
  7814     058E                     	;# 
  7815     058F                     	;# 
  7816     058F                     	;# 
  7817     0590                     	;# 
  7818     0591                     	;# 
  7819     0592                     	;# 
  7820     0593                     	;# 
  7821     059C                     	;# 
  7822     059C                     	;# 
  7823     059D                     	;# 
  7824     059D                     	;# 
  7825     059E                     	;# 
  7826     059F                     	;# 
  7827     060C                     	;# 
  7828     060C                     	;# 
  7829     060D                     	;# 
  7830     060D                     	;# 
  7831     060E                     	;# 
  7832     060F                     	;# 
  7833     0610                     	;# 
  7834     0611                     	;# 
  7835     0612                     	;# 
  7836     0613                     	;# 
  7837     0614                     	;# 
  7838     0616                     	;# 
  7839     0616                     	;# 
  7840     0617                     	;# 
  7841     0617                     	;# 
  7842     0618                     	;# 
  7843     0619                     	;# 
  7844     061A                     	;# 
  7845     061B                     	;# 
  7846     061C                     	;# 
  7847     061D                     	;# 
  7848     061E                     	;# 
  7849     068C                     	;# 
  7850     068D                     	;# 
  7851     068E                     	;# 
  7852     068F                     	;# 
  7853     0690                     	;# 
  7854     0691                     	;# 
  7855     0692                     	;# 
  7856     0693                     	;# 
  7857     0694                     	;# 
  7858     070C                     	;# 
  7859     070D                     	;# 
  7860     070E                     	;# 
  7861     070F                     	;# 
  7862     0710                     	;# 
  7863     0711                     	;# 
  7864     0712                     	;# 
  7865     0713                     	;# 
  7866     0714                     	;# 
  7867     0716                     	;# 
  7868     0717                     	;# 
  7869     0718                     	;# 
  7870     0719                     	;# 
  7871     071A                     	;# 
  7872     071B                     	;# 
  7873     071C                     	;# 
  7874     071D                     	;# 
  7875     071E                     	;# 
  7876     0796                     	;# 
  7877     0797                     	;# 
  7878     0798                     	;# 
  7879     0799                     	;# 
  7880     079A                     	;# 
  7881     079B                     	;# 
  7882     079C                     	;# 
  7883     079D                     	;# 
  7884     080C                     	;# 
  7885     080D                     	;# 
  7886     080E                     	;# 
  7887     080F                     	;# 
  7888     0810                     	;# 
  7889     0811                     	;# 
  7890     0813                     	;# 
  7891     0814                     	;# 
  7892     081A                     	;# 
  7893     081A                     	;# 
  7894     081B                     	;# 
  7895     081C                     	;# 
  7896     081C                     	;# 
  7897     081D                     	;# 
  7898     081E                     	;# 
  7899     081F                     	;# 
  7900     088C                     	;# 
  7901     088D                     	;# 
  7902     088E                     	;# 
  7903     088F                     	;# 
  7904     0890                     	;# 
  7905     0891                     	;# 
  7906     0892                     	;# 
  7907     0893                     	;# 
  7908     0895                     	;# 
  7909     0896                     	;# 
  7910     0897                     	;# 
  7911     0898                     	;# 
  7912     0899                     	;# 
  7913     089A                     	;# 
  7914     089B                     	;# 
  7915     090C                     	;# 
  7916     090E                     	;# 
  7917     090F                     	;# 
  7918     091F                     	;# 
  7919     098F                     	;# 
  7920     098F                     	;# 
  7921     0990                     	;# 
  7922     0991                     	;# 
  7923     0992                     	;# 
  7924     0993                     	;# 
  7925     0994                     	;# 
  7926     0995                     	;# 
  7927     0996                     	;# 
  7928     0997                     	;# 
  7929     0A19                     	;# 
  7930     0A19                     	;# 
  7931     0A1A                     	;# 
  7932     0A1A                     	;# 
  7933     0A1B                     	;# 
  7934     0A1B                     	;# 
  7935     0A1B                     	;# 
  7936     0A1C                     	;# 
  7937     0A1C                     	;# 
  7938     0A1D                     	;# 
  7939     0A1D                     	;# 
  7940     0A1E                     	;# 
  7941     0A1E                     	;# 
  7942     0A1F                     	;# 
  7943     0A1F                     	;# 
  7944     0A1F                     	;# 
  7945     1E0F                     	;# 
  7946     1E10                     	;# 
  7947     1E11                     	;# 
  7948     1E12                     	;# 
  7949     1E13                     	;# 
  7950     1E14                     	;# 
  7951     1E15                     	;# 
  7952     1E16                     	;# 
  7953     1E17                     	;# 
  7954     1E18                     	;# 
  7955     1E19                     	;# 
  7956     1E1A                     	;# 
  7957     1E1B                     	;# 
  7958     1E1C                     	;# 
  7959     1E1D                     	;# 
  7960     1E1E                     	;# 
  7961     1E1F                     	;# 
  7962     1E20                     	;# 
  7963     1E21                     	;# 
  7964     1E22                     	;# 
  7965     1E23                     	;# 
  7966     1E24                     	;# 
  7967     1E25                     	;# 
  7968     1E26                     	;# 
  7969     1E27                     	;# 
  7970     1E28                     	;# 
  7971     1E29                     	;# 
  7972     1E2A                     	;# 
  7973     1E2B                     	;# 
  7974     1E2C                     	;# 
  7975     1E2D                     	;# 
  7976     1E2E                     	;# 
  7977     1E2F                     	;# 
  7978     1E30                     	;# 
  7979     1E31                     	;# 
  7980     1E32                     	;# 
  7981     1E33                     	;# 
  7982     1E34                     	;# 
  7983     1E35                     	;# 
  7984     1E36                     	;# 
  7985     1E37                     	;# 
  7986     1E8F                     	;# 
  7987     1E90                     	;# 
  7988     1E91                     	;# 
  7989     1E92                     	;# 
  7990     1E93                     	;# 
  7991     1E94                     	;# 
  7992     1E95                     	;# 
  7993     1E96                     	;# 
  7994     1E97                     	;# 
  7995     1E9C                     	;# 
  7996     1E9D                     	;# 
  7997     1E9E                     	;# 
  7998     1EA1                     	;# 
  7999     1EA2                     	;# 
  8000     1EA3                     	;# 
  8001     1EA4                     	;# 
  8002     1EA5                     	;# 
  8003     1EA9                     	;# 
  8004     1EAA                     	;# 
  8005     1EAB                     	;# 
  8006     1EAC                     	;# 
  8007     1EB1                     	;# 
  8008     1EB2                     	;# 
  8009     1EB3                     	;# 
  8010     1EB8                     	;# 
  8011     1EB9                     	;# 
  8012     1EBA                     	;# 
  8013     1EBB                     	;# 
  8014     1EBC                     	;# 
  8015     1EBD                     	;# 
  8016     1EBE                     	;# 
  8017     1EC3                     	;# 
  8018     1EC5                     	;# 
  8019     1EC6                     	;# 
  8020     1EC7                     	;# 
  8021     1EC8                     	;# 
  8022     1EC9                     	;# 
  8023     1ECA                     	;# 
  8024     1ECB                     	;# 
  8025     1ECC                     	;# 
  8026     1ECD                     	;# 
  8027     1ECE                     	;# 
  8028     1F10                     	;# 
  8029     1F11                     	;# 
  8030     1F12                     	;# 
  8031     1F13                     	;# 
  8032     1F14                     	;# 
  8033     1F15                     	;# 
  8034     1F16                     	;# 
  8035     1F17                     	;# 
  8036     1F18                     	;# 
  8037     1F19                     	;# 
  8038     1F1A                     	;# 
  8039     1F1B                     	;# 
  8040     1F1C                     	;# 
  8041     1F1D                     	;# 
  8042     1F1E                     	;# 
  8043     1F1F                     	;# 
  8044     1F20                     	;# 
  8045     1F21                     	;# 
  8046     1F22                     	;# 
  8047     1F23                     	;# 
  8048     1F24                     	;# 
  8049     1F25                     	;# 
  8050     1F26                     	;# 
  8051     1F27                     	;# 
  8052     1F38                     	;# 
  8053     1F39                     	;# 
  8054     1F3A                     	;# 
  8055     1F3B                     	;# 
  8056     1F3C                     	;# 
  8057     1F3D                     	;# 
  8058     1F3E                     	;# 
  8059     1F3F                     	;# 
  8060     1F43                     	;# 
  8061     1F44                     	;# 
  8062     1F45                     	;# 
  8063     1F46                     	;# 
  8064     1F47                     	;# 
  8065     1F48                     	;# 
  8066     1F49                     	;# 
  8067     1F4A                     	;# 
  8068     1F4E                     	;# 
  8069     1F4F                     	;# 
  8070     1F50                     	;# 
  8071     1F51                     	;# 
  8072     1F52                     	;# 
  8073     1F53                     	;# 
  8074     1F54                     	;# 
  8075     1F55                     	;# 
  8076     1F65                     	;# 
  8077     1F66                     	;# 
  8078     1F67                     	;# 
  8079     1F68                     	;# 
  8080     1F69                     	;# 
  8081     1F6A                     	;# 
  8082     1F6B                     	;# 
  8083     1FE4                     	;# 
  8084     1FE5                     	;# 
  8085     1FE6                     	;# 
  8086     1FE7                     	;# 
  8087     1FE8                     	;# 
  8088     1FE8                     	;# 
  8089     1FE9                     	;# 
  8090     1FEA                     	;# 
  8091     1FEB                     	;# 
  8092     1FED                     	;# 
  8093     1FEE                     	;# 
  8094     1FEF                     	;# 
  8095     0000                     	;# 
  8096     0001                     	;# 
  8097     0002                     	;# 
  8098     0003                     	;# 
  8099     0004                     	;# 
  8100     0005                     	;# 
  8101     0006                     	;# 
  8102     0007                     	;# 
  8103     0008                     	;# 
  8104     0009                     	;# 
  8105     000A                     	;# 
  8106     000B                     	;# 
  8107     000C                     	;# 
  8108     000D                     	;# 
  8109     000E                     	;# 
  8110     0010                     	;# 
  8111     0012                     	;# 
  8112     0013                     	;# 
  8113     0014                     	;# 
  8114     0016                     	;# 
  8115     0018                     	;# 
  8116     0019                     	;# 
  8117     001A                     	;# 
  8118     001C                     	;# 
  8119     008C                     	;# 
  8120     008C                     	;# 
  8121     008D                     	;# 
  8122     008E                     	;# 
  8123     008E                     	;# 
  8124     008F                     	;# 
  8125     0090                     	;# 
  8126     0090                     	;# 
  8127     0091                     	;# 
  8128     0092                     	;# 
  8129     0092                     	;# 
  8130     0093                     	;# 
  8131     0094                     	;# 
  8132     0094                     	;# 
  8133     0095                     	;# 
  8134     0096                     	;# 
  8135     0096                     	;# 
  8136     0097                     	;# 
  8137     0098                     	;# 
  8138     0099                     	;# 
  8139     009A                     	;# 
  8140     009B                     	;# 
  8141     009B                     	;# 
  8142     009C                     	;# 
  8143     009D                     	;# 
  8144     009D                     	;# 
  8145     009E                     	;# 
  8146     009F                     	;# 
  8147     010C                     	;# 
  8148     010C                     	;# 
  8149     010D                     	;# 
  8150     010E                     	;# 
  8151     010F                     	;# 
  8152     010F                     	;# 
  8153     0110                     	;# 
  8154     0111                     	;# 
  8155     0112                     	;# 
  8156     0113                     	;# 
  8157     0114                     	;# 
  8158     0115                     	;# 
  8159     0116                     	;# 
  8160     0117                     	;# 
  8161     0118                     	;# 
  8162     0119                     	;# 
  8163     0119                     	;# 
  8164     0119                     	;# 
  8165     011A                     	;# 
  8166     011A                     	;# 
  8167     011A                     	;# 
  8168     011B                     	;# 
  8169     011B                     	;# 
  8170     011B                     	;# 
  8171     011B                     	;# 
  8172     011B                     	;# 
  8173     011C                     	;# 
  8174     011C                     	;# 
  8175     011C                     	;# 
  8176     011D                     	;# 
  8177     011D                     	;# 
  8178     011D                     	;# 
  8179     011E                     	;# 
  8180     011E                     	;# 
  8181     011E                     	;# 
  8182     011F                     	;# 
  8183     011F                     	;# 
  8184     011F                     	;# 
  8185     011F                     	;# 
  8186     011F                     	;# 
  8187     018C                     	;# 
  8188     018D                     	;# 
  8189     018E                     	;# 
  8190     018F                     	;# 
  8191     0190                     	;# 
  8192     0191                     	;# 
  8193     0192                     	;# 
  8194     0196                     	;# 
  8195     0197                     	;# 
  8196     0198                     	;# 
  8197     0199                     	;# 
  8198     019A                     	;# 
  8199     019B                     	;# 
  8200     019C                     	;# 
  8201     020C                     	;# 
  8202     020D                     	;# 
  8203     020E                     	;# 
  8204     020E                     	;# 
  8205     020F                     	;# 
  8206     020F                     	;# 
  8207     0210                     	;# 
  8208     0210                     	;# 
  8209     0211                     	;# 
  8210     0211                     	;# 
  8211     0212                     	;# 
  8212     0213                     	;# 
  8213     0214                     	;# 
  8214     0214                     	;# 
  8215     0215                     	;# 
  8216     0215                     	;# 
  8217     0216                     	;# 
  8218     0216                     	;# 
  8219     0217                     	;# 
  8220     0217                     	;# 
  8221     0218                     	;# 
  8222     0219                     	;# 
  8223     021A                     	;# 
  8224     021A                     	;# 
  8225     021B                     	;# 
  8226     021B                     	;# 
  8227     021C                     	;# 
  8228     021C                     	;# 
  8229     021D                     	;# 
  8230     021D                     	;# 
  8231     021E                     	;# 
  8232     021F                     	;# 
  8233     028C                     	;# 
  8234     028C                     	;# 
  8235     028D                     	;# 
  8236     028D                     	;# 
  8237     028E                     	;# 
  8238     028F                     	;# 
  8239     0290                     	;# 
  8240     0291                     	;# 
  8241     0292                     	;# 
  8242     0292                     	;# 
  8243     0293                     	;# 
  8244     0293                     	;# 
  8245     0294                     	;# 
  8246     0295                     	;# 
  8247     0296                     	;# 
  8248     0297                     	;# 
  8249     0298                     	;# 
  8250     0298                     	;# 
  8251     0299                     	;# 
  8252     0299                     	;# 
  8253     029A                     	;# 
  8254     029B                     	;# 
  8255     029C                     	;# 
  8256     029D                     	;# 
  8257     029F                     	;# 
  8258     030C                     	;# 
  8259     030C                     	;# 
  8260     030D                     	;# 
  8261     030E                     	;# 
  8262     030F                     	;# 
  8263     0310                     	;# 
  8264     0310                     	;# 
  8265     0311                     	;# 
  8266     0312                     	;# 
  8267     0313                     	;# 
  8268     0314                     	;# 
  8269     0314                     	;# 
  8270     0315                     	;# 
  8271     0316                     	;# 
  8272     0317                     	;# 
  8273     0318                     	;# 
  8274     0318                     	;# 
  8275     0319                     	;# 
  8276     031A                     	;# 
  8277     031B                     	;# 
  8278     031C                     	;# 
  8279     031C                     	;# 
  8280     031D                     	;# 
  8281     031E                     	;# 
  8282     031F                     	;# 
  8283     038C                     	;# 
  8284     038C                     	;# 
  8285     038D                     	;# 
  8286     038E                     	;# 
  8287     0390                     	;# 
  8288     0390                     	;# 
  8289     0391                     	;# 
  8290     0392                     	;# 
  8291     048C                     	;# 
  8292     048C                     	;# 
  8293     048D                     	;# 
  8294     048E                     	;# 
  8295     048F                     	;# 
  8296     048F                     	;# 
  8297     0490                     	;# 
  8298     0491                     	;# 
  8299     0492                     	;# 
  8300     0492                     	;# 
  8301     0493                     	;# 
  8302     0494                     	;# 
  8303     0495                     	;# 
  8304     0495                     	;# 
  8305     0496                     	;# 
  8306     0497                     	;# 
  8307     0498                     	;# 
  8308     0499                     	;# 
  8309     049A                     	;# 
  8310     049B                     	;# 
  8311     049C                     	;# 
  8312     049D                     	;# 
  8313     050C                     	;# 
  8314     050C                     	;# 
  8315     050D                     	;# 
  8316     050E                     	;# 
  8317     050F                     	;# 
  8318     050F                     	;# 
  8319     0510                     	;# 
  8320     0511                     	;# 
  8321     0512                     	;# 
  8322     0512                     	;# 
  8323     0513                     	;# 
  8324     0514                     	;# 
  8325     0515                     	;# 
  8326     0515                     	;# 
  8327     0516                     	;# 
  8328     0517                     	;# 
  8329     0518                     	;# 
  8330     0519                     	;# 
  8331     051A                     	;# 
  8332     051B                     	;# 
  8333     051C                     	;# 
  8334     051D                     	;# 
  8335     058C                     	;# 
  8336     058C                     	;# 
  8337     058D                     	;# 
  8338     058E                     	;# 
  8339     058F                     	;# 
  8340     058F                     	;# 
  8341     0590                     	;# 
  8342     0591                     	;# 
  8343     0592                     	;# 
  8344     0593                     	;# 
  8345     059C                     	;# 
  8346     059C                     	;# 
  8347     059D                     	;# 
  8348     059D                     	;# 
  8349     059E                     	;# 
  8350     059F                     	;# 
  8351     060C                     	;# 
  8352     060C                     	;# 
  8353     060D                     	;# 
  8354     060D                     	;# 
  8355     060E                     	;# 
  8356     060F                     	;# 
  8357     0610                     	;# 
  8358     0611                     	;# 
  8359     0612                     	;# 
  8360     0613                     	;# 
  8361     0614                     	;# 
  8362     0616                     	;# 
  8363     0616                     	;# 
  8364     0617                     	;# 
  8365     0617                     	;# 
  8366     0618                     	;# 
  8367     0619                     	;# 
  8368     061A                     	;# 
  8369     061B                     	;# 
  8370     061C                     	;# 
  8371     061D                     	;# 
  8372     061E                     	;# 
  8373     068C                     	;# 
  8374     068D                     	;# 
  8375     068E                     	;# 
  8376     068F                     	;# 
  8377     0690                     	;# 
  8378     0691                     	;# 
  8379     0692                     	;# 
  8380     0693                     	;# 
  8381     0694                     	;# 
  8382     070C                     	;# 
  8383     070D                     	;# 
  8384     070E                     	;# 
  8385     070F                     	;# 
  8386     0710                     	;# 
  8387     0711                     	;# 
  8388     0712                     	;# 
  8389     0713                     	;# 
  8390     0714                     	;# 
  8391     0716                     	;# 
  8392     0717                     	;# 
  8393     0718                     	;# 
  8394     0719                     	;# 
  8395     071A                     	;# 
  8396     071B                     	;# 
  8397     071C                     	;# 
  8398     071D                     	;# 
  8399     071E                     	;# 
  8400     0796                     	;# 
  8401     0797                     	;# 
  8402     0798                     	;# 
  8403     0799                     	;# 
  8404     079A                     	;# 
  8405     079B                     	;# 
  8406     079C                     	;# 
  8407     079D                     	;# 
  8408     080C                     	;# 
  8409     080D                     	;# 
  8410     080E                     	;# 
  8411     080F                     	;# 
  8412     0810                     	;# 
  8413     0811                     	;# 
  8414     0813                     	;# 
  8415     0814                     	;# 
  8416     081A                     	;# 
  8417     081A                     	;# 
  8418     081B                     	;# 
  8419     081C                     	;# 
  8420     081C                     	;# 
  8421     081D                     	;# 
  8422     081E                     	;# 
  8423     081F                     	;# 
  8424     088C                     	;# 
  8425     088D                     	;# 
  8426     088E                     	;# 
  8427     088F                     	;# 
  8428     0890                     	;# 
  8429     0891                     	;# 
  8430     0892                     	;# 
  8431     0893                     	;# 
  8432     0895                     	;# 
  8433     0896                     	;# 
  8434     0897                     	;# 
  8435     0898                     	;# 
  8436     0899                     	;# 
  8437     089A                     	;# 
  8438     089B                     	;# 
  8439     090C                     	;# 
  8440     090E                     	;# 
  8441     090F                     	;# 
  8442     091F                     	;# 
  8443     098F                     	;# 
  8444     098F                     	;# 
  8445     0990                     	;# 
  8446     0991                     	;# 
  8447     0992                     	;# 
  8448     0993                     	;# 
  8449     0994                     	;# 
  8450     0995                     	;# 
  8451     0996                     	;# 
  8452     0997                     	;# 
  8453     0A19                     	;# 
  8454     0A19                     	;# 
  8455     0A1A                     	;# 
  8456     0A1A                     	;# 
  8457     0A1B                     	;# 
  8458     0A1B                     	;# 
  8459     0A1B                     	;# 
  8460     0A1C                     	;# 
  8461     0A1C                     	;# 
  8462     0A1D                     	;# 
  8463     0A1D                     	;# 
  8464     0A1E                     	;# 
  8465     0A1E                     	;# 
  8466     0A1F                     	;# 
  8467     0A1F                     	;# 
  8468     0A1F                     	;# 
  8469     1E0F                     	;# 
  8470     1E10                     	;# 
  8471     1E11                     	;# 
  8472     1E12                     	;# 
  8473     1E13                     	;# 
  8474     1E14                     	;# 
  8475     1E15                     	;# 
  8476     1E16                     	;# 
  8477     1E17                     	;# 
  8478     1E18                     	;# 
  8479     1E19                     	;# 
  8480     1E1A                     	;# 
  8481     1E1B                     	;# 
  8482     1E1C                     	;# 
  8483     1E1D                     	;# 
  8484     1E1E                     	;# 
  8485     1E1F                     	;# 
  8486     1E20                     	;# 
  8487     1E21                     	;# 
  8488     1E22                     	;# 
  8489     1E23                     	;# 
  8490     1E24                     	;# 
  8491     1E25                     	;# 
  8492     1E26                     	;# 
  8493     1E27                     	;# 
  8494     1E28                     	;# 
  8495     1E29                     	;# 
  8496     1E2A                     	;# 
  8497     1E2B                     	;# 
  8498     1E2C                     	;# 
  8499     1E2D                     	;# 
  8500     1E2E                     	;# 
  8501     1E2F                     	;# 
  8502     1E30                     	;# 
  8503     1E31                     	;# 
  8504     1E32                     	;# 
  8505     1E33                     	;# 
  8506     1E34                     	;# 
  8507     1E35                     	;# 
  8508     1E36                     	;# 
  8509     1E37                     	;# 
  8510     1E8F                     	;# 
  8511     1E90                     	;# 
  8512     1E91                     	;# 
  8513     1E92                     	;# 
  8514     1E93                     	;# 
  8515     1E94                     	;# 
  8516     1E95                     	;# 
  8517     1E96                     	;# 
  8518     1E97                     	;# 
  8519     1E9C                     	;# 
  8520     1E9D                     	;# 
  8521     1E9E                     	;# 
  8522     1EA1                     	;# 
  8523     1EA2                     	;# 
  8524     1EA3                     	;# 
  8525     1EA4                     	;# 
  8526     1EA5                     	;# 
  8527     1EA9                     	;# 
  8528     1EAA                     	;# 
  8529     1EAB                     	;# 
  8530     1EAC                     	;# 
  8531     1EB1                     	;# 
  8532     1EB2                     	;# 
  8533     1EB3                     	;# 
  8534     1EB8                     	;# 
  8535     1EB9                     	;# 
  8536     1EBA                     	;# 
  8537     1EBB                     	;# 
  8538     1EBC                     	;# 
  8539     1EBD                     	;# 
  8540     1EBE                     	;# 
  8541     1EC3                     	;# 
  8542     1EC5                     	;# 
  8543     1EC6                     	;# 
  8544     1EC7                     	;# 
  8545     1EC8                     	;# 
  8546     1EC9                     	;# 
  8547     1ECA                     	;# 
  8548     1ECB                     	;# 
  8549     1ECC                     	;# 
  8550     1ECD                     	;# 
  8551     1ECE                     	;# 
  8552     1F10                     	;# 
  8553     1F11                     	;# 
  8554     1F12                     	;# 
  8555     1F13                     	;# 
  8556     1F14                     	;# 
  8557     1F15                     	;# 
  8558     1F16                     	;# 
  8559     1F17                     	;# 
  8560     1F18                     	;# 
  8561     1F19                     	;# 
  8562     1F1A                     	;# 
  8563     1F1B                     	;# 
  8564     1F1C                     	;# 
  8565     1F1D                     	;# 
  8566     1F1E                     	;# 
  8567     1F1F                     	;# 
  8568     1F20                     	;# 
  8569     1F21                     	;# 
  8570     1F22                     	;# 
  8571     1F23                     	;# 
  8572     1F24                     	;# 
  8573     1F25                     	;# 
  8574     1F26                     	;# 
  8575     1F27                     	;# 
  8576     1F38                     	;# 
  8577     1F39                     	;# 
  8578     1F3A                     	;# 
  8579     1F3B                     	;# 
  8580     1F3C                     	;# 
  8581     1F3D                     	;# 
  8582     1F3E                     	;# 
  8583     1F3F                     	;# 
  8584     1F43                     	;# 
  8585     1F44                     	;# 
  8586     1F45                     	;# 
  8587     1F46                     	;# 
  8588     1F47                     	;# 
  8589     1F48                     	;# 
  8590     1F49                     	;# 
  8591     1F4A                     	;# 
  8592     1F4E                     	;# 
  8593     1F4F                     	;# 
  8594     1F50                     	;# 
  8595     1F51                     	;# 
  8596     1F52                     	;# 
  8597     1F53                     	;# 
  8598     1F54                     	;# 
  8599     1F55                     	;# 
  8600     1F65                     	;# 
  8601     1F66                     	;# 
  8602     1F67                     	;# 
  8603     1F68                     	;# 
  8604     1F69                     	;# 
  8605     1F6A                     	;# 
  8606     1F6B                     	;# 
  8607     1FE4                     	;# 
  8608     1FE5                     	;# 
  8609     1FE6                     	;# 
  8610     1FE7                     	;# 
  8611     1FE8                     	;# 
  8612     1FE8                     	;# 
  8613     1FE9                     	;# 
  8614     1FEA                     	;# 
  8615     1FEB                     	;# 
  8616     1FED                     	;# 
  8617     1FEE                     	;# 
  8618     1FEF                     	;# 
  8619     0000                     	;# 
  8620     0001                     	;# 
  8621     0002                     	;# 
  8622     0003                     	;# 
  8623     0004                     	;# 
  8624     0005                     	;# 
  8625     0006                     	;# 
  8626     0007                     	;# 
  8627     0008                     	;# 
  8628     0009                     	;# 
  8629     000A                     	;# 
  8630     000B                     	;# 
  8631     000C                     	;# 
  8632     000D                     	;# 
  8633     000E                     	;# 
  8634     0010                     	;# 
  8635     0012                     	;# 
  8636     0013                     	;# 
  8637     0014                     	;# 
  8638     0016                     	;# 
  8639     0018                     	;# 
  8640     0019                     	;# 
  8641     001A                     	;# 
  8642     001C                     	;# 
  8643     008C                     	;# 
  8644     008C                     	;# 
  8645     008D                     	;# 
  8646     008E                     	;# 
  8647     008E                     	;# 
  8648     008F                     	;# 
  8649     0090                     	;# 
  8650     0090                     	;# 
  8651     0091                     	;# 
  8652     0092                     	;# 
  8653     0092                     	;# 
  8654     0093                     	;# 
  8655     0094                     	;# 
  8656     0094                     	;# 
  8657     0095                     	;# 
  8658     0096                     	;# 
  8659     0096                     	;# 
  8660     0097                     	;# 
  8661     0098                     	;# 
  8662     0099                     	;# 
  8663     009A                     	;# 
  8664     009B                     	;# 
  8665     009B                     	;# 
  8666     009C                     	;# 
  8667     009D                     	;# 
  8668     009D                     	;# 
  8669     009E                     	;# 
  8670     009F                     	;# 
  8671     010C                     	;# 
  8672     010C                     	;# 
  8673     010D                     	;# 
  8674     010E                     	;# 
  8675     010F                     	;# 
  8676     010F                     	;# 
  8677     0110                     	;# 
  8678     0111                     	;# 
  8679     0112                     	;# 
  8680     0113                     	;# 
  8681     0114                     	;# 
  8682     0115                     	;# 
  8683     0116                     	;# 
  8684     0117                     	;# 
  8685     0118                     	;# 
  8686     0119                     	;# 
  8687     0119                     	;# 
  8688     0119                     	;# 
  8689     011A                     	;# 
  8690     011A                     	;# 
  8691     011A                     	;# 
  8692     011B                     	;# 
  8693     011B                     	;# 
  8694     011B                     	;# 
  8695     011B                     	;# 
  8696     011B                     	;# 
  8697     011C                     	;# 
  8698     011C                     	;# 
  8699     011C                     	;# 
  8700     011D                     	;# 
  8701     011D                     	;# 
  8702     011D                     	;# 
  8703     011E                     	;# 
  8704     011E                     	;# 
  8705     011E                     	;# 
  8706     011F                     	;# 
  8707     011F                     	;# 
  8708     011F                     	;# 
  8709     011F                     	;# 
  8710     011F                     	;# 
  8711     018C                     	;# 
  8712     018D                     	;# 
  8713     018E                     	;# 
  8714     018F                     	;# 
  8715     0190                     	;# 
  8716     0191                     	;# 
  8717     0192                     	;# 
  8718     0196                     	;# 
  8719     0197                     	;# 
  8720     0198                     	;# 
  8721     0199                     	;# 
  8722     019A                     	;# 
  8723     019B                     	;# 
  8724     019C                     	;# 
  8725     020C                     	;# 
  8726     020D                     	;# 
  8727     020E                     	;# 
  8728     020E                     	;# 
  8729     020F                     	;# 
  8730     020F                     	;# 
  8731     0210                     	;# 
  8732     0210                     	;# 
  8733     0211                     	;# 
  8734     0211                     	;# 
  8735     0212                     	;# 
  8736     0213                     	;# 
  8737     0214                     	;# 
  8738     0214                     	;# 
  8739     0215                     	;# 
  8740     0215                     	;# 
  8741     0216                     	;# 
  8742     0216                     	;# 
  8743     0217                     	;# 
  8744     0217                     	;# 
  8745     0218                     	;# 
  8746     0219                     	;# 
  8747     021A                     	;# 
  8748     021A                     	;# 
  8749     021B                     	;# 
  8750     021B                     	;# 
  8751     021C                     	;# 
  8752     021C                     	;# 
  8753     021D                     	;# 
  8754     021D                     	;# 
  8755     021E                     	;# 
  8756     021F                     	;# 
  8757     028C                     	;# 
  8758     028C                     	;# 
  8759     028D                     	;# 
  8760     028D                     	;# 
  8761     028E                     	;# 
  8762     028F                     	;# 
  8763     0290                     	;# 
  8764     0291                     	;# 
  8765     0292                     	;# 
  8766     0292                     	;# 
  8767     0293                     	;# 
  8768     0293                     	;# 
  8769     0294                     	;# 
  8770     0295                     	;# 
  8771     0296                     	;# 
  8772     0297                     	;# 
  8773     0298                     	;# 
  8774     0298                     	;# 
  8775     0299                     	;# 
  8776     0299                     	;# 
  8777     029A                     	;# 
  8778     029B                     	;# 
  8779     029C                     	;# 
  8780     029D                     	;# 
  8781     029F                     	;# 
  8782     030C                     	;# 
  8783     030C                     	;# 
  8784     030D                     	;# 
  8785     030E                     	;# 
  8786     030F                     	;# 
  8787     0310                     	;# 
  8788     0310                     	;# 
  8789     0311                     	;# 
  8790     0312                     	;# 
  8791     0313                     	;# 
  8792     0314                     	;# 
  8793     0314                     	;# 
  8794     0315                     	;# 
  8795     0316                     	;# 
  8796     0317                     	;# 
  8797     0318                     	;# 
  8798     0318                     	;# 
  8799     0319                     	;# 
  8800     031A                     	;# 
  8801     031B                     	;# 
  8802     031C                     	;# 
  8803     031C                     	;# 
  8804     031D                     	;# 
  8805     031E                     	;# 
  8806     031F                     	;# 
  8807     038C                     	;# 
  8808     038C                     	;# 
  8809     038D                     	;# 
  8810     038E                     	;# 
  8811     0390                     	;# 
  8812     0390                     	;# 
  8813     0391                     	;# 
  8814     0392                     	;# 
  8815     048C                     	;# 
  8816     048C                     	;# 
  8817     048D                     	;# 
  8818     048E                     	;# 
  8819     048F                     	;# 
  8820     048F                     	;# 
  8821     0490                     	;# 
  8822     0491                     	;# 
  8823     0492                     	;# 
  8824     0492                     	;# 
  8825     0493                     	;# 
  8826     0494                     	;# 
  8827     0495                     	;# 
  8828     0495                     	;# 
  8829     0496                     	;# 
  8830     0497                     	;# 
  8831     0498                     	;# 
  8832     0499                     	;# 
  8833     049A                     	;# 
  8834     049B                     	;# 
  8835     049C                     	;# 
  8836     049D                     	;# 
  8837     050C                     	;# 
  8838     050C                     	;# 
  8839     050D                     	;# 
  8840     050E                     	;# 
  8841     050F                     	;# 
  8842     050F                     	;# 
  8843     0510                     	;# 
  8844     0511                     	;# 
  8845     0512                     	;# 
  8846     0512                     	;# 
  8847     0513                     	;# 
  8848     0514                     	;# 
  8849     0515                     	;# 
  8850     0515                     	;# 
  8851     0516                     	;# 
  8852     0517                     	;# 
  8853     0518                     	;# 
  8854     0519                     	;# 
  8855     051A                     	;# 
  8856     051B                     	;# 
  8857     051C                     	;# 
  8858     051D                     	;# 
  8859     058C                     	;# 
  8860     058C                     	;# 
  8861     058D                     	;# 
  8862     058E                     	;# 
  8863     058F                     	;# 
  8864     058F                     	;# 
  8865     0590                     	;# 
  8866     0591                     	;# 
  8867     0592                     	;# 
  8868     0593                     	;# 
  8869     059C                     	;# 
  8870     059C                     	;# 
  8871     059D                     	;# 
  8872     059D                     	;# 
  8873     059E                     	;# 
  8874     059F                     	;# 
  8875     060C                     	;# 
  8876     060C                     	;# 
  8877     060D                     	;# 
  8878     060D                     	;# 
  8879     060E                     	;# 
  8880     060F                     	;# 
  8881     0610                     	;# 
  8882     0611                     	;# 
  8883     0612                     	;# 
  8884     0613                     	;# 
  8885     0614                     	;# 
  8886     0616                     	;# 
  8887     0616                     	;# 
  8888     0617                     	;# 
  8889     0617                     	;# 
  8890     0618                     	;# 
  8891     0619                     	;# 
  8892     061A                     	;# 
  8893     061B                     	;# 
  8894     061C                     	;# 
  8895     061D                     	;# 
  8896     061E                     	;# 
  8897     068C                     	;# 
  8898     068D                     	;# 
  8899     068E                     	;# 
  8900     068F                     	;# 
  8901     0690                     	;# 
  8902     0691                     	;# 
  8903     0692                     	;# 
  8904     0693                     	;# 
  8905     0694                     	;# 
  8906     070C                     	;# 
  8907     070D                     	;# 
  8908     070E                     	;# 
  8909     070F                     	;# 
  8910     0710                     	;# 
  8911     0711                     	;# 
  8912     0712                     	;# 
  8913     0713                     	;# 
  8914     0714                     	;# 
  8915     0716                     	;# 
  8916     0717                     	;# 
  8917     0718                     	;# 
  8918     0719                     	;# 
  8919     071A                     	;# 
  8920     071B                     	;# 
  8921     071C                     	;# 
  8922     071D                     	;# 
  8923     071E                     	;# 
  8924     0796                     	;# 
  8925     0797                     	;# 
  8926     0798                     	;# 
  8927     0799                     	;# 
  8928     079A                     	;# 
  8929     079B                     	;# 
  8930     079C                     	;# 
  8931     079D                     	;# 
  8932     080C                     	;# 
  8933     080D                     	;# 
  8934     080E                     	;# 
  8935     080F                     	;# 
  8936     0810                     	;# 
  8937     0811                     	;# 
  8938     0813                     	;# 
  8939     0814                     	;# 
  8940     081A                     	;# 
  8941     081A                     	;# 
  8942     081B                     	;# 
  8943     081C                     	;# 
  8944     081C                     	;# 
  8945     081D                     	;# 
  8946     081E                     	;# 
  8947     081F                     	;# 
  8948     088C                     	;# 
  8949     088D                     	;# 
  8950     088E                     	;# 
  8951     088F                     	;# 
  8952     0890                     	;# 
  8953     0891                     	;# 
  8954     0892                     	;# 
  8955     0893                     	;# 
  8956     0895                     	;# 
  8957     0896                     	;# 
  8958     0897                     	;# 
  8959     0898                     	;# 
  8960     0899                     	;# 
  8961     089A                     	;# 
  8962     089B                     	;# 
  8963     090C                     	;# 
  8964     090E                     	;# 
  8965     090F                     	;# 
  8966     091F                     	;# 
  8967     098F                     	;# 
  8968     098F                     	;# 
  8969     0990                     	;# 
  8970     0991                     	;# 
  8971     0992                     	;# 
  8972     0993                     	;# 
  8973     0994                     	;# 
  8974     0995                     	;# 
  8975     0996                     	;# 
  8976     0997                     	;# 
  8977     0A19                     	;# 
  8978     0A19                     	;# 
  8979     0A1A                     	;# 
  8980     0A1A                     	;# 
  8981     0A1B                     	;# 
  8982     0A1B                     	;# 
  8983     0A1B                     	;# 
  8984     0A1C                     	;# 
  8985     0A1C                     	;# 
  8986     0A1D                     	;# 
  8987     0A1D                     	;# 
  8988     0A1E                     	;# 
  8989     0A1E                     	;# 
  8990     0A1F                     	;# 
  8991     0A1F                     	;# 
  8992     0A1F                     	;# 
  8993     1E0F                     	;# 
  8994     1E10                     	;# 
  8995     1E11                     	;# 
  8996     1E12                     	;# 
  8997     1E13                     	;# 
  8998     1E14                     	;# 
  8999     1E15                     	;# 
  9000     1E16                     	;# 
  9001     1E17                     	;# 
  9002     1E18                     	;# 
  9003     1E19                     	;# 
  9004     1E1A                     	;# 
  9005     1E1B                     	;# 
  9006     1E1C                     	;# 
  9007     1E1D                     	;# 
  9008     1E1E                     	;# 
  9009     1E1F                     	;# 
  9010     1E20                     	;# 
  9011     1E21                     	;# 
  9012     1E22                     	;# 
  9013     1E23                     	;# 
  9014     1E24                     	;# 
  9015     1E25                     	;# 
  9016     1E26                     	;# 
  9017     1E27                     	;# 
  9018     1E28                     	;# 
  9019     1E29                     	;# 
  9020     1E2A                     	;# 
  9021     1E2B                     	;# 
  9022     1E2C                     	;# 
  9023     1E2D                     	;# 
  9024     1E2E                     	;# 
  9025     1E2F                     	;# 
  9026     1E30                     	;# 
  9027     1E31                     	;# 
  9028     1E32                     	;# 
  9029     1E33                     	;# 
  9030     1E34                     	;# 
  9031     1E35                     	;# 
  9032     1E36                     	;# 
  9033     1E37                     	;# 
  9034     1E8F                     	;# 
  9035     1E90                     	;# 
  9036     1E91                     	;# 
  9037     1E92                     	;# 
  9038     1E93                     	;# 
  9039     1E94                     	;# 
  9040     1E95                     	;# 
  9041     1E96                     	;# 
  9042     1E97                     	;# 
  9043     1E9C                     	;# 
  9044     1E9D                     	;# 
  9045     1E9E                     	;# 
  9046     1EA1                     	;# 
  9047     1EA2                     	;# 
  9048     1EA3                     	;# 
  9049     1EA4                     	;# 
  9050     1EA5                     	;# 
  9051     1EA9                     	;# 
  9052     1EAA                     	;# 
  9053     1EAB                     	;# 
  9054     1EAC                     	;# 
  9055     1EB1                     	;# 
  9056     1EB2                     	;# 
  9057     1EB3                     	;# 
  9058     1EB8                     	;# 
  9059     1EB9                     	;# 
  9060     1EBA                     	;# 
  9061     1EBB                     	;# 
  9062     1EBC                     	;# 
  9063     1EBD                     	;# 
  9064     1EBE                     	;# 
  9065     1EC3                     	;# 
  9066     1EC5                     	;# 
  9067     1EC6                     	;# 
  9068     1EC7                     	;# 
  9069     1EC8                     	;# 
  9070     1EC9                     	;# 
  9071     1ECA                     	;# 
  9072     1ECB                     	;# 
  9073     1ECC                     	;# 
  9074     1ECD                     	;# 
  9075     1ECE                     	;# 
  9076     1F10                     	;# 
  9077     1F11                     	;# 
  9078     1F12                     	;# 
  9079     1F13                     	;# 
  9080     1F14                     	;# 
  9081     1F15                     	;# 
  9082     1F16                     	;# 
  9083     1F17                     	;# 
  9084     1F18                     	;# 
  9085     1F19                     	;# 
  9086     1F1A                     	;# 
  9087     1F1B                     	;# 
  9088     1F1C                     	;# 
  9089     1F1D                     	;# 
  9090     1F1E                     	;# 
  9091     1F1F                     	;# 
  9092     1F20                     	;# 
  9093     1F21                     	;# 
  9094     1F22                     	;# 
  9095     1F23                     	;# 
  9096     1F24                     	;# 
  9097     1F25                     	;# 
  9098     1F26                     	;# 
  9099     1F27                     	;# 
  9100     1F38                     	;# 
  9101     1F39                     	;# 
  9102     1F3A                     	;# 
  9103     1F3B                     	;# 
  9104     1F3C                     	;# 
  9105     1F3D                     	;# 
  9106     1F3E                     	;# 
  9107     1F3F                     	;# 
  9108     1F43                     	;# 
  9109     1F44                     	;# 
  9110     1F45                     	;# 
  9111     1F46                     	;# 
  9112     1F47                     	;# 
  9113     1F48                     	;# 
  9114     1F49                     	;# 
  9115     1F4A                     	;# 
  9116     1F4E                     	;# 
  9117     1F4F                     	;# 
  9118     1F50                     	;# 
  9119     1F51                     	;# 
  9120     1F52                     	;# 
  9121     1F53                     	;# 
  9122     1F54                     	;# 
  9123     1F55                     	;# 
  9124     1F65                     	;# 
  9125     1F66                     	;# 
  9126     1F67                     	;# 
  9127     1F68                     	;# 
  9128     1F69                     	;# 
  9129     1F6A                     	;# 
  9130     1F6B                     	;# 
  9131     1FE4                     	;# 
  9132     1FE5                     	;# 
  9133     1FE6                     	;# 
  9134     1FE7                     	;# 
  9135     1FE8                     	;# 
  9136     1FE8                     	;# 
  9137     1FE9                     	;# 
  9138     1FEA                     	;# 
  9139     1FEB                     	;# 
  9140     1FED                     	;# 
  9141     1FEE                     	;# 
  9142     1FEF                     	;# 
  9143                           
  9144 ;; Function _do_I2C_RESET is unused but had its address taken
  9145     0000                     
  9146 ;; Function _do_I2C_IDLE is unused but had its address taken
  9147     0000                     
  9148 ;; Function _do_I2C_SEND_RESTART_READ is unused but had its address taken
  9149     0000                     
  9150 ;; Function _do_I2C_SEND_RESTART_WRITE is unused but had its address taken
  9151     0000                     
  9152 ;; Function _do_I2C_SEND_RESTART is unused but had its address taken
  9153     0000                     
  9154 ;; Function _do_I2C_SEND_STOP is unused but had its address taken
  9155     0000                     
  9156 ;; Function _do_I2C_SEND_ADR_READ is unused but had its address taken
  9157     0000                     
  9158 ;; Function _do_I2C_SEND_ADR_WRITE is unused but had its address taken
  9159     0000                     
  9160 ;; Function _do_I2C_RCEN is unused but had its address taken
  9161     0000                     
  9162 ;; Function _do_I2C_DO_ACK is unused but had its address taken
  9163     0000                     
  9164 ;; Function _do_I2C_DO_NACK_STOP is unused but had its address taken
  9165     0000                     
  9166 ;; Function _do_I2C_DO_NACK_RESTART is unused but had its address taken
  9167     0000                     
  9168 ;; Function _do_I2C_DO_ADDRESS_NACK is unused but had its address taken
  9169     0000                     
  9170 ;; Function _do_I2C_TX is unused but had its address taken
  9171     0000                     
  9172 ;; Function _do_I2C_RX is unused but had its address taken
  9173     0000                     
  9174 ;; Function _do_I2C_TX_EMPTY is unused but had its address taken
  9175     0000                     
  9176 ;; Function _i2c_ISR is unused but had its address taken
  9177     0000                     
  9178 ;; Function _i2c_busCollisionISR is unused but had its address taken
  9179     0000                     
  9180 ;; Function _returnStop is unused but had its address taken
  9181     0000                     
  9182 ;; Function _returnReset is unused but had its address taken
  9183     0000                     
  9184 ;; Function _EUSART2_is_tx_ready is unused but had its address taken
  9185     0000                     
  9186 ;; Function _EUSART1_is_tx_ready is unused but had its address taken
  9187     0000                     
  9188                           	psect	idataBANK0
  9189     0002                     __pidataBANK0:
  9190                           
  9191                           ;initializer for RN487X_GetInputsValues@F12901
  9192     0002  3430               	retlw	48
  9193     0003  3430               	retlw	48
  9194                           
  9195                           	psect	idataBANK2
  9196     08F3                     __pidataBANK2:
  9197                           
  9198                           ;initializer for __hex
  9199     08F3  3430               	retlw	48
  9200     08F4  3431               	retlw	49
  9201     08F5  3432               	retlw	50
  9202     08F6  3433               	retlw	51
  9203     08F7  3434               	retlw	52
  9204     08F8  3435               	retlw	53
  9205     08F9  3436               	retlw	54
  9206     08FA  3437               	retlw	55
  9207     08FB  3438               	retlw	56
  9208     08FC  3439               	retlw	57
  9209     08FD  3441               	retlw	65
  9210     08FE  3442               	retlw	66
  9211     08FF  3443               	retlw	67
  9212     0900  3444               	retlw	68
  9213     0901  3445               	retlw	69
  9214     0902  3446               	retlw	70
  9215     0903  3400               	retlw	0
  9216                           
  9217                           	psect	stringtext1
  9218     1000                     __pstringtext1:
  9219     1000                     _uart:
  9220     1000  34D6               	retlw	low _EUSART1_Read
  9221     1001  340B               	retlw	high _EUSART1_Read
  9222     1002  3423               	retlw	low _EUSART1_Write
  9223     1003  340C               	retlw	high _EUSART1_Write
  9224     1004  3400               	retlw	0
  9225     1005  3400               	retlw	0
  9226     1006  3450               	retlw	low _EUSART1_is_rx_ready
  9227     1007  3417               	retlw	high _EUSART1_is_rx_ready
  9228     1008  34E8               	retlw	low _EUSART1_SetTxInterruptHandler
  9229     1009  3416               	retlw	high _EUSART1_SetTxInterruptHandler
  9230     100A  3447               	retlw	low _EUSART1_Receive_ISR
  9231     100B  340F               	retlw	high _EUSART1_Receive_ISR
  9232     100C  34E2               	retlw	low _EUSART1_SetRxInterruptHandler
  9233     100D  3416               	retlw	high _EUSART1_SetRxInterruptHandler
  9234     100E  346D               	retlw	low _EUSART1_is_tx_done
  9235     100F  3416               	retlw	high _EUSART1_is_tx_done
  9236     1010  34FC               	retlw	low _EUSART1_Transmit_ISR
  9237     1011  340A               	retlw	high _EUSART1_Transmit_ISR
  9238     1012  3484               	retlw	low _EUSART1_Initialize
  9239     1013  340F               	retlw	high _EUSART1_Initialize
  9240     1014  34B0               	retlw	low _EUSART2_Read
  9241     1015  340B               	retlw	high _EUSART2_Read
  9242     1016  34FC               	retlw	low _EUSART2_Write
  9243     1017  340B               	retlw	high _EUSART2_Write
  9244     1018  3400               	retlw	0
  9245     1019  3400               	retlw	0
  9246     101A  3447               	retlw	low _EUSART2_is_rx_ready
  9247     101B  3417               	retlw	high _EUSART2_is_rx_ready
  9248     101C  3406               	retlw	low _EUSART2_SetTxInterruptHandler
  9249     101D  3417               	retlw	high _EUSART2_SetTxInterruptHandler
  9250     101E  340E               	retlw	low _EUSART2_Receive_ISR
  9251     101F  340F               	retlw	high _EUSART2_Receive_ISR
  9252     1020  3400               	retlw	low _EUSART2_SetRxInterruptHandler
  9253     1021  3417               	retlw	high _EUSART2_SetRxInterruptHandler
  9254     1022  3469               	retlw	low _EUSART2_is_tx_done
  9255     1023  3416               	retlw	high _EUSART2_is_tx_done
  9256     1024  34DA               	retlw	low _EUSART2_Transmit_ISR
  9257     1025  340A               	retlw	high _EUSART2_Transmit_ISR
  9258     1026  34C2               	retlw	low _EUSART2_Initialize
  9259     1027  340F               	retlw	high _EUSART2_Initialize
  9260     1028                     __end_of_uart:
  9261                           
  9262                           	psect	stringtext2
  9263     1028                     __pstringtext2:
  9264     1028                     _i2c1_fsmStateTable:
  9265     1028  3476               	retlw	low _I2C1_DO_IDLE
  9266     1029  3416               	retlw	high _I2C1_DO_IDLE
  9267     102A  343E               	retlw	low _I2C1_DO_SEND_ADR_READ
  9268     102B  3417               	retlw	high _I2C1_DO_SEND_ADR_READ
  9269     102C  3425               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  9270     102D  3417               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  9271     102E  3419               	retlw	low _I2C1_DO_TX
  9272     102F  3405               	retlw	high _I2C1_DO_TX
  9273     1030  346F               	retlw	low _I2C1_DO_RX
  9274     1031  3407               	retlw	high _I2C1_DO_RX
  9275     1032  341E               	retlw	low _I2C1_DO_RCEN
  9276     1033  3417               	retlw	high _I2C1_DO_RCEN
  9277     1034  34C6               	retlw	low _I2C1_DO_TX_EMPTY
  9278     1035  340C               	retlw	high _I2C1_DO_TX_EMPTY
  9279     1036  347B               	retlw	low _I2C1_DO_SEND_RESTART_READ
  9280     1037  3416               	retlw	high _I2C1_DO_SEND_RESTART_READ
  9281     1038  3480               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  9282     1039  3416               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  9283     103A  3485               	retlw	low _I2C1_DO_SEND_RESTART
  9284     103B  3416               	retlw	high _I2C1_DO_SEND_RESTART
  9285     103C  348A               	retlw	low _I2C1_DO_SEND_STOP
  9286     103D  3416               	retlw	high _I2C1_DO_SEND_STOP
  9287     103E  348F               	retlw	low _I2C1_DO_RX_ACK
  9288     103F  3416               	retlw	high _I2C1_DO_RX_ACK
  9289     1040  3494               	retlw	low _I2C1_DO_RX_NACK_STOP
  9290     1041  3416               	retlw	high _I2C1_DO_RX_NACK_STOP
  9291     1042  3499               	retlw	low _I2C1_DO_RX_NACK_RESTART
  9292     1043  3416               	retlw	high _I2C1_DO_RX_NACK_RESTART
  9293     1044  349E               	retlw	low _I2C1_DO_RESET
  9294     1045  3416               	retlw	high _I2C1_DO_RESET
  9295     1046  344A               	retlw	low _I2C1_DO_ADDRESS_NACK
  9296     1047  340C               	retlw	high _I2C1_DO_ADDRESS_NACK
  9297     1048                     __end_of_i2c1_fsmStateTable:
  9298                           
  9299                           	psect	stringtext3
  9300     1048                     __pstringtext3:
  9301     1048                     _fsmStateTable:
  9302     1048  3400               	retlw	0
  9303     1049  3400               	retlw	0
  9304     104A  3400               	retlw	0
  9305     104B  3400               	retlw	0
  9306     104C  3400               	retlw	0
  9307     104D  3400               	retlw	0
  9308     104E  3400               	retlw	0
  9309     104F  3400               	retlw	0
  9310     1050  3400               	retlw	0
  9311     1051  3400               	retlw	0
  9312     1052  3400               	retlw	0
  9313     1053  3400               	retlw	0
  9314     1054  3400               	retlw	0
  9315     1055  3400               	retlw	0
  9316     1056  3400               	retlw	0
  9317     1057  3400               	retlw	0
  9318     1058  3400               	retlw	0
  9319     1059  3400               	retlw	0
  9320     105A  3400               	retlw	0
  9321     105B  3400               	retlw	0
  9322     105C  3400               	retlw	0
  9323     105D  3400               	retlw	0
  9324     105E  3400               	retlw	0
  9325     105F  3400               	retlw	0
  9326     1060  3400               	retlw	0
  9327     1061  3400               	retlw	0
  9328     1062  3400               	retlw	0
  9329     1063  3400               	retlw	0
  9330     1064  3400               	retlw	0
  9331     1065  3400               	retlw	0
  9332     1066  3400               	retlw	0
  9333     1067  3400               	retlw	0
  9334     1068                     __end_of_fsmStateTable:
  9335                           
  9336                           	psect	stringtext4
  9337     1068                     __pstringtext4:
  9338     1068                     _RN487X:
  9339     1068  34C0               	retlw	low _RN487X_Write
  9340     1069  3417               	retlw	high _RN487X_Write
  9341     106A  3462               	retlw	low _RN487X_Read@rn487x_interface$F1335
  9342     106B  3417               	retlw	high _RN487X_Read@rn487x_interface$F1335
  9343     106C  346C               	retlw	low _RN487X_is_tx_done
  9344     106D  3417               	retlw	high _RN487X_is_tx_done
  9345     106E  3476               	retlw	low _RN487X_is_rx_ready
  9346     106F  3417               	retlw	high _RN487X_is_rx_ready
  9347     1070  34AA               	retlw	low _RN487X_IndicateRx
  9348     1071  3417               	retlw	high _RN487X_IndicateRx
  9349     1072  34B5               	retlw	low _RN487X_Reset
  9350     1073  3417               	retlw	high _RN487X_Reset
  9351     1074  34CC               	retlw	low _RN487X_SetSystemMode
  9352     1075  3417               	retlw	high _RN487X_SetSystemMode
  9353     1076  342D               	retlw	low _RN487X_Delay
  9354     1077  3417               	retlw	high _RN487X_Delay
  9355     1078  34E8               	retlw	low _RN487X_MessageHandler
  9356     1079  3406               	retlw	high _RN487X_MessageHandler
  9357     107A                     __end_of_RN487X:
  9358                           
  9359                           	psect	stringtext5
  9360     1832                     __pstringtext5:
  9361     1832                     _rn487x_driver_version:
  9362     1832  3422               	retlw	low (STR_1| (0+32768))
  9363     1833  3498               	retlw	high (STR_1| (0+32768))
  9364     1834                     __end_of_rn487x_driver_version:
  9365                           
  9366                           	psect	stringtext6
  9367     1834                     __pstringtext6:
  9368     1834                     _protocol_version_number:
  9369     1834  3422               	retlw	low (STR_1| (0+32768))
  9370     1835  3498               	retlw	high (STR_1| (0+32768))
  9371     1836                     __end_of_protocol_version_number:
  9372                           
  9373                           	psect	stringtext7
  9374     180C                     __pstringtext7:
  9375     180C                     RN487X_RebootCmd@reboot:
  9376     180C  3452               	retlw	82
  9377     180D  3465               	retlw	101
  9378     180E  3462               	retlw	98
  9379     180F  346F               	retlw	111
  9380     1810  346F               	retlw	111
  9381     1811  3474               	retlw	116
  9382     1812  3469               	retlw	105
  9383     1813  346E               	retlw	110
  9384     1814  3467               	retlw	103
  9385     1815  340D               	retlw	13
  9386     1816  340A               	retlw	10
  9387     1817                     __end_ofRN487X_RebootCmd@reboot:
  9388                           
  9389                           	psect	stringtext8
  9390     1828                     __pstringtext8:
  9391     1828                     RN487X_EnterDataMode@cmdPrompt:
  9392     1828  3445               	retlw	69
  9393     1829  344E               	retlw	78
  9394     182A  3444               	retlw	68
  9395     182B  340D               	retlw	13
  9396     182C  340A               	retlw	10
  9397     182D                     __end_ofRN487X_EnterDataMode@cmdPrompt:
  9398                           
  9399                           	psect	stringtext9
  9400     182D                     __pstringtext9:
  9401     182D                     RN487X_EnterCmdMode@cmdPrompt:
  9402     182D  3443               	retlw	67
  9403     182E  344D               	retlw	77
  9404     182F  3444               	retlw	68
  9405     1830  343E               	retlw	62
  9406     1831  3420               	retlw	32
  9407     1832                     __end_ofRN487X_EnterCmdMode@cmdPrompt:
  9408                           
  9409                           	psect	nvBANK0
  9410     006C                     __pnvBANK0:
  9411     006C                     _IOCAF6_InterruptHandler:
  9412     006C                     	ds	2
  9413                           
  9414                           	psect	nvBANK1
  9415     00ED                     __pnvBANK1:
  9416     00ED                     _EUSART2_TxDefaultInterruptHandler:
  9417     00ED                     	ds	2
  9418                           
  9419                           	psect	nvBANK2
  9420     0144                     __pnvBANK2:
  9421     0144                     _EUSART1_ErrorHandler:
  9422     0144                     	ds	2
  9423     0146                     _EUSART1_OverrunErrorHandler:
  9424     0146                     	ds	2
  9425     0148                     _EUSART1_FramingErrorHandler:
  9426     0148                     	ds	2
  9427     014A                     _EUSART1_RxDefaultInterruptHandler:
  9428     014A                     	ds	2
  9429     014C                     _EUSART1_TxDefaultInterruptHandler:
  9430     014C                     	ds	2
  9431     014E                     _EUSART2_ErrorHandler:
  9432     014E                     	ds	2
  9433     0150                     _EUSART2_OverrunErrorHandler:
  9434     0150                     	ds	2
  9435     0152                     _EUSART2_FramingErrorHandler:
  9436     0152                     	ds	2
  9437     0154                     _EUSART2_RxDefaultInterruptHandler:
  9438     0154                     	ds	2
  9439     0014                     _TRISC	set	20
  9440     0013                     _TRISB	set	19
  9441     0012                     _TRISA	set	18
  9442     0016                     _TRISE	set	22
  9443     001A                     _LATC	set	26
  9444     0019                     _LATB	set	25
  9445     0018                     _LATA	set	24
  9446     001C                     _LATE	set	28
  9447     0012                     _TRISAbits	set	18
  9448     001A                     _LATCbits	set	26
  9449     000B                     _INTCONbits	set	11
  9450     0018                     _LATAbits	set	24
  9451     000C                     _PORTAbits	set	12
  9452     0119                     _RC1REG	set	281
  9453     011D                     _RC1STAbits	set	285
  9454     011A                     _TX1REG	set	282
  9455     011E                     _TX1STAbits	set	286
  9456     011C                     _SP1BRGH	set	284
  9457     011B                     _SP1BRGL	set	283
  9458     011E                     _TX1STA	set	286
  9459     011D                     _RC1STA	set	285
  9460     011F                     _BAUD1CON	set	287
  9461     018F                     _SSP1STATbits	set	399
  9462     018E                     _SSP1MSK	set	398
  9463     018C                     _SSP1BUF	set	396
  9464     0191                     _SSP1CON2bits	set	401
  9465     018D                     _SSP1ADD	set	397
  9466     0191                     _SSP1CON2	set	401
  9467     0190                     _SSP1CON1	set	400
  9468     018F                     _SSP1STAT	set	399
  9469     0190                     _SSP1CON1bits	set	400
  9470     059E                     _T0CON0bits	set	1438
  9471     059E                     _T0CON0	set	1438
  9472     059C                     _TMR0L	set	1436
  9473     059D                     _TMR0H	set	1437
  9474     059F                     _T0CON1	set	1439
  9475     070F                     _PIR3bits	set	1807
  9476     070C                     _PIR0bits	set	1804
  9477     0716                     _PIE0bits	set	1814
  9478     0719                     _PIE3bits	set	1817
  9479     079D                     _PMD7	set	1949
  9480     079C                     _PMD6	set	1948
  9481     079B                     _PMD5	set	1947
  9482     079A                     _PMD4	set	1946
  9483     0799                     _PMD3	set	1945
  9484     0798                     _PMD2	set	1944
  9485     0797                     _PMD1	set	1943
  9486     0796                     _PMD0	set	1942
  9487     0892                     _OSCTUNE	set	2194
  9488     0890                     _OSCSTAT	set	2192
  9489     0893                     _OSCFRQ	set	2195
  9490     0891                     _OSCEN	set	2193
  9491     088F                     _OSCCON3	set	2191
  9492     088D                     _OSCCON1	set	2189
  9493     0A19                     _RC2REG	set	2585
  9494     0A1D                     _RC2STAbits	set	2589
  9495     0A1A                     _TX2REG	set	2586
  9496     0A1E                     _TX2STAbits	set	2590
  9497     0A1C                     _SP2BRGH	set	2588
  9498     0A1B                     _SP2BRGL	set	2587
  9499     0A1E                     _TX2STA	set	2590
  9500     0A1D                     _RC2STA	set	2589
  9501     0A1F                     _BAUD2CON	set	2591
  9502     1ECB                     _RX1DTPPS	set	7883
  9503     1EC6                     _SSP1DATPPS	set	7878
  9504     1ECD                     _RX2DTPPS	set	7885
  9505     1EC5                     _SSP1CLKPPS	set	7877
  9506     1F1C                     _RB4PPS	set	7964
  9507     1F24                     _RC4PPS	set	7972
  9508     1F1A                     _RB2PPS	set	7962
  9509     1F19                     _RB1PPS	set	7961
  9510     1F3D                     _IOCAPbits	set	7997
  9511     1F3E                     _IOCANbits	set	7998
  9512     1F3F                     _IOCAFbits	set	7999
  9513     1F52                     _INLVLC	set	8018
  9514     1F47                     _INLVLB	set	8007
  9515     1F3C                     _INLVLA	set	7996
  9516     1F51                     _SLRCONC	set	8017
  9517     1F46                     _SLRCONB	set	8006
  9518     1F3B                     _SLRCONA	set	7995
  9519     1F50                     _ODCONC	set	8016
  9520     1F45                     _ODCONB	set	8005
  9521     1F3A                     _ODCONA	set	7994
  9522     1F66                     _ODCONE	set	8038
  9523     1F4F                     _WPUC	set	8015
  9524     1F39                     _WPUA	set	7993
  9525     1F44                     _WPUB	set	8004
  9526     1F65                     _WPUE	set	8037
  9527     1F38                     _ANSELA	set	7992
  9528     1F43                     _ANSELB	set	8003
  9529     1F4E                     _ANSELC	set	8014
  9530                           
  9531                           	psect	stringtext10
  9532     1800                     __pstringtext10:
  9533     1800                     STR_4:
  9534     1800  3453               	retlw	83	;'S'
  9535     1801  3454               	retlw	84	;'T'
  9536     1802  3452               	retlw	82	;'R'
  9537     1803  3445               	retlw	69	;'E'
  9538     1804  3441               	retlw	65	;'A'
  9539     1805  344D               	retlw	77	;'M'
  9540     1806  345F               	retlw	95	;'_'
  9541     1807  344F               	retlw	79	;'O'
  9542     1808  3450               	retlw	80	;'P'
  9543     1809  3445               	retlw	69	;'E'
  9544     180A  344E               	retlw	78	;'N'
  9545     180B  3400               	retlw	0
  9546                           
  9547                           	psect	stringtext11
  9548     1817                     __pstringtext11:
  9549     1817                     STR_2:
  9550     1817  3444               	retlw	68	;'D'
  9551     1818  3449               	retlw	73	;'I'
  9552     1819  3453               	retlw	83	;'S'
  9553     181A  3443               	retlw	67	;'C'
  9554     181B  344F               	retlw	79	;'O'
  9555     181C  344E               	retlw	78	;'N'
  9556     181D  344E               	retlw	78	;'N'
  9557     181E  3445               	retlw	69	;'E'
  9558     181F  3443               	retlw	67	;'C'
  9559     1820  3454               	retlw	84	;'T'
  9560     1821  3400               	retlw	0
  9561                           
  9562                           	psect	stringtext12
  9563     1822                     __pstringtext12:
  9564     1822                     STR_1:
  9565     1822  3431               	retlw	49	;'1'
  9566     1823  342E               	retlw	46	;'.'
  9567     1824  3431               	retlw	49	;'1'
  9568     1825  342E               	retlw	46	;'.'
  9569     1826  3430               	retlw	48	;'0'
  9570     1827  3400               	retlw	0
  9571                           
  9572                           	psect	stringtext13
  9573     0000                     __pstringtext13:
  9574     1822                     
  9575                           	psect	cinit
  9576     0057                     start_initialization:	
  9577                           ; #config settings
  9578                           
  9579     0057                     __initialization:
  9580                           
  9581                           ; Initialize objects allocated to BANK0
  9582     0057  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  9583     005A  00EE               	movwf	__pdataBANK0& (0+127)
  9584     005B  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  9585     005E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  9586                           
  9587                           ; Initialize objects allocated to BANK2
  9588     005F  30F3               	movlw	low __pidataBANK2
  9589     0060  0084               	movwf	4
  9590     0061  3088               	movlw	(high __pidataBANK2)| (0+128)
  9591     0062  0085               	movwf	5
  9592     0063  3056               	movlw	low __pdataBANK2
  9593     0064  0086               	movwf	6
  9594     0065  3001               	movlw	high __pdataBANK2
  9595     0066  0087               	movwf	7
  9596     0067  3011               	movlw	17
  9597     0068  3197  2718  3180   	fcall	init_ram
  9598                           
  9599                           ; Clear objects allocated to COMMON
  9600     006B  01FC               	clrf	__pbssCOMMON& (0+127)
  9601                           
  9602                           ; Clear objects allocated to BANK0
  9603     006C  3047               	movlw	low __pbssBANK0
  9604     006D  0084               	movwf	4
  9605     006E  3000               	movlw	high __pbssBANK0
  9606     006F  0085               	movwf	5
  9607     0070  3025               	movlw	37
  9608     0071  3197  2712  3180   	fcall	clear_ram0
  9609                           
  9610                           ; Clear objects allocated to BANK1
  9611     0074  30A0               	movlw	low __pbssBANK1
  9612     0075  0084               	movwf	4
  9613     0076  3000               	movlw	high __pbssBANK1
  9614     0077  0085               	movwf	5
  9615     0078  304D               	movlw	77
  9616     0079  3197  2712  3180   	fcall	clear_ram0
  9617                           
  9618                           ; Clear objects allocated to BANK2
  9619     007C  3020               	movlw	low __pbssBANK2
  9620     007D  0084               	movwf	4
  9621     007E  3001               	movlw	high __pbssBANK2
  9622     007F  0085               	movwf	5
  9623     0080  3024               	movlw	36
  9624     0081  3197  2712  3180   	fcall	clear_ram0
  9625                           
  9626                           ; Clear objects allocated to BANK3
  9627     0084  30A0               	movlw	low __pbssBANK3
  9628     0085  0084               	movwf	4
  9629     0086  3001               	movlw	high __pbssBANK3
  9630     0087  0085               	movwf	5
  9631     0088  3040               	movlw	64
  9632     0089  3197  2712  3180   	fcall	clear_ram0
  9633                           
  9634                           ; Clear objects allocated to BANK4
  9635     008C  3020               	movlw	low __pbssBANK4
  9636     008D  0084               	movwf	4
  9637     008E  3002               	movlw	high __pbssBANK4
  9638     008F  0085               	movwf	5
  9639     0090  3050               	movlw	80
  9640     0091  3197  2712  3180   	fcall	clear_ram0
  9641                           
  9642                           ; Clear objects allocated to BANK5
  9643     0094  30A0               	movlw	low __pbssBANK5
  9644     0095  0084               	movwf	4
  9645     0096  3002               	movlw	high __pbssBANK5
  9646     0097  0085               	movwf	5
  9647     0098  3050               	movlw	80
  9648     0099  3197  2712  3180   	fcall	clear_ram0
  9649                           
  9650                           ; Clear objects allocated to BANK6
  9651     009C  3020               	movlw	low __pbssBANK6
  9652     009D  0084               	movwf	4
  9653     009E  3003               	movlw	high __pbssBANK6
  9654     009F  0085               	movwf	5
  9655     00A0  3050               	movlw	80
  9656     00A1  3197  2712  3180   	fcall	clear_ram0
  9657     00A4                     end_of_initialization:	
  9658                           ;End of C runtime variable initialization code
  9659                           
  9660     00A4                     __end_of__initialization:
  9661     00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9662     00A5  0140               	movlb	0
  9663     00A6  3180  28A8         	ljmp	_main	;jump to C main() function
  9664                           
  9665                           	psect	bssCOMMON
  9666     007C                     __pbssCOMMON:
  9667     007C                     _eusart2RxHead:
  9668     007C                     	ds	1
  9669                           
  9670                           	psect	bssBANK0
  9671     0047                     __pbssBANK0:
  9672     0047                     _timer0ReloadVal16bit:
  9673     0047                     	ds	2
  9674     0049                     _pHead:
  9675     0049                     	ds	2
  9676     004B                     _asyncBuffer:
  9677     004B                     	ds	2
  9678     004D                     _i2c1_driver_i2cISR:
  9679     004D                     	ds	2
  9680     004F                     _i2c1_driver_busCollisionISR:
  9681     004F                     	ds	2
  9682     0051                     LIGHTBLUE_ParseIncomingPacket@data:
  9683     0051                     	ds	2
  9684     0053                     _bitMap:
  9685     0053                     	ds	2
  9686     0055                     _serialIndex:
  9687     0055                     	ds	1
  9688     0056                     _eusart1RxLastError:
  9689     0056                     	ds	1
  9690     0057                     _eusart1RxCount:
  9691     0057                     	ds	1
  9692     0058                     _eusart1RxTail:
  9693     0058                     	ds	1
  9694     0059                     _eusart1RxHead:
  9695     0059                     	ds	1
  9696     005A                     _eusart1TxBufferRemaining:
  9697     005A                     	ds	1
  9698     005B                     _eusart1TxTail:
  9699     005B                     	ds	1
  9700     005C                     _eusart1TxHead:
  9701     005C                     	ds	1
  9702     005D                     _eusart2RxLastError:
  9703     005D                     	ds	1
  9704     005E                     _eusart2RxCount:
  9705     005E                     	ds	1
  9706     005F                     _eusart2RxTail:
  9707     005F                     	ds	1
  9708     0060                     _eusart2TxBufferRemaining:
  9709     0060                     	ds	1
  9710     0061                     _eusart2TxTail:
  9711     0061                     	ds	1
  9712     0062                     _eusart2TxHead:
  9713     0062                     	ds	1
  9714     0063                     RN487X_FilterData@asyncBuffering:
  9715     0063                     	ds	1
  9716     0064                     _dataReady:
  9717     0064                     	ds	1
  9718     0065                     _peek:
  9719     0065                     	ds	1
  9720     0066                     _asyncBufferSize:
  9721     0066                     	ds	1
  9722     0067                     _connected:
  9723     0067                     	ds	1
  9724     0068                     LIGHTBLUE_ParseIncomingPacket@packetID:
  9725     0068                     	ds	1
  9726     0069                     LIGHTBLUE_ParseIncomingPacket@length:
  9727     0069                     	ds	1
  9728     006A                     LIGHTBLUE_ParseIncomingPacket@parserState:
  9729     006A                     	ds	1
  9730     006B                     _sequenceNumber:
  9731     006B                     	ds	1
  9732                           
  9733                           	psect	dataBANK0
  9734     006E                     __pdataBANK0:
  9735     006E                     RN487X_GetInputsValues@F12901:
  9736     006E                     	ds	2
  9737                           
  9738                           	psect	bssBANK1
  9739     00A0                     __pbssBANK1:
  9740     00A0                     _I2C1_Status:
  9741     00A0                     	ds	29
  9742     00BD                     _eusart1RxStatusBuffer:
  9743     00BD                     	ds	8
  9744     00C5                     _eusart1RxBuffer:
  9745     00C5                     	ds	8
  9746     00CD                     _eusart1TxBuffer:
  9747     00CD                     	ds	8
  9748     00D5                     _eusart2RxStatusBuffer:
  9749     00D5                     	ds	8
  9750     00DD                     _eusart2RxBuffer:
  9751     00DD                     	ds	8
  9752     00E5                     _eusart2TxBuffer:
  9753     00E5                     	ds	8
  9754                           
  9755                           	psect	bssBANK2
  9756     0120                     __pbssBANK2:
  9757     0120                     _i2c_status:
  9758     0120                     	ds	36
  9759                           
  9760                           	psect	dataBANK2
  9761     0156                     __pdataBANK2:
  9762     0156                     __hex:
  9763     0156                     	ds	17
  9764                           
  9765                           	psect	bssBANK3
  9766     01A0                     __pbssBANK3:
  9767     01A0                     _cmdBuf:
  9768     01A0                     	ds	64
  9769                           
  9770                           	psect	bssBANK4
  9771     0220                     __pbssBANK4:
  9772     0220                     _lightBlueSerial:
  9773     0220                     	ds	80
  9774                           
  9775                           	psect	bssBANK5
  9776     02A0                     __pbssBANK5:
  9777     02A0                     _statusBuffer:
  9778     02A0                     	ds	80
  9779                           
  9780                           	psect	bssBANK6
  9781     0320                     __pbssBANK6:
  9782     0320                     _statusBuffer@main$F3732:
  9783     0320                     	ds	80
  9784                           
  9785                           	psect	inittext
  9786     1718                     init_ram:
  9787     1718  00FE               	movwf	btemp
  9788     1719                     initloop:
  9789     1719  0012               	moviw fsr0++
  9790     171A  001E               	movwi fsr1++
  9791     171B  0BFE               	decfsz	btemp,f
  9792     171C  2F19               	goto	initloop
  9793     171D  3400               	retlw	0
  9794                           
  9795                           	psect	clrtext
  9796     1712                     clear_ram0:	
  9797                           ;	Called with FSR0 containing the base address, and
  9798                           ;	WREG with the size to clear
  9799                           
  9800     1712  0064               	clrwdt	;clear the watchdog before getting into this loop
  9801     1713                     clrloop0:
  9802     1713  0180               	clrf	0	;clear RAM location pointed to by FSR
  9803     1714  3101               	addfsr 0,1
  9804     1715  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9805     1716  2F13               	goto	clrloop0	;have we reached the end yet?
  9806     1717  3400               	retlw	0	;all done for this memory range, return
  9807                           
  9808                           	psect	cstackBANK2
  9809     0167                     __pcstackBANK2:
  9810     0167                     ??_RN487X_FilterData:
  9811                           
  9812                           ; 1 bytes @ 0x0
  9813     0167                     	ds	4
  9814                           
  9815                           	psect	cstackBANK1
  9816     00EF                     __pcstackBANK1:
  9817     00EF                     _main$4713:
  9818                           
  9819                           ; 1 bytes @ 0x0
  9820     00EF                     	ds	1
  9821                           
  9822                           	psect	cstackCOMMON
  9823     0070                     __pcstackCOMMON:
  9824     0070                     ?_BMA253_NewAccelDataRdyX:
  9825     0070                     ?_BMA253_NewAccelDataRdyY:	
  9826                           ; 1 bytes @ 0x0
  9827                           
  9828     0070                     ?_BMA253_NewAccelDataRdyZ:	
  9829                           ; 1 bytes @ 0x0
  9830                           
  9831     0070                     ?_LIGHTBLUE_GetButtonValue:	
  9832                           ; 1 bytes @ 0x0
  9833                           
  9834     0070                     ?_LIGHTBLUE_GetDataLedValue:	
  9835                           ; 1 bytes @ 0x0
  9836                           
  9837     0070                     ?_LIGHTBLUE_GetErrorLedValue:	
  9838                           ; 1 bytes @ 0x0
  9839                           
  9840     0070                     ?_LIGHTBLUE_UpdateErrorLed:	
  9841                           ; 1 bytes @ 0x0
  9842                           
  9843     0070                     ?_RN487X_EnterCmdMode:	
  9844                           ; 1 bytes @ 0x0
  9845                           
  9846     0070                     ?_RN487X_EnterDataMode:	
  9847                           ; 1 bytes @ 0x0
  9848                           
  9849     0070                     ?_EUSART1_Read:	
  9850                           ; 1 bytes @ 0x0
  9851                           
  9852     0070                     ?_EUSART1_is_rx_ready:	
  9853                           ; 1 bytes @ 0x0
  9854                           
  9855     0070                     ?_EUSART1_Receive_ISR:	
  9856                           ; 1 bytes @ 0x0
  9857                           
  9858     0070                     ?_EUSART1_is_tx_done:	
  9859                           ; 1 bytes @ 0x0
  9860                           
  9861     0070                     ?_EUSART1_Transmit_ISR:	
  9862                           ; 1 bytes @ 0x0
  9863                           
  9864     0070                     ??_EUSART1_Transmit_ISR:	
  9865                           ; 1 bytes @ 0x0
  9866                           
  9867     0070                     ?_EUSART1_Initialize:	
  9868                           ; 1 bytes @ 0x0
  9869                           
  9870     0070                     ?_EUSART2_Read:	
  9871                           ; 1 bytes @ 0x0
  9872                           
  9873     0070                     ?_EUSART2_is_rx_ready:	
  9874                           ; 1 bytes @ 0x0
  9875                           
  9876     0070                     ?_EUSART2_Receive_ISR:	
  9877                           ; 1 bytes @ 0x0
  9878                           
  9879     0070                     ?_EUSART2_is_tx_done:	
  9880                           ; 1 bytes @ 0x0
  9881                           
  9882     0070                     ?_EUSART2_Transmit_ISR:	
  9883                           ; 1 bytes @ 0x0
  9884                           
  9885     0070                     ??_EUSART2_Transmit_ISR:	
  9886                           ; 1 bytes @ 0x0
  9887                           
  9888     0070                     ?_EUSART2_Initialize:	
  9889                           ; 1 bytes @ 0x0
  9890                           
  9891     0070                     ?_I2C1_Open:	
  9892                           ; 1 bytes @ 0x0
  9893                           
  9894     0070                     ?_I2C1_MasterWrite:	
  9895                           ; 1 bytes @ 0x0
  9896                           
  9897     0070                     ?_I2C1_Close:	
  9898                           ; 1 bytes @ 0x0
  9899                           
  9900     0070                     ?_RN487X_IsConnected:	
  9901                           ; 1 bytes @ 0x0
  9902                           
  9903     0070                     ?_RN487X_Read:	
  9904                           ; 1 bytes @ 0x0
  9905                           
  9906     0070                     ?_RN487X_DataReady:	
  9907                           ; 1 bytes @ 0x0
  9908                           
  9909     0070                     ?_RN487X_Read@rn487x_interface$F1336:	
  9910                           ; 1 bytes @ 0x0
  9911                           
  9912     0070                     ?_RN487X_is_tx_done:	
  9913                           ; 1 bytes @ 0x0
  9914                           
  9915     0070                     ?_RN487X_is_rx_ready:	
  9916                           ; 1 bytes @ 0x0
  9917                           
  9918     0070                     ?_RN487X_FilterData:	
  9919                           ; 1 bytes @ 0x0
  9920                           
  9921     0070                     ?_EUSART2_DefaultFramingErrorHandler:	
  9922                           ; 1 bytes @ 0x0
  9923                           
  9924     0070                     ??_EUSART2_DefaultFramingErrorHandler:	
  9925                           ; 1 bytes @ 0x0
  9926                           
  9927     0070                     ?_EUSART2_DefaultOverrunErrorHandler:	
  9928                           ; 1 bytes @ 0x0
  9929                           
  9930     0070                     ??_EUSART2_DefaultOverrunErrorHandler:	
  9931                           ; 1 bytes @ 0x0
  9932                           
  9933     0070                     ?_EUSART2_DefaultErrorHandler:	
  9934                           ; 1 bytes @ 0x0
  9935                           
  9936     0070                     ?_EUSART2_RxDataHandler:	
  9937                           ; 1 bytes @ 0x0
  9938                           
  9939     0070                     ??_EUSART2_RxDataHandler:	
  9940                           ; 1 bytes @ 0x0
  9941                           
  9942     0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  9943                           ; 1 bytes @ 0x0
  9944                           
  9945     0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  9946                           ; 1 bytes @ 0x0
  9947                           
  9948     0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  9949                           ; 1 bytes @ 0x0
  9950                           
  9951     0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  9952                           ; 1 bytes @ 0x0
  9953                           
  9954     0070                     ?_EUSART1_DefaultErrorHandler:	
  9955                           ; 1 bytes @ 0x0
  9956                           
  9957     0070                     ?_EUSART1_RxDataHandler:	
  9958                           ; 1 bytes @ 0x0
  9959                           
  9960     0070                     ??_EUSART1_RxDataHandler:	
  9961                           ; 1 bytes @ 0x0
  9962                           
  9963     0070                     ?_PIN_MANAGER_IOC:	
  9964                           ; 1 bytes @ 0x0
  9965                           
  9966     0070                     ??_PIN_MANAGER_IOC:	
  9967                           ; 1 bytes @ 0x0
  9968                           
  9969     0070                     ?_PMD_Initialize:	
  9970                           ; 1 bytes @ 0x0
  9971                           
  9972     0070                     ?_I2C1_Initialize:	
  9973                           ; 1 bytes @ 0x0
  9974                           
  9975     0070                     ?_PIN_MANAGER_Initialize:	
  9976                           ; 1 bytes @ 0x0
  9977                           
  9978     0070                     ?_OSCILLATOR_Initialize:	
  9979                           ; 1 bytes @ 0x0
  9980                           
  9981     0070                     ?_TMR0_Initialize:	
  9982                           ; 1 bytes @ 0x0
  9983                           
  9984     0070                     ?_IOCAF6_DefaultInterruptHandler:	
  9985                           ; 1 bytes @ 0x0
  9986                           
  9987     0070                     ??_IOCAF6_DefaultInterruptHandler:	
  9988                           ; 1 bytes @ 0x0
  9989                           
  9990     0070                     ?_IOCAF6_ISR:	
  9991                           ; 1 bytes @ 0x0
  9992                           
  9993     0070                     ??_IOCAF6_ISR:	
  9994                           ; 1 bytes @ 0x0
  9995                           
  9996     0070                     ?_I2C1_DO_IDLE:	
  9997                           ; 1 bytes @ 0x0
  9998                           
  9999     0070                     ?_I2C1_DO_SEND_ADR_READ:	
 10000                           ; 1 bytes @ 0x0
 10001                           
 10002     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
 10003                           ; 1 bytes @ 0x0
 10004                           
 10005     0070                     ?_I2C1_DO_TX:	
 10006                           ; 1 bytes @ 0x0
 10007                           
 10008     0070                     ?_I2C1_DO_RX:	
 10009                           ; 1 bytes @ 0x0
 10010                           
 10011     0070                     ?_I2C1_DO_RCEN:	
 10012                           ; 1 bytes @ 0x0
 10013                           
 10014     0070                     ?_I2C1_DO_TX_EMPTY:	
 10015                           ; 1 bytes @ 0x0
 10016                           
 10017     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
 10018                           ; 1 bytes @ 0x0
 10019                           
 10020     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
 10021                           ; 1 bytes @ 0x0
 10022                           
 10023     0070                     ?_I2C1_DO_SEND_RESTART:	
 10024                           ; 1 bytes @ 0x0
 10025                           
 10026     0070                     ?_I2C1_DO_SEND_STOP:	
 10027                           ; 1 bytes @ 0x0
 10028                           
 10029     0070                     ?_I2C1_DO_RX_ACK:	
 10030                           ; 1 bytes @ 0x0
 10031                           
 10032     0070                     ?_I2C1_DO_RX_NACK_STOP:	
 10033                           ; 1 bytes @ 0x0
 10034                           
 10035     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
 10036                           ; 1 bytes @ 0x0
 10037                           
 10038     0070                     ?_I2C1_DO_RESET:	
 10039                           ; 1 bytes @ 0x0
 10040                           
 10041     0070                     ?_I2C1_DO_ADDRESS_NACK:	
 10042                           ; 1 bytes @ 0x0
 10043                           
 10044     0070                     ?_I2C1_MasterClearIrq:	
 10045                           ; 1 bytes @ 0x0
 10046                           
 10047     0070                     ?_I2C1_MasterOpen:	
 10048                           ; 1 bytes @ 0x0
 10049                           
 10050     0070                     ?_I2C1_MasterDisableIrq:	
 10051                           ; 1 bytes @ 0x0
 10052                           
 10053     0070                     ?_I2C1_MasterClose:	
 10054                           ; 1 bytes @ 0x0
 10055                           
 10056     0070                     ?_I2C1_MasterStart:	
 10057                           ; 1 bytes @ 0x0
 10058                           
 10059     0070                     ?_I2C1_Poller:	
 10060                           ; 1 bytes @ 0x0
 10061                           
 10062     0070                     ?_I2C1_MasterWaitForEvent:	
 10063                           ; 1 bytes @ 0x0
 10064                           
 10065     0070                     ?_I2C1_MasterFsm:	
 10066                           ; 1 bytes @ 0x0
 10067                           
 10068     0070                     ?_I2C1_MasterIsNack:	
 10069                           ; 1 bytes @ 0x0
 10070                           
 10071     0070                     ?_I2C1_MasterSendTxData:	
 10072                           ; 1 bytes @ 0x0
 10073                           
 10074     0070                     ?_I2C1_MasterGetRxData:	
 10075                           ; 1 bytes @ 0x0
 10076                           
 10077     0070                     ?_I2C1_MasterSendAck:	
 10078                           ; 1 bytes @ 0x0
 10079                           
 10080     0070                     ?_I2C1_MasterStartRx:	
 10081                           ; 1 bytes @ 0x0
 10082                           
 10083     0070                     ?_I2C1_MasterSetIrq:	
 10084                           ; 1 bytes @ 0x0
 10085                           
 10086     0070                     ?_I2C1_MasterEnableRestart:	
 10087                           ; 1 bytes @ 0x0
 10088                           
 10089     0070                     ?_I2C1_MasterStop:	
 10090                           ; 1 bytes @ 0x0
 10091                           
 10092     0070                     ?_I2C1_MasterSendNack:	
 10093                           ; 1 bytes @ 0x0
 10094                           
 10095     0070                     ?_BMA253_GetAccelDataX:	
 10096                           ; 1 bytes @ 0x0
 10097                           
 10098     0070                     ?_BMA253_GetAccelDataY:	
 10099                           ; 1 bytes @ 0x0
 10100                           
 10101     0070                     ?_BMA253_GetAccelDataZ:	
 10102                           ; 1 bytes @ 0x0
 10103                           
 10104     0070                     ?_BMA253_GetAccelDataXYZ:	
 10105                           ; 1 bytes @ 0x0
 10106                           
 10107     0070                     ?_MCP9844_GetTemperatureValue:	
 10108                           ; 1 bytes @ 0x0
 10109                           
 10110     0070                     ?_LIGHTBLUE_Initialize:	
 10111                           ; 1 bytes @ 0x0
 10112                           
 10113     0070                     ?_LIGHTBLUE_TemperatureSensor:	
 10114                           ; 1 bytes @ 0x0
 10115                           
 10116     0070                     ?_LIGHTBLUE_AccelSensor:	
 10117                           ; 1 bytes @ 0x0
 10118                           
 10119     0070                     ?_LIGHTBLUE_PushButton:	
 10120                           ; 1 bytes @ 0x0
 10121                           
 10122     0070                     ?_LIGHTBLUE_LedState:	
 10123                           ; 1 bytes @ 0x0
 10124                           
 10125     0070                     ?_LIGHTBLUE_SendProtocolVersion:	
 10126                           ; 1 bytes @ 0x0
 10127                           
 10128     0070                     ?_LIGHTBLUE_SendSerialData:	
 10129                           ; 1 bytes @ 0x0
 10130                           
 10131     0070                     ?_LIGHTBLUE_ParseIncomingPacket:	
 10132                           ; 1 bytes @ 0x0
 10133                           
 10134     0070                     ?_LIGHTBLUE_SetErrorLedValue:	
 10135                           ; 1 bytes @ 0x0
 10136                           
 10137     0070                     ?_rn487x_PrintMessageStart:	
 10138                           ; 1 bytes @ 0x0
 10139                           
 10140     0070                     ?_rn487x_PrintMessageEnd:	
 10141                           ; 1 bytes @ 0x0
 10142                           
 10143     0070                     ?_rn487x_PrintIndicatorCharacters:	
 10144                           ; 1 bytes @ 0x0
 10145                           
 10146     0070                     ?_RN487X_Init:	
 10147                           ; 1 bytes @ 0x0
 10148                           
 10149     0070                     ?_RN487X_ReadDefaultResponse:	
 10150                           ; 1 bytes @ 0x0
 10151                           
 10152     0070                     ?_INTERRUPT_InterruptManager:	
 10153                           ; 1 bytes @ 0x0
 10154                           
 10155     0070                     ?_SYSTEM_Initialize:	
 10156                           ; 1 bytes @ 0x0
 10157                           
 10158     0070                     ?_TMR0_HasOverflowOccured:	
 10159                           ; 1 bytes @ 0x0
 10160                           
 10161     0070                     ?_I2C1_MasterOperation:	
 10162                           ; 1 bytes @ 0x0
 10163                           
 10164     0070                     ?_main:	
 10165                           ; 1 bytes @ 0x0
 10166                           
 10167                           
 10168                           ; 2 bytes @ 0x0
 10169     0070                     	ds	1
 10170     0071                     ??_LIGHTBLUE_GetButtonValue:
 10171     0071                     ??_LIGHTBLUE_GetDataLedValue:	
 10172                           ; 1 bytes @ 0x1
 10173                           
 10174     0071                     ??_LIGHTBLUE_GetErrorLedValue:	
 10175                           ; 1 bytes @ 0x1
 10176                           
 10177     0071                     ??_EUSART1_Read:	
 10178                           ; 1 bytes @ 0x1
 10179                           
 10180     0071                     ?_EUSART1_Write:	
 10181                           ; 1 bytes @ 0x1
 10182                           
 10183     0071                     ??_EUSART1_is_rx_ready:	
 10184                           ; 1 bytes @ 0x1
 10185                           
 10186     0071                     ?_EUSART1_SetTxInterruptHandler:	
 10187                           ; 1 bytes @ 0x1
 10188                           
 10189     0071                     ??_EUSART1_Receive_ISR:	
 10190                           ; 1 bytes @ 0x1
 10191                           
 10192     0071                     ?_EUSART1_SetRxInterruptHandler:	
 10193                           ; 1 bytes @ 0x1
 10194                           
 10195     0071                     ??_EUSART1_is_tx_done:	
 10196                           ; 1 bytes @ 0x1
 10197                           
 10198     0071                     ??_EUSART2_Read:	
 10199                           ; 1 bytes @ 0x1
 10200                           
 10201     0071                     ?_EUSART2_Write:	
 10202                           ; 1 bytes @ 0x1
 10203                           
 10204     0071                     ??_EUSART2_is_rx_ready:	
 10205                           ; 1 bytes @ 0x1
 10206                           
 10207     0071                     ?_EUSART2_SetTxInterruptHandler:	
 10208                           ; 1 bytes @ 0x1
 10209                           
 10210     0071                     ??_EUSART2_Receive_ISR:	
 10211                           ; 1 bytes @ 0x1
 10212                           
 10213     0071                     ?_EUSART2_SetRxInterruptHandler:	
 10214                           ; 1 bytes @ 0x1
 10215                           
 10216     0071                     ??_EUSART2_is_tx_done:	
 10217                           ; 1 bytes @ 0x1
 10218                           
 10219     0071                     ?_I2C1_SetBuffer:	
 10220                           ; 1 bytes @ 0x1
 10221                           
 10222     0071                     ??_I2C1_Open:	
 10223                           ; 1 bytes @ 0x1
 10224                           
 10225     0071                     ??_I2C1_Close:	
 10226                           ; 1 bytes @ 0x1
 10227                           
 10228     0071                     ?_RN487X_SetAsyncMessageHandler:	
 10229                           ; 1 bytes @ 0x1
 10230                           
 10231     0071                     ??_RN487X_IsConnected:	
 10232                           ; 1 bytes @ 0x1
 10233                           
 10234     0071                     ??_RN487X_is_tx_done:	
 10235                           ; 1 bytes @ 0x1
 10236                           
 10237     0071                     ??_RN487X_is_rx_ready:	
 10238                           ; 1 bytes @ 0x1
 10239                           
 10240     0071                     ?_RN487X_IndicateRx:	
 10241                           ; 1 bytes @ 0x1
 10242                           
 10243     0071                     ?_RN487X_Reset:	
 10244                           ; 1 bytes @ 0x1
 10245                           
 10246     0071                     ?_RN487X_SetSystemMode:	
 10247                           ; 1 bytes @ 0x1
 10248                           
 10249     0071                     ?_DELAY_milliseconds:	
 10250                           ; 1 bytes @ 0x1
 10251                           
 10252     0071                     ?_strcpy:	
 10253                           ; 1 bytes @ 0x1
 10254                           
 10255     0071                     ?_EUSART2_SetFramingErrorHandler:	
 10256                           ; 1 bytes @ 0x1
 10257                           
 10258     0071                     ?_EUSART2_SetOverrunErrorHandler:	
 10259                           ; 1 bytes @ 0x1
 10260                           
 10261     0071                     ?_EUSART2_SetErrorHandler:	
 10262                           ; 1 bytes @ 0x1
 10263                           
 10264     0071                     ??_EUSART2_DefaultErrorHandler:	
 10265                           ; 1 bytes @ 0x1
 10266                           
 10267     0071                     ?_EUSART1_SetFramingErrorHandler:	
 10268                           ; 1 bytes @ 0x1
 10269                           
 10270     0071                     ?_EUSART1_SetOverrunErrorHandler:	
 10271                           ; 1 bytes @ 0x1
 10272                           
 10273     0071                     ?_EUSART1_SetErrorHandler:	
 10274                           ; 1 bytes @ 0x1
 10275                           
 10276     0071                     ??_EUSART1_DefaultErrorHandler:	
 10277                           ; 1 bytes @ 0x1
 10278                           
 10279     0071                     ??_PMD_Initialize:	
 10280                           ; 1 bytes @ 0x1
 10281                           
 10282     0071                     ??_I2C1_Initialize:	
 10283                           ; 1 bytes @ 0x1
 10284                           
 10285     0071                     ??_OSCILLATOR_Initialize:	
 10286                           ; 1 bytes @ 0x1
 10287                           
 10288     0071                     ??_TMR0_Initialize:	
 10289                           ; 1 bytes @ 0x1
 10290                           
 10291     0071                     ?_IOCAF6_SetInterruptHandler:	
 10292                           ; 1 bytes @ 0x1
 10293                           
 10294     0071                     ??_I2C1_DO_IDLE:	
 10295                           ; 1 bytes @ 0x1
 10296                           
 10297     0071                     ??_I2C1_DO_SEND_ADR_READ:	
 10298                           ; 1 bytes @ 0x1
 10299                           
 10300     0071                     ??_I2C1_DO_RCEN:	
 10301                           ; 1 bytes @ 0x1
 10302                           
 10303     0071                     ??_I2C1_DO_SEND_RESTART_READ:	
 10304                           ; 1 bytes @ 0x1
 10305                           
 10306     0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
 10307                           ; 1 bytes @ 0x1
 10308                           
 10309     0071                     ??_I2C1_DO_SEND_RESTART:	
 10310                           ; 1 bytes @ 0x1
 10311                           
 10312     0071                     ??_I2C1_DO_SEND_STOP:	
 10313                           ; 1 bytes @ 0x1
 10314                           
 10315     0071                     ??_I2C1_DO_RX_ACK:	
 10316                           ; 1 bytes @ 0x1
 10317                           
 10318     0071                     ??_I2C1_DO_RX_NACK_STOP:	
 10319                           ; 1 bytes @ 0x1
 10320                           
 10321     0071                     ??_I2C1_DO_RX_NACK_RESTART:	
 10322                           ; 1 bytes @ 0x1
 10323                           
 10324     0071                     ??_I2C1_DO_RESET:	
 10325                           ; 1 bytes @ 0x1
 10326                           
 10327     0071                     ??_I2C1_MasterClearIrq:	
 10328                           ; 1 bytes @ 0x1
 10329                           
 10330     0071                     ??_I2C1_MasterOpen:	
 10331                           ; 1 bytes @ 0x1
 10332                           
 10333     0071                     ??_I2C1_MasterDisableIrq:	
 10334                           ; 1 bytes @ 0x1
 10335                           
 10336     0071                     ??_I2C1_MasterClose:	
 10337                           ; 1 bytes @ 0x1
 10338                           
 10339     0071                     ??_I2C1_MasterStart:	
 10340                           ; 1 bytes @ 0x1
 10341                           
 10342     0071                     ?_I2C1_SetCallback:	
 10343                           ; 1 bytes @ 0x1
 10344                           
 10345     0071                     ??_I2C1_MasterWaitForEvent:	
 10346                           ; 1 bytes @ 0x1
 10347                           
 10348     0071                     ??_I2C1_MasterIsNack:	
 10349                           ; 1 bytes @ 0x1
 10350                           
 10351     0071                     ??_I2C1_MasterSendTxData:	
 10352                           ; 1 bytes @ 0x1
 10353                           
 10354     0071                     ??_I2C1_MasterGetRxData:	
 10355                           ; 1 bytes @ 0x1
 10356                           
 10357     0071                     ??_I2C1_MasterSendAck:	
 10358                           ; 1 bytes @ 0x1
 10359                           
 10360     0071                     ??_I2C1_MasterStartRx:	
 10361                           ; 1 bytes @ 0x1
 10362                           
 10363     0071                     ??_I2C1_MasterSetIrq:	
 10364                           ; 1 bytes @ 0x1
 10365                           
 10366     0071                     ??_I2C1_MasterEnableRestart:	
 10367                           ; 1 bytes @ 0x1
 10368                           
 10369     0071                     ??_I2C1_MasterStop:	
 10370                           ; 1 bytes @ 0x1
 10371                           
 10372     0071                     ??_I2C1_MasterSendNack:	
 10373                           ; 1 bytes @ 0x1
 10374                           
 10375     0071                     ??_LIGHTBLUE_Initialize:	
 10376                           ; 1 bytes @ 0x1
 10377                           
 10378     0071                     ??_INTERRUPT_InterruptManager:	
 10379                           ; 1 bytes @ 0x1
 10380                           
 10381     0071                     ??_TMR0_HasOverflowOccured:	
 10382                           ; 1 bytes @ 0x1
 10383                           
 10384     0071                     ?_strlen:	
 10385                           ; 1 bytes @ 0x1
 10386                           
 10387     0071                     ?_strncmp:	
 10388                           ; 2 bytes @ 0x1
 10389                           
 10390     0071                     ?_strchr:	
 10391                           ; 2 bytes @ 0x1
 10392                           
 10393     0071                     RN487X_Reset@value:	
 10394                           ; 2 bytes @ 0x1
 10395                           
 10396     0071                     RN487X_IndicateRx@value:	
 10397                           ; 1 bytes @ 0x1
 10398                           
 10399     0071                     RN487X_SetSystemMode@mode:	
 10400                           ; 1 bytes @ 0x1
 10401                           
 10402     0071                     EUSART2_Write@txData:	
 10403                           ; 1 bytes @ 0x1
 10404                           
 10405     0071                     EUSART1_Write@txData:	
 10406                           ; 1 bytes @ 0x1
 10407                           
 10408     0071                     I2C1_Open@address:	
 10409                           ; 1 bytes @ 0x1
 10410                           
 10411     0071                     I2C1_Close@returnValue:	
 10412                           ; 1 bytes @ 0x1
 10413                           
 10414     0071                     I2C1_MasterSendTxData@data:	
 10415                           ; 1 bytes @ 0x1
 10416                           
 10417     0071                     RN487X_SetAsyncMessageHandler@pBuffer:	
 10418                           ; 1 bytes @ 0x1
 10419                           
 10420     0071                     EUSART2_SetFramingErrorHandler@interruptHandler:	
 10421                           ; 2 bytes @ 0x1
 10422                           
 10423     0071                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
 10424                           ; 2 bytes @ 0x1
 10425                           
 10426     0071                     EUSART2_SetErrorHandler@interruptHandler:	
 10427                           ; 2 bytes @ 0x1
 10428                           
 10429     0071                     EUSART2_SetTxInterruptHandler@interruptHandler:	
 10430                           ; 2 bytes @ 0x1
 10431                           
 10432     0071                     EUSART2_SetRxInterruptHandler@interruptHandler:	
 10433                           ; 2 bytes @ 0x1
 10434                           
 10435     0071                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10436                           ; 2 bytes @ 0x1
 10437                           
 10438     0071                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10439                           ; 2 bytes @ 0x1
 10440                           
 10441     0071                     EUSART1_SetErrorHandler@interruptHandler:	
 10442                           ; 2 bytes @ 0x1
 10443                           
 10444     0071                     EUSART1_SetTxInterruptHandler@interruptHandler:	
 10445                           ; 2 bytes @ 0x1
 10446                           
 10447     0071                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10448                           ; 2 bytes @ 0x1
 10449                           
 10450     0071                     IOCAF6_SetInterruptHandler@InterruptHandler:	
 10451                           ; 2 bytes @ 0x1
 10452                           
 10453     0071                     I2C1_SetBuffer@bufferSize:	
 10454                           ; 2 bytes @ 0x1
 10455                           
 10456     0071                     I2C1_SetCallback@cb:	
 10457                           ; 2 bytes @ 0x1
 10458                           
 10459     0071                     DELAY_milliseconds@milliseconds:	
 10460                           ; 2 bytes @ 0x1
 10461                           
 10462     0071                     strcpy@src:	
 10463                           ; 2 bytes @ 0x1
 10464                           
 10465     0071                     strlen@s:	
 10466                           ; 2 bytes @ 0x1
 10467                           
 10468     0071                     strchr@s:	
 10469                           ; 2 bytes @ 0x1
 10470                           
 10471     0071                     strncmp@l:	
 10472                           ; 2 bytes @ 0x1
 10473                           
 10474                           
 10475                           ; 2 bytes @ 0x1
 10476     0071                     	ds	1
 10477     0072                     ??_EUSART1_Write:
 10478     0072                     ??_EUSART2_Write:	
 10479                           ; 1 bytes @ 0x2
 10480                           
 10481     0072                     ??_RN487X_IndicateRx:	
 10482                           ; 1 bytes @ 0x2
 10483                           
 10484     0072                     ??_RN487X_Reset:	
 10485                           ; 1 bytes @ 0x2
 10486                           
 10487     0072                     ??_RN487X_SetSystemMode:	
 10488                           ; 1 bytes @ 0x2
 10489                           
 10490     0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
 10491                           ; 1 bytes @ 0x2
 10492                           
 10493     0072                     EUSART2_Read@readValue:	
 10494                           ; 1 bytes @ 0x2
 10495                           
 10496     0072                     EUSART1_Read@readValue:	
 10497                           ; 1 bytes @ 0x2
 10498                           
 10499     0072                     I2C1_Open@returnValue:	
 10500                           ; 1 bytes @ 0x2
 10501                           
 10502                           
 10503                           ; 1 bytes @ 0x2
 10504     0072                     	ds	1
 10505     0073                     ??_strlen:
 10506     0073                     ??_EUSART1_SetTxInterruptHandler:	
 10507                           ; 1 bytes @ 0x3
 10508                           
 10509     0073                     ??_EUSART1_SetRxInterruptHandler:	
 10510                           ; 1 bytes @ 0x3
 10511                           
 10512     0073                     ??_EUSART1_Initialize:	
 10513                           ; 1 bytes @ 0x3
 10514                           
 10515     0073                     ??_EUSART2_SetTxInterruptHandler:	
 10516                           ; 1 bytes @ 0x3
 10517                           
 10518     0073                     ??_EUSART2_SetRxInterruptHandler:	
 10519                           ; 1 bytes @ 0x3
 10520                           
 10521     0073                     ??_EUSART2_Initialize:	
 10522                           ; 1 bytes @ 0x3
 10523                           
 10524     0073                     ??_I2C1_SetBuffer:	
 10525                           ; 1 bytes @ 0x3
 10526                           
 10527     0073                     ??_RN487X_Read@rn487x_interface$F1338:	
 10528                           ; 1 bytes @ 0x3
 10529                           
 10530     0073                     ??_DELAY_milliseconds:	
 10531                           ; 1 bytes @ 0x3
 10532                           
 10533     0073                     ??_strcpy:	
 10534                           ; 1 bytes @ 0x3
 10535                           
 10536     0073                     ??_EUSART2_SetFramingErrorHandler:	
 10537                           ; 1 bytes @ 0x3
 10538                           
 10539     0073                     ??_EUSART2_SetOverrunErrorHandler:	
 10540                           ; 1 bytes @ 0x3
 10541                           
 10542     0073                     ??_EUSART2_SetErrorHandler:	
 10543                           ; 1 bytes @ 0x3
 10544                           
 10545     0073                     ??_EUSART1_SetFramingErrorHandler:	
 10546                           ; 1 bytes @ 0x3
 10547                           
 10548     0073                     ??_EUSART1_SetOverrunErrorHandler:	
 10549                           ; 1 bytes @ 0x3
 10550                           
 10551     0073                     ??_EUSART1_SetErrorHandler:	
 10552                           ; 1 bytes @ 0x3
 10553                           
 10554     0073                     ??_PIN_MANAGER_Initialize:	
 10555                           ; 1 bytes @ 0x3
 10556                           
 10557     0073                     ??_IOCAF6_SetInterruptHandler:	
 10558                           ; 1 bytes @ 0x3
 10559                           
 10560     0073                     ??_rn487x_PrintMessageStart:	
 10561                           ; 1 bytes @ 0x3
 10562                           
 10563     0073                     ??_rn487x_PrintMessageEnd:	
 10564                           ; 1 bytes @ 0x3
 10565                           
 10566     0073                     ??_rn487x_PrintIndicatorCharacters:	
 10567                           ; 1 bytes @ 0x3
 10568                           
 10569     0073                     ?_RN487X_ReadMsg:	
 10570                           ; 1 bytes @ 0x3
 10571                           
 10572     0073                     ??_RN487X_ReadDefaultResponse:	
 10573                           ; 1 bytes @ 0x3
 10574                           
 10575     0073                     ??_SYSTEM_Initialize:	
 10576                           ; 1 bytes @ 0x3
 10577                           
 10578     0073                     rn487x_PrintIndicatorCharacters@messageType:	
 10579                           ; 1 bytes @ 0x3
 10580                           
 10581     0073                     RN487X_SetAsyncMessageHandler@len:	
 10582                           ; 1 bytes @ 0x3
 10583                           
 10584     0073                     I2C1_SetBuffer@buffer:	
 10585                           ; 1 bytes @ 0x3
 10586                           
 10587     0073                     I2C1_SetCallback@ptr:	
 10588                           ; 1 bytes @ 0x3
 10589                           
 10590     0073                     RN487X_ReadMsg@expectedMsg:	
 10591                           ; 1 bytes @ 0x3
 10592                           
 10593     0073                     strchr@c:	
 10594                           ; 2 bytes @ 0x3
 10595                           
 10596     0073                     strncmp@r:	
 10597                           ; 2 bytes @ 0x3
 10598                           
 10599     0073                     RN487X_ReadDefaultResponse@resp:	
 10600                           ; 2 bytes @ 0x3
 10601                           
 10602                           
 10603                           ; 3 bytes @ 0x3
 10604     0073                     	ds	1
 10605     0074                     ??_RN487X_SetAsyncMessageHandler:
 10606     0074                     ?_RN487X_Delay:	
 10607                           ; 1 bytes @ 0x4
 10608                           
 10609     0074                     ??_I2C1_SetCallback:	
 10610                           ; 1 bytes @ 0x4
 10611                           
 10612     0074                     I2C1_SetCallback@idx:	
 10613                           ; 1 bytes @ 0x4
 10614                           
 10615     0074                     RN487X_Delay@delayCount:	
 10616                           ; 1 bytes @ 0x4
 10617                           
 10618     0074                     strlen@a:	
 10619                           ; 2 bytes @ 0x4
 10620                           
 10621                           
 10622                           ; 2 bytes @ 0x4
 10623     0074                     	ds	1
 10624     0075                     ?_I2C1_SetDataCompleteCallback:
 10625     0075                     ?_I2C1_SetAddressNackCallback:	
 10626                           ; 1 bytes @ 0x5
 10627                           
 10628     0075                     ??_strchr:	
 10629                           ; 1 bytes @ 0x5
 10630                           
 10631     0075                     RN487X_ReadMsg@msgLen:	
 10632                           ; 1 bytes @ 0x5
 10633                           
 10634     0075                     strcpy@d:	
 10635                           ; 1 bytes @ 0x5
 10636                           
 10637     0075                     I2C1_SetDataCompleteCallback@cb:	
 10638                           ; 1 bytes @ 0x5
 10639                           
 10640     0075                     I2C1_SetAddressNackCallback@cb:	
 10641                           ; 2 bytes @ 0x5
 10642                           
 10643     0075                     strncmp@n:	
 10644                           ; 2 bytes @ 0x5
 10645                           
 10646                           
 10647                           ; 2 bytes @ 0x5
 10648     0075                     	ds	1
 10649     0076                     ?_LIGHTBLUE_SplitByte:
 10650     0076                     ?_RN487X_Write:	
 10651                           ; 1 bytes @ 0x6
 10652                           
 10653     0076                     ??_RN487X_Delay:	
 10654                           ; 1 bytes @ 0x6
 10655                           
 10656     0076                     ??_RN487X_Init:	
 10657                           ; 1 bytes @ 0x6
 10658                           
 10659     0076                     ??_RN487X_ReadMsg:	
 10660                           ; 1 bytes @ 0x6
 10661                           
 10662     0076                     LIGHTBLUE_SplitByte@value:	
 10663                           ; 1 bytes @ 0x6
 10664                           
 10665     0076                     RN487X_Write@txData:	
 10666                           ; 1 bytes @ 0x6
 10667                           
 10668     0076                     RN487X_ReadDefaultResponse@status:	
 10669                           ; 1 bytes @ 0x6
 10670                           
 10671     0076                     strcpy@dest:	
 10672                           ; 1 bytes @ 0x6
 10673                           
 10674                           
 10675                           ; 1 bytes @ 0x6
 10676     0076                     	ds	1
 10677     0077                     ?_LIGHTBLUE_SendPacket:
 10678     0077                     ??_LIGHTBLUE_SplitByte:	
 10679                           ; 1 bytes @ 0x7
 10680                           
 10681     0077                     ??_RN487X_Write:	
 10682                           ; 1 bytes @ 0x7
 10683                           
 10684     0077                     ??_strncmp:	
 10685                           ; 1 bytes @ 0x7
 10686                           
 10687     0077                     ??_LIGHTBLUE_SendSerialData:	
 10688                           ; 1 bytes @ 0x7
 10689                           
 10690     0077                     ?_rn487x_PrintMessage:	
 10691                           ; 1 bytes @ 0x7
 10692                           
 10693     0077                     ?_RN487X_SendCmd:	
 10694                           ; 1 bytes @ 0x7
 10695                           
 10696     0077                     LIGHTBLUE_SendPacket@payload:	
 10697                           ; 1 bytes @ 0x7
 10698                           
 10699     0077                     RN487X_SendCmd@cmdLen:	
 10700                           ; 1 bytes @ 0x7
 10701                           
 10702     0077                     I2C1_SetDataCompleteCallback@ptr:	
 10703                           ; 1 bytes @ 0x7
 10704                           
 10705     0077                     rn487x_PrintMessage@passedMessage:	
 10706                           ; 1 bytes @ 0x7
 10707                           
 10708     0077                     I2C1_SetAddressNackCallback@ptr:	
 10709                           ; 2 bytes @ 0x7
 10710                           
 10711                           
 10712                           ; 2 bytes @ 0x7
 10713     0077                     	ds	1
 10714     0078                     ??_LIGHTBLUE_SendPacket:
 10715     0078                     ??_I2C1_SetDataCompleteCallback:	
 10716                           ; 1 bytes @ 0x8
 10717                           
 10718     0078                     ?_rd1RegCompleteHandler:	
 10719                           ; 1 bytes @ 0x8
 10720                           
 10721     0078                     ?_rd2RegCompleteHandler:	
 10722                           ; 1 bytes @ 0x8
 10723                           
 10724     0078                     ?_wr1RegCompleteHandler:	
 10725                           ; 1 bytes @ 0x8
 10726                           
 10727     0078                     ?_wr2RegCompleteHandler:	
 10728                           ; 1 bytes @ 0x8
 10729                           
 10730     0078                     ?_rdBlkRegCompleteHandler:	
 10731                           ; 1 bytes @ 0x8
 10732                           
 10733     0078                     ?_I2C1_CallbackReturnStop:	
 10734                           ; 1 bytes @ 0x8
 10735                           
 10736     0078                     ?_I2C1_CallbackReturnReset:	
 10737                           ; 1 bytes @ 0x8
 10738                           
 10739     0078                     ?_wr1RegCompleteHandler@strncmp$F4337:	
 10740                           ; 1 bytes @ 0x8
 10741                           
 10742     0078                     ?_rd1RegCompleteHandler@strncmp$F4343:	
 10743                           ; 1 bytes @ 0x8
 10744                           
 10745     0078                     ?_rd2RegCompleteHandler@strncmp$F4346:	
 10746                           ; 1 bytes @ 0x8
 10747                           
 10748     0078                     ?_wr2RegCompleteHandler@strncmp$F4349:	
 10749                           ; 1 bytes @ 0x8
 10750                           
 10751     0078                     ?_rdBlkRegCompleteHandler@strncmp$F4355:	
 10752                           ; 1 bytes @ 0x8
 10753                           
 10754     0078                     ??_RN487X_SendCmd:	
 10755                           ; 1 bytes @ 0x8
 10756                           
 10757     0078                     ?_strstr:	
 10758                           ; 1 bytes @ 0x8
 10759                           
 10760     0078                     LIGHTBLUE_SendSerialData@length:	
 10761                           ; 2 bytes @ 0x8
 10762                           
 10763     0078                     LIGHTBLUE_SplitByte@payload:	
 10764                           ; 1 bytes @ 0x8
 10765                           
 10766     0078                     wr1RegCompleteHandler@p:	
 10767                           ; 1 bytes @ 0x8
 10768                           
 10769     0078                     rd1RegCompleteHandler@p:	
 10770                           ; 1 bytes @ 0x8
 10771                           
 10772     0078                     rd2RegCompleteHandler@p:	
 10773                           ; 1 bytes @ 0x8
 10774                           
 10775     0078                     wr2RegCompleteHandler@p:	
 10776                           ; 1 bytes @ 0x8
 10777                           
 10778     0078                     rdBlkRegCompleteHandler@p:	
 10779                           ; 1 bytes @ 0x8
 10780                           
 10781     0078                     rd1RegCompleteHandler@i2c1_master_example$F1193@ptr:	
 10782                           ; 1 bytes @ 0x8
 10783                           
 10784     0078                     rd2RegCompleteHandler@i2c1_master_example$F1204@ptr:	
 10785                           ; 1 bytes @ 0x8
 10786                           
 10787     0078                     wr1RegCompleteHandler@i2c1_master_example$F1210@ptr:	
 10788                           ; 1 bytes @ 0x8
 10789                           
 10790     0078                     wr2RegCompleteHandler@i2c1_master_example$F1216@ptr:	
 10791                           ; 1 bytes @ 0x8
 10792                           
 10793     0078                     rdBlkRegCompleteHandler@i2c1_master_example$F1227@ptr:	
 10794                           ; 1 bytes @ 0x8
 10795                           
 10796     0078                     RN487X_ReadMsg@resp:	
 10797                           ; 1 bytes @ 0x8
 10798                           
 10799     0078                     I2C1_CallbackReturnStop@funPtr:	
 10800                           ; 1 bytes @ 0x8
 10801                           
 10802     0078                     I2C1_CallbackReturnReset@funPtr:	
 10803                           ; 1 bytes @ 0x8
 10804                           
 10805     0078                     strstr@h:	
 10806                           ; 1 bytes @ 0x8
 10807                           
 10808                           
 10809                           ; 2 bytes @ 0x8
 10810     0078                     	ds	1
 10811     0079                     ?_LIGHTBLUE_SplitWord:
 10812     0079                     ??_I2C1_SetAddressNackCallback:	
 10813                           ; 1 bytes @ 0x9
 10814                           
 10815     0079                     ??_rd1RegCompleteHandler:	
 10816                           ; 1 bytes @ 0x9
 10817                           
 10818     0079                     ??_rd2RegCompleteHandler:	
 10819                           ; 1 bytes @ 0x9
 10820                           
 10821     0079                     ??_wr1RegCompleteHandler:	
 10822                           ; 1 bytes @ 0x9
 10823                           
 10824     0079                     ??_wr2RegCompleteHandler:	
 10825                           ; 1 bytes @ 0x9
 10826                           
 10827     0079                     ??_rdBlkRegCompleteHandler:	
 10828                           ; 1 bytes @ 0x9
 10829                           
 10830     0079                     ??_I2C1_DO_TX:	
 10831                           ; 1 bytes @ 0x9
 10832                           
 10833     0079                     ??_I2C1_DO_RX:	
 10834                           ; 1 bytes @ 0x9
 10835                           
 10836     0079                     ??_I2C1_DO_TX_EMPTY:	
 10837                           ; 1 bytes @ 0x9
 10838                           
 10839     0079                     ??_I2C1_DO_ADDRESS_NACK:	
 10840                           ; 1 bytes @ 0x9
 10841                           
 10842     0079                     ??_I2C1_CallbackReturnStop:	
 10843                           ; 1 bytes @ 0x9
 10844                           
 10845     0079                     ??_I2C1_CallbackReturnReset:	
 10846                           ; 1 bytes @ 0x9
 10847                           
 10848     0079                     ??_wr1RegCompleteHandler@strncmp$F4339:	
 10849                           ; 1 bytes @ 0x9
 10850                           
 10851     0079                     ??_rd1RegCompleteHandler@strncmp$F4345:	
 10852                           ; 1 bytes @ 0x9
 10853                           
 10854     0079                     ??_rd2RegCompleteHandler@strncmp$F4348:	
 10855                           ; 1 bytes @ 0x9
 10856                           
 10857     0079                     ??_wr2RegCompleteHandler@strncmp$F4351:	
 10858                           ; 1 bytes @ 0x9
 10859                           
 10860     0079                     ??_rdBlkRegCompleteHandler@strncmp$F4357:	
 10861                           ; 1 bytes @ 0x9
 10862                           
 10863     0079                     ??_rn487x_PrintMessage:	
 10864                           ; 1 bytes @ 0x9
 10865                           
 10866     0079                     LIGHTBLUE_SendSerialData@serialData:	
 10867                           ; 1 bytes @ 0x9
 10868                           
 10869     0079                     RN487X_SendCmd@index:	
 10870                           ; 1 bytes @ 0x9
 10871                           
 10872     0079                     RN487X_ReadMsg@index:	
 10873                           ; 1 bytes @ 0x9
 10874                           
 10875     0079                     LIGHTBLUE_SplitWord@value:	
 10876                           ; 1 bytes @ 0x9
 10877                           
 10878                           
 10879                           ; 2 bytes @ 0x9
 10880     0079                     	ds	1
 10881     007A                     LIGHTBLUE_SendPacket@packetID:
 10882     007A                     RN487X_SendCmd@cmd:	
 10883                           ; 1 bytes @ 0xA
 10884                           
 10885     007A                     strstr@n:	
 10886                           ; 1 bytes @ 0xA
 10887                           
 10888                           
 10889                           ; 2 bytes @ 0xA
 10890     007A                     	ds	1
 10891     007B                     ??_BMA253_NewAccelDataRdyX:
 10892     007B                     ??_i2c_read1ByteRegister:	
 10893                           ; 1 bytes @ 0xB
 10894                           
 10895     007B                     ??_BMA253_NewAccelDataRdyY:	
 10896                           ; 1 bytes @ 0xB
 10897                           
 10898     007B                     ??_BMA253_NewAccelDataRdyZ:	
 10899                           ; 1 bytes @ 0xB
 10900                           
 10901     007B                     ??_LIGHTBLUE_SplitWord:	
 10902                           ; 1 bytes @ 0xB
 10903                           
 10904     007B                     ??_LIGHTBLUE_UpdateErrorLed:	
 10905                           ; 1 bytes @ 0xB
 10906                           
 10907     007B                     ??_RN487X_EnterCmdMode:	
 10908                           ; 1 bytes @ 0xB
 10909                           
 10910     007B                     ??_RN487X_SetOutputs:	
 10911                           ; 1 bytes @ 0xB
 10912                           
 10913     007B                     ??_RN487X_EnterDataMode:	
 10914                           ; 1 bytes @ 0xB
 10915                           
 10916     007B                     ??_I2C1_MasterWrite:	
 10917                           ; 1 bytes @ 0xB
 10918                           
 10919     007B                     ??_I2C1_Poller:	
 10920                           ; 1 bytes @ 0xB
 10921                           
 10922     007B                     ??_MCP9844_GetTemperatureValue:	
 10923                           ; 1 bytes @ 0xB
 10924                           
 10925     007B                     ??_LIGHTBLUE_PushButton:	
 10926                           ; 1 bytes @ 0xB
 10927                           
 10928     007B                     ??_LIGHTBLUE_LedState:	
 10929                           ; 1 bytes @ 0xB
 10930                           
 10931     007B                     ??_LIGHTBLUE_SetErrorLedValue:	
 10932                           ; 1 bytes @ 0xB
 10933                           
 10934     007B                     ??_I2C1_MasterOperation:	
 10935                           ; 1 bytes @ 0xB
 10936                           
 10937     007B                     BMA253_NewAccelDataRdyX@xNewData:	
 10938                           ; 1 bytes @ 0xB
 10939                           
 10940     007B                     BMA253_NewAccelDataRdyY@yNewData:	
 10941                           ; 1 bytes @ 0xB
 10942                           
 10943     007B                     BMA253_NewAccelDataRdyZ@zNewData:	
 10944                           ; 1 bytes @ 0xB
 10945                           
 10946     007B                     MCP9844_GetTemperatureValue@temperature:	
 10947                           ; 1 bytes @ 0xB
 10948                           
 10949     007B                     LIGHTBLUE_SplitWord@payload:	
 10950                           ; 1 bytes @ 0xB
 10951                           
 10952                           
 10953                           ; 1 bytes @ 0xB
 10954     007B                     	ds	1
 10955     007C                     ??_RN487X_Read:
 10956     007C                     ??_RN487X_DataReady:	
 10957                           ; 1 bytes @ 0xC
 10958                           
 10959     007C                     ??_RN487X_MessageHandler:	
 10960                           ; 1 bytes @ 0xC
 10961                           
 10962     007C                     ??_BMA253_GetAccelDataXYZ:	
 10963                           ; 1 bytes @ 0xC
 10964                           
 10965     007C                     ??_LIGHTBLUE_TemperatureSensor:	
 10966                           ; 1 bytes @ 0xC
 10967                           
 10968     007C                     ??_LIGHTBLUE_AccelSensor:	
 10969                           ; 1 bytes @ 0xC
 10970                           
 10971                           
 10972                           	psect	cstackBANK0
 10973     0020                     __pcstackBANK0:	
 10974                           ; 1 bytes @ 0xC
 10975                           
 10976     0020                     ?_RN487X_SetOutputs:
 10977     0020                     ??_strstr:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980     0020                     ??_I2C1_MasterFsm:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983     0020                     ??_LIGHTBLUE_SendProtocolVersion:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986     0020                     LIGHTBLUE_PushButton@button:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989     0020                     RN487X_SetOutputs@bitMap:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992     0020                     LIGHTBLUE_LedState@payload:	
 10993                           ; 2 bytes @ 0x0
 10994                           
 10995     0020                     rn487x_PrintMessage@printCharacter:	
 10996                           ; 3 bytes @ 0x0
 10997                           
 10998                           
 10999                           ; 32 bytes @ 0x0
 11000     0020                     	ds	1
 11001     0021                     LIGHTBLUE_PushButton@payload:
 11002                           
 11003                           ; 3 bytes @ 0x1
 11004     0021                     	ds	1
 11005     0022                     RN487X_SetOutputs@ioLowNibble:
 11006     0022                     I2C1_MasterOperation@read:	
 11007                           ; 1 bytes @ 0x2
 11008                           
 11009     0022                     strstr@nl:	
 11010                           ; 1 bytes @ 0x2
 11011                           
 11012     0022                     LIGHTBLUE_SendProtocolVersion@payload:	
 11013                           ; 2 bytes @ 0x2
 11014                           
 11015                           
 11016                           ; 19 bytes @ 0x2
 11017     0022                     	ds	1
 11018     0023                     LIGHTBLUE_LedState@led:
 11019     0023                     RN487X_SetOutputs@stateLowNibble:	
 11020                           ; 1 bytes @ 0x3
 11021                           
 11022     0023                     I2C1_MasterOperation@returnValue:	
 11023                           ; 1 bytes @ 0x3
 11024                           
 11025                           
 11026                           ; 1 bytes @ 0x3
 11027     0023                     	ds	1
 11028     0024                     ?_i2c_read1ByteRegister:
 11029     0024                     ?_i2c_read2ByteRegister:	
 11030                           ; 1 bytes @ 0x4
 11031                           
 11032     0024                     i2c_read1ByteRegister@reg:	
 11033                           ; 2 bytes @ 0x4
 11034                           
 11035     0024                     i2c_read2ByteRegister@reg:	
 11036                           ; 1 bytes @ 0x4
 11037                           
 11038     0024                     RN487X_SetOutputs@ioHighNibble:	
 11039                           ; 1 bytes @ 0x4
 11040                           
 11041                           
 11042                           ; 1 bytes @ 0x4
 11043     0024                     	ds	1
 11044     0025                     i2c_read1ByteRegister@address:
 11045     0025                     RN487X_SetOutputs@stateHighNibble:	
 11046                           ; 1 bytes @ 0x5
 11047                           
 11048                           
 11049                           ; 1 bytes @ 0x5
 11050     0025                     	ds	1
 11051     0026                     ??_i2c_read2ByteRegister:
 11052     0026                     LIGHTBLUE_SetErrorLedValue@value:	
 11053                           ; 1 bytes @ 0x6
 11054                           
 11055     0026                     i2c_read1ByteRegister@e:	
 11056                           ; 1 bytes @ 0x6
 11057                           
 11058                           
 11059                           ; 1 bytes @ 0x6
 11060     0026                     	ds	1
 11061     0027                     ?_LIGHTBLUE_PerformAction:
 11062     0027                     LIGHTBLUE_PerformAction@data:	
 11063                           ; 1 bytes @ 0x7
 11064                           
 11065     0027                     i2c_read1ByteRegister@x:	
 11066                           ; 1 bytes @ 0x7
 11067                           
 11068                           
 11069                           ; 2 bytes @ 0x7
 11070     0027                     	ds	1
 11071     0028                     ??_LIGHTBLUE_PerformAction:
 11072                           
 11073                           ; 1 bytes @ 0x8
 11074     0028                     	ds	1
 11075     0029                     LIGHTBLUE_PerformAction@id:
 11076     0029                     i2c_read1ByteRegister@d2:	
 11077                           ; 1 bytes @ 0x9
 11078                           
 11079                           
 11080                           ; 1 bytes @ 0x9
 11081     0029                     	ds	1
 11082     002A                     ??_BMA253_GetAccelDataX:
 11083     002A                     ??_BMA253_GetAccelDataY:	
 11084                           ; 1 bytes @ 0xA
 11085                           
 11086     002A                     ??_BMA253_GetAccelDataZ:	
 11087                           ; 1 bytes @ 0xA
 11088                           
 11089     002A                     LIGHTBLUE_PerformAction@led:	
 11090                           ; 1 bytes @ 0xA
 11091                           
 11092     002A                     i2c_read2ByteRegister@address:	
 11093                           ; 1 bytes @ 0xA
 11094                           
 11095                           
 11096                           ; 1 bytes @ 0xA
 11097     002A                     	ds	1
 11098     002B                     ??_LIGHTBLUE_ParseIncomingPacket:
 11099     002B                     i2c_read2ByteRegister@result:	
 11100                           ; 1 bytes @ 0xB
 11101                           
 11102                           
 11103                           ; 2 bytes @ 0xB
 11104     002B                     	ds	2
 11105     002D                     ?_MCP9844_CalcTemperature:
 11106     002D                     BMA253_GetAccelDataX@xAccelData:	
 11107                           ; 2 bytes @ 0xD
 11108                           
 11109     002D                     BMA253_GetAccelDataY@yAccelData:	
 11110                           ; 1 bytes @ 0xD
 11111                           
 11112     002D                     BMA253_GetAccelDataZ@zAccelData:	
 11113                           ; 1 bytes @ 0xD
 11114                           
 11115     002D                     _LIGHTBLUE_ParseIncomingPacket$417:	
 11116                           ; 1 bytes @ 0xD
 11117                           
 11118                           
 11119                           ; 2 bytes @ 0xD
 11120     002D                     	ds	1
 11121     002E                     BMA253_GetAccelDataX@lsbData:
 11122     002E                     BMA253_GetAccelDataY@lsbData:	
 11123                           ; 1 bytes @ 0xE
 11124                           
 11125     002E                     BMA253_GetAccelDataZ@lsbData:	
 11126                           ; 1 bytes @ 0xE
 11127                           
 11128                           
 11129                           ; 1 bytes @ 0xE
 11130     002E                     	ds	1
 11131     002F                     ??_MCP9844_CalcTemperature:
 11132     002F                     BMA253_GetAccelDataX@msbData:	
 11133                           ; 1 bytes @ 0xF
 11134                           
 11135     002F                     BMA253_GetAccelDataY@msbData:	
 11136                           ; 1 bytes @ 0xF
 11137                           
 11138     002F                     BMA253_GetAccelDataZ@msbData:	
 11139                           ; 1 bytes @ 0xF
 11140                           
 11141     002F                     _LIGHTBLUE_ParseIncomingPacket$418:	
 11142                           ; 1 bytes @ 0xF
 11143                           
 11144                           
 11145                           ; 2 bytes @ 0xF
 11146     002F                     	ds	1
 11147     0030                     BMA253_GetAccelDataXYZ@accelData:
 11148                           
 11149                           ; 1 bytes @ 0x10
 11150     0030                     	ds	1
 11151     0031                     BMA253_GetAccelDataXYZ@sensorValue:
 11152     0031                     _LIGHTBLUE_ParseIncomingPacket$419:	
 11153                           ; 2 bytes @ 0x11
 11154                           
 11155                           
 11156                           ; 2 bytes @ 0x11
 11157     0031                     	ds	2
 11158     0033                     LIGHTBLUE_ParseIncomingPacket@receivedByte:
 11159     0033                     LIGHTBLUE_AccelSensor@payload:	
 11160                           ; 1 bytes @ 0x13
 11161                           
 11162                           
 11163                           ; 13 bytes @ 0x13
 11164     0033                     	ds	1
 11165     0034                     MCP9844_CalcTemperature@upperByte:
 11166                           
 11167                           ; 1 bytes @ 0x14
 11168     0034                     	ds	1
 11169     0035                     MCP9844_CalcTemperature@lowerByte:
 11170     0035                     LIGHTBLUE_SendProtocolVersion@value:	
 11171                           ; 1 bytes @ 0x15
 11172                           
 11173                           
 11174                           ; 1 bytes @ 0x15
 11175     0035                     	ds	1
 11176     0036                     LIGHTBLUE_SendProtocolVersion@dataIndex:
 11177     0036                     MCP9844_CalcTemperature@temperatureData:	
 11178                           ; 1 bytes @ 0x16
 11179                           
 11180                           
 11181                           ; 2 bytes @ 0x16
 11182     0036                     	ds	2
 11183     0038                     LIGHTBLUE_TemperatureSensor@payload:
 11184                           
 11185                           ; 5 bytes @ 0x18
 11186     0038                     	ds	5
 11187     003D                     LIGHTBLUE_TemperatureSensor@temperature:
 11188                           
 11189                           ; 2 bytes @ 0x1D
 11190     003D                     	ds	3
 11191     0040                     rn487x_PrintMessage@messageIndex:
 11192     0040                     LIGHTBLUE_AccelSensor@accelData:	
 11193                           ; 1 bytes @ 0x20
 11194                           
 11195                           
 11196                           ; 6 bytes @ 0x20
 11197     0040                     	ds	1
 11198     0041                     ?_RN487X_MessageHandler:
 11199     0041                     RN487X_MessageHandler@message:	
 11200                           ; 1 bytes @ 0x21
 11201                           
 11202                           
 11203                           ; 2 bytes @ 0x21
 11204     0041                     	ds	2
 11205     0043                     RN487X_MessageHandler@messageType:
 11206                           
 11207                           ; 1 bytes @ 0x23
 11208     0043                     	ds	1
 11209     0044                     RN487X_FilterData@readChar:
 11210                           
 11211                           ; 1 bytes @ 0x24
 11212     0044                     	ds	2
 11213     0046                     ??_main:
 11214                           
 11215                           ; 1 bytes @ 0x26
 11216     0046                     	ds	1
 11217                           
 11218                           	psect	maintext
 11219     00A8                     __pmaintext:	
 11220 ;;
 11221 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
 11222 ;;
 11223 ;; *************** function _main *****************
 11224 ;; Defined at:
 11225 ;;		line 71 in file "main.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;		None
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;		None
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  2  2034[None  ] int 
 11232 ;; Registers used:
 11233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11234 ;; Tracked objects:
 11235 ;;		On entry : B3F/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11240 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11241 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11242 ;;      Totals:         0       1       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11243 ;;Total ram usage:        2 bytes
 11244 ;; Hardware stack levels required when called: 17
 11245 ;; This function calls:
 11246 ;;		_EUSART1_Read
 11247 ;;		_EUSART1_Write
 11248 ;;		_EUSART1_is_rx_ready
 11249 ;;		_EUSART2_Read
 11250 ;;		_EUSART2_Write
 11251 ;;		_EUSART2_is_rx_ready
 11252 ;;		_LIGHTBLUE_AccelSensor
 11253 ;;		_LIGHTBLUE_Initialize
 11254 ;;		_LIGHTBLUE_LedState
 11255 ;;		_LIGHTBLUE_ParseIncomingPacket
 11256 ;;		_LIGHTBLUE_PushButton
 11257 ;;		_LIGHTBLUE_SendProtocolVersion
 11258 ;;		_LIGHTBLUE_SendSerialData
 11259 ;;		_LIGHTBLUE_TemperatureSensor
 11260 ;;		_RN487X_DataReady
 11261 ;;		_RN487X_Init
 11262 ;;		_RN487X_IsConnected
 11263 ;;		_RN487X_Read
 11264 ;;		_RN487X_SetAsyncMessageHandler
 11265 ;;		_RN487X_Write
 11266 ;;		_SYSTEM_Initialize
 11267 ;;		_TMR0_HasOverflowOccured
 11268 ;; This function is called by:
 11269 ;;		Startup code after reset
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273     00A8                     _main:	
 11274                           ;psect for function _main
 11275                           
 11276     00A8                     l9529:	
 11277                           ;incstack = 0
 11278 ;; hardware stack exceeded
 11279                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11280                           
 11281                           
 11282                           ;main.c: 74:     SYSTEM_Initialize();
 11283     00A8  3189  2157  3180   	fcall	_SYSTEM_Initialize
 11284                           
 11285                           ;main.c: 75:     RN487X_SetAsyncMessageHandler(statusBuffer, sizeof(statusBuffer));
 11286     00AB  3020               	movlw	low _statusBuffer@main$F3732
 11287     00AC  00F1               	movwf	RN487X_SetAsyncMessageHandler@pBuffer
 11288     00AD  3003               	movlw	high _statusBuffer@main$F3732
 11289     00AE  00F2               	movwf	RN487X_SetAsyncMessageHandler@pBuffer+1
 11290     00AF  3050               	movlw	80
 11291     00B0  00F3               	movwf	RN487X_SetAsyncMessageHandler@len
 11292     00B1  3189  21E4  3180   	fcall	_RN487X_SetAsyncMessageHandler
 11293     00B4                     l9531:
 11294                           
 11295                           ;main.c: 78:     (INTCONbits.GIE = 1);
 11296     00B4  178B               	bsf	11,7	;volatile
 11297     00B5                     l9533:
 11298                           
 11299                           ;main.c: 81:     (INTCONbits.PEIE = 1);
 11300     00B5  170B               	bsf	11,6	;volatile
 11301     00B6                     l9535:
 11302                           
 11303                           ;main.c: 83:     RN487X_Init();
 11304     00B6  3184  2466  3180   	fcall	_RN487X_Init
 11305     00B9                     l9537:
 11306                           
 11307                           ;main.c: 84:     LIGHTBLUE_Initialize();
 11308     00B9  3196  26BE  3180   	fcall	_LIGHTBLUE_Initialize
 11309     00BC                     l9539:
 11310                           
 11311                           ;main.c: 87:     {;main.c: 88:         if (RN487X_IsConnected() == 1)
 11312     00BC  3196  264E  3180   	fcall	_RN487X_IsConnected
 11313     00BF  3A01               	xorlw	1
 11314     00C0  1D03               	skipz
 11315     00C1  28C3               	goto	u5671
 11316     00C2  28C4               	goto	u5670
 11317     00C3                     u5671:
 11318     00C3  294B               	goto	l2050
 11319     00C4                     u5670:
 11320     00C4                     l9541:
 11321                           
 11322                           ;main.c: 89:         {;main.c: 90:             if ((TMR0_HasOverflowOccured()) == 1)
 11323     00C4  3196  26AD  3180   	fcall	_TMR0_HasOverflowOccured
 11324     00C7  3A01               	xorlw	1
 11325     00C8  1D03               	skipz
 11326     00C9  28CB               	goto	u5681
 11327     00CA  28CC               	goto	u5680
 11328     00CB                     u5681:
 11329     00CB  28E4               	goto	l2039
 11330     00CC                     u5680:
 11331     00CC                     l9543:
 11332                           
 11333                           ;main.c: 91:             {;main.c: 92:                 (PIR0bits.TMR0IF = 0);
 11334     00CC  014E               	movlb	14	; select bank14
 11335     00CD  128C               	bcf	12,5	;volatile
 11336     00CE                     l9545:
 11337                           
 11338                           ;main.c: 94:                 LIGHTBLUE_TemperatureSensor();
 11339     00CE  3189  2141  3180   	fcall	_LIGHTBLUE_TemperatureSensor
 11340                           
 11341                           ;main.c: 95:                 LIGHTBLUE_AccelSensor();
 11342     00D1  318D  25AA  3180   	fcall	_LIGHTBLUE_AccelSensor
 11343                           
 11344                           ;main.c: 96:                 LIGHTBLUE_PushButton();
 11345     00D4  3189  2104  3180   	fcall	_LIGHTBLUE_PushButton
 11346                           
 11347                           ;main.c: 97:                 LIGHTBLUE_LedState();
 11348     00D7  318B  238A  3180   	fcall	_LIGHTBLUE_LedState
 11349                           
 11350                           ;main.c: 98:                 LIGHTBLUE_SendProtocolVersion();
 11351     00DA  318E  2637  3180   	fcall	_LIGHTBLUE_SendProtocolVersion
 11352                           
 11353                           ;main.c: 99:             }
 11354     00DD  28BC               	goto	l9539
 11355     00DE                     l9547:
 11356                           
 11357                           ;main.c: 103:                 {;main.c: 104:                     LIGHTBLUE_ParseIncoming
      +                          Packet(RN487X_Read());
 11358     00DE  3188  2000  3180   	fcall	_RN487X_Read
 11359     00E1  3181  2178  3180   	fcall	_LIGHTBLUE_ParseIncomingPacket
 11360     00E4                     l2039:	
 11361                           ;main.c: 105:                 }
 11362                           
 11363                           
 11364                           ;main.c: 102:                 while (RN487X_DataReady())
 11365     00E4  318A  227F  3180   	fcall	_RN487X_DataReady
 11366     00E7  3A00               	xorlw	0
 11367     00E8  1D03               	skipz
 11368     00E9  28EB               	goto	u5691
 11369     00EA  28EC               	goto	u5690
 11370     00EB                     u5691:
 11371     00EB  28DE               	goto	l9547
 11372     00EC                     u5690:
 11373     00EC  292C               	goto	l9565
 11374     00ED                     l9549:
 11375                           
 11376                           ;main.c: 107:                 {;main.c: 108:                     lightBlueSerial[serialI
      +                          ndex] = uart[UART_CDC].Read();
 11377     00ED  3000               	movlw	low (_uart| (0+32768))
 11378     00EE  0084               	movwf	4
 11379     00EF  3090               	movlw	high (_uart| (0+32768))
 11380     00F0  0085               	movwf	5
 11381     00F1  3F01               	moviw [1]fsr0
 11382     00F2  008A               	movwf	10
 11383     00F3  3F00               	moviw [0]fsr0
 11384     00F4  000A               	callw
 11385     00F5  3180               	pagesel	$
 11386     00F6  0140               	movlb	0	; select bank0
 11387     00F7  00C6               	movwf	??_main
 11388     00F8  0855               	movf	_serialIndex,w
 11389     00F9  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11390     00FA  0086               	movwf	6
 11391     00FB  3002               	movlw	2	; select bank4/5
 11392     00FC  0087               	movwf	7
 11393     00FD  0846               	movf	??_main,w
 11394     00FE  0081               	movwf	1
 11395     00FF                     l9551:
 11396                           
 11397                           ;main.c: 109:                     if ((lightBlueSerial[serialIndex] == '\r')
 11398     00FF  0855               	movf	_serialIndex,w
 11399     0100  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11400     0101  0086               	movwf	6
 11401     0102  3002               	movlw	2	; select bank4/5
 11402     0103  0087               	movwf	7
 11403     0104  300D               	movlw	13
 11404     0105  0601               	xorwf	1,w
 11405     0106  1903               	btfsc	3,2
 11406     0107  2909               	goto	u5701
 11407     0108  290A               	goto	u5700
 11408     0109                     u5701:
 11409     0109  291B               	goto	l9557
 11410     010A                     u5700:
 11411     010A                     l9553:
 11412     010A  0855               	movf	_serialIndex,w
 11413     010B  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11414     010C  0086               	movwf	6
 11415     010D  3002               	movlw	2	; select bank4/5
 11416     010E  0087               	movwf	7
 11417     010F  300A               	movlw	10
 11418     0110  0601               	xorwf	1,w
 11419     0111  1903               	btfsc	3,2
 11420     0112  2914               	goto	u5711
 11421     0113  2915               	goto	u5710
 11422     0114                     u5711:
 11423     0114  291B               	goto	l9557
 11424     0115                     u5710:
 11425     0115                     l9555:
 11426     0115  304F               	movlw	79
 11427     0116  0655               	xorwf	_serialIndex,w
 11428     0117  1D03               	btfss	3,2
 11429     0118  291A               	goto	u5721
 11430     0119  291B               	goto	u5720
 11431     011A                     u5721:
 11432     011A  2928               	goto	l9563
 11433     011B                     u5720:
 11434     011B                     l9557:
 11435                           
 11436                           ;main.c: 112:                     {;main.c: 113:                         lightBlueSerial
      +                          [serialIndex] = '\0';
 11437     011B  0855               	movf	_serialIndex,w
 11438     011C  3E20               	addlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11439     011D  0086               	movwf	6
 11440     011E  3002               	movlw	2	; select bank4/5
 11441     011F  0087               	movwf	7
 11442     0120  0181               	clrf	1
 11443     0121                     l9559:
 11444                           
 11445                           ;main.c: 114:                         LIGHTBLUE_SendSerialData(lightBlueSerial);
 11446     0121  3020               	movlw	(low (_lightBlueSerial| (0+512)))& (0+255)
 11447     0122  3182  2244  3180   	fcall	_LIGHTBLUE_SendSerialData
 11448     0125                     l9561:
 11449                           
 11450                           ;main.c: 115:                         serialIndex = 0;
 11451     0125  0140               	movlb	0	; select bank0
 11452     0126  01D5               	clrf	_serialIndex
 11453                           
 11454                           ;main.c: 116:                     }
 11455     0127  292C               	goto	l9565
 11456     0128                     l9563:
 11457                           
 11458                           ;main.c: 118:                     {;main.c: 119:                         serialIndex++;
 11459     0128  3001               	movlw	1
 11460     0129  00C6               	movwf	??_main
 11461     012A  0846               	movf	??_main,w
 11462     012B  07D5               	addwf	_serialIndex,f
 11463     012C                     l9565:
 11464                           
 11465                           ;main.c: 106:                 while (uart[UART_CDC].DataReady())
 11466     012C  3006               	movlw	low ((_uart+6)| (0+32768))
 11467     012D  0084               	movwf	4
 11468     012E  3090               	movlw	high ((_uart+6)| (0+32768))
 11469     012F  0085               	movwf	5
 11470     0130  3F01               	moviw [1]fsr0
 11471     0131  008A               	movwf	10
 11472     0132  3F00               	moviw [0]fsr0
 11473     0133  000A               	callw
 11474     0134  3180               	pagesel	$
 11475     0135  3A00               	xorlw	0
 11476     0136  1D03               	skipz
 11477     0137  2939               	goto	u5731
 11478     0138  293A               	goto	u5730
 11479     0139                     u5731:
 11480     0139  28ED               	goto	l9549
 11481     013A                     u5730:
 11482     013A  28BC               	goto	l9539
 11483     013B                     l9567:
 11484                           
 11485                           ;main.c: 128:             {;main.c: 129:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 11486     013B  3188  2000  3180   	fcall	_RN487X_Read
 11487     013E  0141               	movlb	1	; select bank1
 11488     013F  00EF               	movwf	_main$4713^(0+128)
 11489                           
 11490                           ;main.c: 128:             {;main.c: 129:                 uart[UART_CDC].Write(RN487X_Rea
      +                          d());
 11491     0140  086F               	movf	_main$4713^(0+128),w
 11492     0141  00F1               	movwf	EUSART2_Write@txData
 11493     0142  3002               	movlw	low ((_uart+2)| (0+32768))
 11494     0143  0084               	movwf	4
 11495     0144  3090               	movlw	high ((_uart+2)| (0+32768))
 11496     0145  0085               	movwf	5
 11497     0146  3F01               	moviw [1]fsr0
 11498     0147  008A               	movwf	10
 11499     0148  3F00               	moviw [0]fsr0
 11500     0149  000A               	callw
 11501     014A  3180               	pagesel	$
 11502     014B                     l2050:	
 11503                           ;main.c: 130:             }
 11504                           
 11505                           
 11506                           ;main.c: 127:             while(RN487X_DataReady())
 11507     014B  318A  227F  3180   	fcall	_RN487X_DataReady
 11508     014E  3A00               	xorlw	0
 11509     014F  1D03               	skipz
 11510     0150  2952               	goto	u5741
 11511     0151  2953               	goto	u5740
 11512     0152                     u5741:
 11513     0152  293B               	goto	l9567
 11514     0153                     u5740:
 11515     0153  2967               	goto	l9571
 11516     0154                     l9569:
 11517                           
 11518                           ;main.c: 132:             {;main.c: 133:                 RN487X.Write(uart[UART_CDC].Rea
      +                          d());
 11519     0154  3000               	movlw	low (_uart| (0+32768))
 11520     0155  0084               	movwf	4
 11521     0156  3090               	movlw	high (_uart| (0+32768))
 11522     0157  0085               	movwf	5
 11523     0158  3F01               	moviw [1]fsr0
 11524     0159  008A               	movwf	10
 11525     015A  3F00               	moviw [0]fsr0
 11526     015B  000A               	callw
 11527     015C  3180               	pagesel	$
 11528     015D  00F6               	movwf	RN487X_Write@txData
 11529     015E  3068               	movlw	low (_RN487X| (0+32768))
 11530     015F  0084               	movwf	4
 11531     0160  3090               	movlw	high (_RN487X| (0+32768))
 11532     0161  0085               	movwf	5
 11533     0162  3F01               	moviw [1]fsr0
 11534     0163  008A               	movwf	10
 11535     0164  3F00               	moviw [0]fsr0
 11536     0165  000A               	callw
 11537     0166  3180               	pagesel	$
 11538     0167                     l9571:
 11539                           
 11540                           ;main.c: 131:             while (uart[UART_CDC].DataReady())
 11541     0167  3006               	movlw	low ((_uart+6)| (0+32768))
 11542     0168  0084               	movwf	4
 11543     0169  3090               	movlw	high ((_uart+6)| (0+32768))
 11544     016A  0085               	movwf	5
 11545     016B  3F01               	moviw [1]fsr0
 11546     016C  008A               	movwf	10
 11547     016D  3F00               	moviw [0]fsr0
 11548     016E  000A               	callw
 11549     016F  3180               	pagesel	$
 11550     0170  3A00               	xorlw	0
 11551     0171  1D03               	skipz
 11552     0172  2974               	goto	u5751
 11553     0173  2975               	goto	u5750
 11554     0174                     u5751:
 11555     0174  2954               	goto	l9569
 11556     0175                     u5750:
 11557     0175  28BC               	goto	l9539
 11558     0176  3180  2855         	ljmp	start
 11559     0178                     __end_of_main:
 11560                           
 11561                           	psect	text1
 11562     16AD                     __ptext1:	
 11563 ;; *************** function _TMR0_HasOverflowOccured *****************
 11564 ;; Defined at:
 11565 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;		None
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;		None
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      _Bool 
 11572 ;; Registers used:
 11573 ;;		wreg, status,2, status,0
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11583 ;;Total ram usage:        0 bytes
 11584 ;; Hardware stack levels used: 1
 11585 ;; Hardware stack levels required when called: 4
 11586 ;; This function calls:
 11587 ;;		Nothing
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593     16AD                     _TMR0_HasOverflowOccured:	
 11594                           ;psect for function _TMR0_HasOverflowOccured
 11595                           
 11596     16AD                     l9169:	
 11597                           ;incstack = 0
 11598                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
 11599                           
 11600                           
 11601                           ;mcc_generated_files/tmr0.c: 130:     return(PIR0bits.TMR0IF);
 11602     16AD  014E               	movlb	14	; select bank14
 11603     16AE  0E0C               	swapf	12,w	;volatile
 11604     16AF  0C89               	rrf	9,f
 11605     16B0  3901               	andlw	1
 11606     16B1                     l1489:
 11607     16B1  0008               	return
 11608     16B2                     __end_of_TMR0_HasOverflowOccured:
 11609                           
 11610                           	psect	text2
 11611     0957                     __ptext2:	
 11612 ;; *************** function _SYSTEM_Initialize *****************
 11613 ;; Defined at:
 11614 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;		None
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;		None
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  1    wreg      void 
 11621 ;; Registers used:
 11622 ;;		wreg, status,2, status,0, pclath, cstack
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11632 ;;Total ram usage:        0 bytes
 11633 ;; Hardware stack levels used: 1
 11634 ;; Hardware stack levels required when called: 6
 11635 ;; This function calls:
 11636 ;;		_EUSART1_Initialize
 11637 ;;		_EUSART2_Initialize
 11638 ;;		_I2C1_Initialize
 11639 ;;		_OSCILLATOR_Initialize
 11640 ;;		_PIN_MANAGER_Initialize
 11641 ;;		_PMD_Initialize
 11642 ;;		_TMR0_Initialize
 11643 ;; This function is called by:
 11644 ;;		_main
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648     0957                     _SYSTEM_Initialize:	
 11649                           ;psect for function _SYSTEM_Initialize
 11650                           
 11651     0957                     l9155:	
 11652                           ;incstack = 0
 11653                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11654                           
 11655                           
 11656                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11657     0957  3197  278A  3189   	fcall	_PMD_Initialize
 11658     095A                     l9157:
 11659                           
 11660                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 11661     095A  3197  2759  3189   	fcall	_I2C1_Initialize
 11662     095D                     l9159:
 11663                           
 11664                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11665     095D  3186  2657  3189   	fcall	_PIN_MANAGER_Initialize
 11666     0960                     l9161:
 11667                           
 11668                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11669     0960  3197  2780  3189   	fcall	_OSCILLATOR_Initialize
 11670     0963                     l9163:
 11671                           
 11672                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
 11673     0963  3189  2117  3189   	fcall	_TMR0_Initialize
 11674     0966                     l9165:
 11675                           
 11676                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
 11677     0966  318F  2784  3189   	fcall	_EUSART1_Initialize
 11678     0969                     l9167:
 11679                           
 11680                           ;mcc_generated_files/mcc.c: 58:     EUSART2_Initialize();
 11681     0969  318F  27C2  3189   	fcall	_EUSART2_Initialize
 11682     096C                     l1349:
 11683     096C  0008               	return
 11684     096D                     __end_of_SYSTEM_Initialize:
 11685                           
 11686                           	psect	text3
 11687     0917                     __ptext3:	
 11688 ;; *************** function _TMR0_Initialize *****************
 11689 ;; Defined at:
 11690 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 4
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_SYSTEM_Initialize
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718     0917                     _TMR0_Initialize:	
 11719                           ;psect for function _TMR0_Initialize
 11720                           
 11721     0917                     l8893:	
 11722                           ;incstack = 0
 11723                           ; Regs used in _TMR0_Initialize: [wreg]
 11724                           
 11725                           
 11726                           ;mcc_generated_files/tmr0.c: 70:     T0CON1 = 0x47;
 11727     0917  3047               	movlw	71
 11728     0918  014B               	movlb	11	; select bank11
 11729     0919  009F               	movwf	31	;volatile
 11730                           
 11731                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x0B;
 11732     091A  300B               	movlw	11
 11733     091B  009D               	movwf	29	;volatile
 11734                           
 11735                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0xDC;
 11736     091C  30DC               	movlw	220
 11737     091D  009C               	movwf	28	;volatile
 11738                           
 11739                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 11740     091E  081D               	movf	29,w	;volatile
 11741     091F  0140               	movlb	0	; select bank0
 11742     0920  00C8               	movwf	_timer0ReloadVal16bit+1	;volatile
 11743     0921  014B               	movlb	11	; select bank11
 11744     0922  081C               	movf	28,w	;volatile
 11745     0923  0140               	movlb	0	; select bank0
 11746     0924  00C7               	movwf	_timer0ReloadVal16bit	;volatile
 11747     0925                     l8895:
 11748                           
 11749                           ;mcc_generated_files/tmr0.c: 82:     PIR0bits.TMR0IF = 0;
 11750     0925  014E               	movlb	14	; select bank14
 11751     0926  128C               	bcf	12,5	;volatile
 11752                           
 11753                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x90;
 11754     0927  3090               	movlw	144
 11755     0928  014B               	movlb	11	; select bank11
 11756     0929  009E               	movwf	30	;volatile
 11757     092A                     l1471:
 11758     092A  0008               	return
 11759     092B                     __end_of_TMR0_Initialize:
 11760                           
 11761                           	psect	text4
 11762     178A                     __ptext4:	
 11763 ;; *************** function _PMD_Initialize *****************
 11764 ;; Defined at:
 11765 ;;		line 77 in file "mcc_generated_files/mcc.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;		None
 11768 ;; Auto vars:     Size  Location     Type
 11769 ;;		None
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  1    wreg      void 
 11772 ;; Registers used:
 11773 ;;		status,2
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11783 ;;Total ram usage:        0 bytes
 11784 ;; Hardware stack levels used: 1
 11785 ;; Hardware stack levels required when called: 4
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_SYSTEM_Initialize
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793     178A                     _PMD_Initialize:	
 11794                           ;psect for function _PMD_Initialize
 11795                           
 11796     178A                     l8807:	
 11797                           ;incstack = 0
 11798                           ; Regs used in _PMD_Initialize: [status,2]
 11799                           
 11800                           
 11801                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 11802     178A  014F               	movlb	15	; select bank15
 11803     178B  0196               	clrf	22	;volatile
 11804                           
 11805                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 11806     178C  0197               	clrf	23	;volatile
 11807                           
 11808                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 11809     178D  0198               	clrf	24	;volatile
 11810                           
 11811                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 11812     178E  0199               	clrf	25	;volatile
 11813                           
 11814                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 11815     178F  019A               	clrf	26	;volatile
 11816                           
 11817                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 11818     1790  019B               	clrf	27	;volatile
 11819                           
 11820                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
 11821     1791  019C               	clrf	28	;volatile
 11822                           
 11823                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
 11824     1792  019D               	clrf	29	;volatile
 11825     1793                     l1355:
 11826     1793  0008               	return
 11827     1794                     __end_of_PMD_Initialize:
 11828                           
 11829                           	psect	text5
 11830     0657                     __ptext5:	
 11831 ;; *************** function _PIN_MANAGER_Initialize *****************
 11832 ;; Defined at:
 11833 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;		None
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;		None
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      void 
 11840 ;; Registers used:
 11841 ;;		wreg, status,2, status,0, pclath, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11851 ;;Total ram usage:        0 bytes
 11852 ;; Hardware stack levels used: 1
 11853 ;; Hardware stack levels required when called: 5
 11854 ;; This function calls:
 11855 ;;		_IOCAF6_SetInterruptHandler
 11856 ;; This function is called by:
 11857 ;;		_SYSTEM_Initialize
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861     0657                     _PIN_MANAGER_Initialize:	
 11862                           ;psect for function _PIN_MANAGER_Initialize
 11863                           
 11864     0657                     l8817:	
 11865                           ;incstack = 0
 11866                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11867                           
 11868                           
 11869                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 11870     0657  0140               	movlb	0	; select bank0
 11871     0658  019C               	clrf	28	;volatile
 11872     0659                     l8819:
 11873                           
 11874                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x31;
 11875     0659  3031               	movlw	49
 11876     065A  0098               	movwf	24	;volatile
 11877     065B                     l8821:
 11878                           
 11879                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 11880     065B  0199               	clrf	25	;volatile
 11881                           
 11882                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0xC1;
 11883     065C  30C1               	movlw	193
 11884     065D  009A               	movwf	26	;volatile
 11885                           
 11886                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 11887     065E  3008               	movlw	8
 11888     065F  0096               	movwf	22	;volatile
 11889                           
 11890                           ;mcc_generated_files/pin_manager.c: 71:     TRISA = 0xDE;
 11891     0660  30DE               	movlw	222
 11892     0661  0092               	movwf	18	;volatile
 11893                           
 11894                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xEF;
 11895     0662  30EF               	movlw	239
 11896     0663  0093               	movwf	19	;volatile
 11897                           
 11898                           ;mcc_generated_files/pin_manager.c: 73:     TRISC = 0x25;
 11899     0664  3025               	movlw	37
 11900     0665  0094               	movwf	20	;volatile
 11901     0666                     l8823:
 11902                           
 11903                           ;mcc_generated_files/pin_manager.c: 78:     ANSELC = 0x00;
 11904     0666  017E               	movlb	62	; select bank62
 11905     0667  01CE               	clrf	78	;volatile
 11906     0668                     l8825:
 11907                           
 11908                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0xC9;
 11909     0668  30C9               	movlw	201
 11910     0669  00C3               	movwf	67	;volatile
 11911     066A                     l8827:
 11912                           
 11913                           ;mcc_generated_files/pin_manager.c: 80:     ANSELA = 0x0E;
 11914     066A  300E               	movlw	14
 11915     066B  00B8               	movwf	56	;volatile
 11916     066C                     l8829:
 11917                           
 11918                           ;mcc_generated_files/pin_manager.c: 85:     WPUE = 0x00;
 11919     066C  01E5               	clrf	101	;volatile
 11920     066D                     l8831:
 11921                           
 11922                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 11923     066D  01C4               	clrf	68	;volatile
 11924     066E                     l8833:
 11925                           
 11926                           ;mcc_generated_files/pin_manager.c: 87:     WPUA = 0x00;
 11927     066E  01B9               	clrf	57	;volatile
 11928     066F                     l8835:
 11929                           
 11930                           ;mcc_generated_files/pin_manager.c: 88:     WPUC = 0x00;
 11931     066F  01CF               	clrf	79	;volatile
 11932     0670                     l8837:
 11933                           
 11934                           ;mcc_generated_files/pin_manager.c: 93:     ODCONE = 0x00;
 11935     0670  01E6               	clrf	102	;volatile
 11936     0671                     l8839:
 11937                           
 11938                           ;mcc_generated_files/pin_manager.c: 94:     ODCONA = 0x00;
 11939     0671  01BA               	clrf	58	;volatile
 11940     0672                     l8841:
 11941                           
 11942                           ;mcc_generated_files/pin_manager.c: 95:     ODCONB = 0x00;
 11943     0672  01C5               	clrf	69	;volatile
 11944     0673                     l8843:
 11945                           
 11946                           ;mcc_generated_files/pin_manager.c: 96:     ODCONC = 0x00;
 11947     0673  01D0               	clrf	80	;volatile
 11948     0674                     l8845:
 11949                           
 11950                           ;mcc_generated_files/pin_manager.c: 101:     SLRCONA = 0xFF;
 11951     0674  30FF               	movlw	255
 11952     0675  00BB               	movwf	59	;volatile
 11953     0676                     l8847:
 11954                           
 11955                           ;mcc_generated_files/pin_manager.c: 102:     SLRCONB = 0xFF;
 11956     0676  30FF               	movlw	255
 11957     0677  00C6               	movwf	70	;volatile
 11958     0678                     l8849:
 11959                           
 11960                           ;mcc_generated_files/pin_manager.c: 103:     SLRCONC = 0xFF;
 11961     0678  30FF               	movlw	255
 11962     0679  00D1               	movwf	81	;volatile
 11963     067A                     l8851:
 11964                           
 11965                           ;mcc_generated_files/pin_manager.c: 108:     INLVLA = 0x3F;
 11966     067A  303F               	movlw	63
 11967     067B  00BC               	movwf	60	;volatile
 11968     067C                     l8853:
 11969                           
 11970                           ;mcc_generated_files/pin_manager.c: 109:     INLVLB = 0x3F;
 11971     067C  303F               	movlw	63
 11972     067D  00C7               	movwf	71	;volatile
 11973     067E                     l8855:
 11974                           
 11975                           ;mcc_generated_files/pin_manager.c: 110:     INLVLC = 0x3F;
 11976     067E  303F               	movlw	63
 11977     067F  00D2               	movwf	82	;volatile
 11978     0680                     l8857:
 11979                           
 11980                           ;mcc_generated_files/pin_manager.c: 117:     IOCAFbits.IOCAF6 = 0;
 11981     0680  133F               	bcf	63,6	;volatile
 11982     0681                     l8859:
 11983                           
 11984                           ;mcc_generated_files/pin_manager.c: 119:     IOCANbits.IOCAN6 = 0;
 11985     0681  133E               	bcf	62,6	;volatile
 11986     0682                     l8861:
 11987                           
 11988                           ;mcc_generated_files/pin_manager.c: 121:     IOCAPbits.IOCAP6 = 1;
 11989     0682  173D               	bsf	61,6	;volatile
 11990     0683                     l8863:
 11991                           
 11992                           ;mcc_generated_files/pin_manager.c: 126:     IOCAF6_SetInterruptHandler(IOCAF6_DefaultIn
      +                          terruptHandler);
 11993     0683  302E               	movlw	low _IOCAF6_DefaultInterruptHandler
 11994     0684  00F1               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler
 11995     0685  3016               	movlw	high _IOCAF6_DefaultInterruptHandler
 11996     0686  00F2               	movwf	IOCAF6_SetInterruptHandler@InterruptHandler+1
 11997     0687  3197  270C  3186   	fcall	_IOCAF6_SetInterruptHandler
 11998     068A                     l8865:
 11999                           
 12000                           ;mcc_generated_files/pin_manager.c: 129:     PIE0bits.IOCIE = 1;
 12001     068A  014E               	movlb	14	; select bank14
 12002     068B  1616               	bsf	22,4	;volatile
 12003     068C                     l8867:
 12004                           
 12005                           ;mcc_generated_files/pin_manager.c: 132:     SSP1CLKPPS = 0x09;
 12006     068C  3009               	movlw	9
 12007     068D  017D               	movlb	61	; select bank61
 12008     068E  00C5               	movwf	69	;volatile
 12009     068F                     l8869:
 12010                           
 12011                           ;mcc_generated_files/pin_manager.c: 133:     RB1PPS = 0x13;
 12012     068F  3013               	movlw	19
 12013     0690  017E               	movlb	62	; select bank62
 12014     0691  0099               	movwf	25	;volatile
 12015     0692                     l8871:
 12016                           
 12017                           ;mcc_generated_files/pin_manager.c: 134:     RB2PPS = 0x14;
 12018     0692  3014               	movlw	20
 12019     0693  009A               	movwf	26	;volatile
 12020     0694                     l8873:
 12021                           
 12022                           ;mcc_generated_files/pin_manager.c: 135:     RC4PPS = 0x25;
 12023     0694  3025               	movlw	37
 12024     0695  00A4               	movwf	36	;volatile
 12025     0696                     l8875:
 12026                           
 12027                           ;mcc_generated_files/pin_manager.c: 136:     RB4PPS = 0x0F;
 12028     0696  300F               	movlw	15
 12029     0697  009C               	movwf	28	;volatile
 12030     0698                     l8877:
 12031                           
 12032                           ;mcc_generated_files/pin_manager.c: 137:     RX2DTPPS = 0x15;
 12033     0698  3015               	movlw	21
 12034     0699  017D               	movlb	61	; select bank61
 12035     069A  00CD               	movwf	77	;volatile
 12036     069B                     l8879:
 12037                           
 12038                           ;mcc_generated_files/pin_manager.c: 138:     SSP1DATPPS = 0x0A;
 12039     069B  300A               	movlw	10
 12040     069C  00C6               	movwf	70	;volatile
 12041     069D                     l8881:
 12042                           
 12043                           ;mcc_generated_files/pin_manager.c: 139:     RX1DTPPS = 0x0D;
 12044     069D  300D               	movlw	13
 12045     069E  00CB               	movwf	75	;volatile
 12046     069F                     l1440:
 12047     069F  0008               	return
 12048     06A0                     __end_of_PIN_MANAGER_Initialize:
 12049                           
 12050                           	psect	text6
 12051     170C                     __ptext6:	
 12052 ;; *************** function _IOCAF6_SetInterruptHandler *****************
 12053 ;; Defined at:
 12054 ;;		line 169 in file "mcc_generated_files/pin_manager.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 12057 ;;		 -> IOCAF6_DefaultInterruptHandler(1), 
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;		None
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12073 ;;Total ram usage:        2 bytes
 12074 ;; Hardware stack levels used: 1
 12075 ;; Hardware stack levels required when called: 4
 12076 ;; This function calls:
 12077 ;;		Nothing
 12078 ;; This function is called by:
 12079 ;;		_PIN_MANAGER_Initialize
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083     170C                     _IOCAF6_SetInterruptHandler:	
 12084                           ;psect for function _IOCAF6_SetInterruptHandler
 12085                           
 12086     170C                     l8643:	
 12087                           ;incstack = 0
 12088                           ; Regs used in _IOCAF6_SetInterruptHandler: [wreg]
 12089                           
 12090                           
 12091                           ;mcc_generated_files/pin_manager.c: 170:     IOCAF6_InterruptHandler = InterruptHandler;
 12092     170C  0872               	movf	IOCAF6_SetInterruptHandler@InterruptHandler+1,w
 12093     170D  0140               	movlb	0	; select bank0
 12094     170E  00ED               	movwf	_IOCAF6_InterruptHandler+1
 12095     170F  0871               	movf	IOCAF6_SetInterruptHandler@InterruptHandler,w
 12096     1710  00EC               	movwf	_IOCAF6_InterruptHandler
 12097     1711                     l1451:
 12098     1711  0008               	return
 12099     1712                     __end_of_IOCAF6_SetInterruptHandler:
 12100                           
 12101                           	psect	text7
 12102     1780                     __ptext7:	
 12103 ;; *************** function _OSCILLATOR_Initialize *****************
 12104 ;; Defined at:
 12105 ;;		line 61 in file "mcc_generated_files/mcc.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, status,2
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used: 1
 12125 ;; Hardware stack levels required when called: 4
 12126 ;; This function calls:
 12127 ;;		Nothing
 12128 ;; This function is called by:
 12129 ;;		_SYSTEM_Initialize
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133     1780                     _OSCILLATOR_Initialize:	
 12134                           ;psect for function _OSCILLATOR_Initialize
 12135                           
 12136     1780                     l8883:	
 12137                           ;incstack = 0
 12138                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12139                           
 12140                           
 12141                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 12142     1780  3060               	movlw	96
 12143     1781  0151               	movlb	17	; select bank17
 12144     1782  008D               	movwf	13	;volatile
 12145     1783                     l8885:
 12146                           
 12147                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 12148     1783  018F               	clrf	15	;volatile
 12149     1784                     l8887:
 12150                           
 12151                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 12152     1784  0191               	clrf	17	;volatile
 12153                           
 12154                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 12155     1785  3006               	movlw	6
 12156     1786  0093               	movwf	19	;volatile
 12157     1787                     l8889:
 12158                           
 12159                           ;mcc_generated_files/mcc.c: 72:     OSCSTAT = 0x00;
 12160     1787  0190               	clrf	16	;volatile
 12161     1788                     l8891:
 12162                           
 12163                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 12164     1788  0192               	clrf	18	;volatile
 12165     1789                     l1352:
 12166     1789  0008               	return
 12167     178A                     __end_of_OSCILLATOR_Initialize:
 12168                           
 12169                           	psect	text8
 12170     1759                     __ptext8:	
 12171 ;; *************** function _I2C1_Initialize *****************
 12172 ;; Defined at:
 12173 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;		None
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;		None
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg, status,2
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12191 ;;Total ram usage:        0 bytes
 12192 ;; Hardware stack levels used: 1
 12193 ;; Hardware stack levels required when called: 4
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_SYSTEM_Initialize
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201     1759                     _I2C1_Initialize:	
 12202                           ;psect for function _I2C1_Initialize
 12203                           
 12204     1759                     l8809:	
 12205                           ;incstack = 0
 12206                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12207                           
 12208                           
 12209                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 12210     1759  0143               	movlb	3	; select bank3
 12211     175A  018F               	clrf	15	;volatile
 12212     175B                     l8811:
 12213                           
 12214                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 12215     175B  3008               	movlw	8
 12216     175C  0090               	movwf	16	;volatile
 12217     175D                     l8813:
 12218                           
 12219                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 12220     175D  0191               	clrf	17	;volatile
 12221                           
 12222                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 12223     175E  304F               	movlw	79
 12224     175F  008D               	movwf	13	;volatile
 12225     1760                     l8815:
 12226                           
 12227                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 12228     1760  1290               	bcf	16,5	;volatile
 12229     1761                     l1739:
 12230     1761  0008               	return
 12231     1762                     __end_of_I2C1_Initialize:
 12232                           
 12233                           	psect	text9
 12234     0FC2                     __ptext9:	
 12235 ;; *************** function _EUSART2_Initialize *****************
 12236 ;; Defined at:
 12237 ;;		line 88 in file "mcc_generated_files/eusart2.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;		None
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, pclath, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12255 ;;Total ram usage:        0 bytes
 12256 ;; Hardware stack levels used: 1
 12257 ;; Hardware stack levels required when called: 5
 12258 ;; This function calls:
 12259 ;;		_EUSART2_SetErrorHandler
 12260 ;;		_EUSART2_SetFramingErrorHandler
 12261 ;;		_EUSART2_SetOverrunErrorHandler
 12262 ;;		_EUSART2_SetRxInterruptHandler
 12263 ;;		_EUSART2_SetTxInterruptHandler
 12264 ;; This function is called by:
 12265 ;;		_SYSTEM_Initialize
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269     0FC2                     _EUSART2_Initialize:	
 12270                           ;psect for function _EUSART2_Initialize
 12271                           
 12272     0FC2                     l8735:	
 12273                           ;incstack = 0
 12274                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12275                           
 12276                           
 12277                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
 12278     0FC2  014E               	movlb	14	; select bank14
 12279     0FC3  1399               	bcf	25,7	;volatile
 12280     0FC4                     l8737:
 12281                           
 12282                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
 12283     0FC4  300E               	movlw	low _EUSART2_Receive_ISR
 12284     0FC5  00F1               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler
 12285     0FC6  300F               	movlw	high _EUSART2_Receive_ISR
 12286     0FC7  00F2               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1
 12287     0FC8  3197  2700  318F   	fcall	_EUSART2_SetRxInterruptHandler
 12288     0FCB                     l8739:
 12289                           
 12290                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
 12291     0FCB  014E               	movlb	14	; select bank14
 12292     0FCC  1319               	bcf	25,6	;volatile
 12293                           
 12294                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
 12295     0FCD  30DA               	movlw	low _EUSART2_Transmit_ISR
 12296     0FCE  00F1               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler
 12297     0FCF  300A               	movlw	high _EUSART2_Transmit_ISR
 12298     0FD0  00F2               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1
 12299     0FD1  3197  2706  318F   	fcall	_EUSART2_SetTxInterruptHandler
 12300     0FD4                     l8741:
 12301                           
 12302                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
 12303     0FD4  3008               	movlw	8
 12304     0FD5  0154               	movlb	20	; select bank20
 12305     0FD6  009F               	movwf	31	;volatile
 12306     0FD7                     l8743:
 12307                           
 12308                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
 12309     0FD7  3090               	movlw	144
 12310     0FD8  009D               	movwf	29	;volatile
 12311     0FD9                     l8745:
 12312                           
 12313                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
 12314     0FD9  3024               	movlw	36
 12315     0FDA  009E               	movwf	30	;volatile
 12316     0FDB                     l8747:
 12317                           
 12318                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
 12319     0FDB  3040               	movlw	64
 12320     0FDC  009B               	movwf	27	;volatile
 12321     0FDD                     l8749:
 12322                           
 12323                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
 12324     0FDD  3003               	movlw	3
 12325     0FDE  009C               	movwf	28	;volatile
 12326     0FDF                     l8751:
 12327                           
 12328                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
 12329     0FDF  302D               	movlw	low _EUSART2_DefaultFramingErrorHandler
 12330     0FE0  00F1               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
 12331     0FE1  3016               	movlw	high _EUSART2_DefaultFramingErrorHandler
 12332     0FE2  00F2               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
 12333     0FE3  3196  26F4  318F   	fcall	_EUSART2_SetFramingErrorHandler
 12334     0FE6                     l8753:
 12335                           
 12336                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
 12337     0FE6  305D               	movlw	low _EUSART2_DefaultOverrunErrorHandler
 12338     0FE7  00F1               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
 12339     0FE8  3016               	movlw	high _EUSART2_DefaultOverrunErrorHandler
 12340     0FE9  00F2               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
 12341     0FEA  3196  26FA  318F   	fcall	_EUSART2_SetOverrunErrorHandler
 12342     0FED                     l8755:
 12343                           
 12344                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
 12345     0FED  3059               	movlw	low _EUSART2_DefaultErrorHandler
 12346     0FEE  00F1               	movwf	EUSART2_SetErrorHandler@interruptHandler
 12347     0FEF  3016               	movlw	high _EUSART2_DefaultErrorHandler
 12348     0FF0  00F2               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
 12349     0FF1  3196  26EE  318F   	fcall	_EUSART2_SetErrorHandler
 12350     0FF4                     l8757:
 12351                           
 12352                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
 12353     0FF4  0140               	movlb	0	; select bank0
 12354     0FF5  01DD               	clrf	_eusart2RxLastError	;volatile
 12355     0FF6                     l8759:
 12356                           
 12357                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
 12358     0FF6  01E2               	clrf	_eusart2TxHead	;volatile
 12359     0FF7                     l8761:
 12360                           
 12361                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
 12362     0FF7  01E1               	clrf	_eusart2TxTail	;volatile
 12363     0FF8                     l8763:
 12364                           
 12365                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
 12366     0FF8  3008               	movlw	8
 12367     0FF9  00E0               	movwf	_eusart2TxBufferRemaining	;volatile
 12368                           
 12369                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
 12370     0FFA  01FC               	clrf	_eusart2RxHead	;volatile
 12371                           
 12372                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
 12373     0FFB  01DF               	clrf	_eusart2RxTail	;volatile
 12374                           
 12375                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
 12376     0FFC  01DE               	clrf	_eusart2RxCount	;volatile
 12377     0FFD                     l8765:
 12378                           
 12379                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
 12380     0FFD  014E               	movlb	14	; select bank14
 12381     0FFE  1799               	bsf	25,7	;volatile
 12382     0FFF                     l1048:
 12383     0FFF  0008               	return
 12384     1000                     __end_of_EUSART2_Initialize:
 12385                           
 12386                           	psect	text10
 12387     1706                     __ptext10:	
 12388 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 12389 ;; Defined at:
 12390 ;;		line 276 in file "mcc_generated_files/eusart2.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12393 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 12394 ;; Auto vars:     Size  Location     Type
 12395 ;;		None
 12396 ;; Return value:  Size  Location     Type
 12397 ;;                  1    wreg      void 
 12398 ;; Registers used:
 12399 ;;		wreg
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/0
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;Total ram usage:        2 bytes
 12410 ;; Hardware stack levels used: 1
 12411 ;; Hardware stack levels required when called: 4
 12412 ;; This function calls:
 12413 ;;		Nothing
 12414 ;; This function is called by:
 12415 ;;		_EUSART2_Initialize
 12416 ;; This function uses a non-reentrant model
 12417 ;;
 12418                           
 12419     1706                     _EUSART2_SetTxInterruptHandler:	
 12420                           ;psect for function _EUSART2_SetTxInterruptHandler
 12421                           
 12422     1706                     l8605:	
 12423                           ;incstack = 0
 12424                           ; Regs used in _EUSART2_SetTxInterruptHandler: [wreg]
 12425                           
 12426                           
 12427                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12428     1706  0872               	movf	EUSART2_SetTxInterruptHandler@interruptHandler+1,w
 12429     1707  0141               	movlb	1	; select bank1
 12430     1708  00EE               	movwf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128)
 12431     1709  0871               	movf	EUSART2_SetTxInterruptHandler@interruptHandler,w
 12432     170A  00ED               	movwf	_EUSART2_TxDefaultInterruptHandler^(0+128)
 12433     170B                     l1114:
 12434     170B  0008               	return
 12435     170C                     __end_of_EUSART2_SetTxInterruptHandler:
 12436                           
 12437                           	psect	text11
 12438     1700                     __ptext11:	
 12439 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 12440 ;; Defined at:
 12441 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12444 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;		None
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12460 ;;Total ram usage:        2 bytes
 12461 ;; Hardware stack levels used: 1
 12462 ;; Hardware stack levels required when called: 4
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_EUSART2_Initialize
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470     1700                     _EUSART2_SetRxInterruptHandler:	
 12471                           ;psect for function _EUSART2_SetRxInterruptHandler
 12472                           
 12473     1700                     l8603:	
 12474                           ;incstack = 0
 12475                           ; Regs used in _EUSART2_SetRxInterruptHandler: [wreg]
 12476                           
 12477                           
 12478                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12479     1700  0872               	movf	EUSART2_SetRxInterruptHandler@interruptHandler+1,w
 12480     1701  0142               	movlb	2	; select bank2
 12481     1702  00D5               	movwf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256)
 12482     1703  0871               	movf	EUSART2_SetRxInterruptHandler@interruptHandler,w
 12483     1704  00D4               	movwf	_EUSART2_RxDefaultInterruptHandler^(0+256)
 12484     1705                     l1117:
 12485     1705  0008               	return
 12486     1706                     __end_of_EUSART2_SetRxInterruptHandler:
 12487                           
 12488                           	psect	text12
 12489     16FA                     __ptext12:	
 12490 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 12491 ;; Defined at:
 12492 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12495 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;		None
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  1    wreg      void 
 12500 ;; Registers used:
 12501 ;;		wreg
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12511 ;;Total ram usage:        2 bytes
 12512 ;; Hardware stack levels used: 1
 12513 ;; Hardware stack levels required when called: 4
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_EUSART2_Initialize
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521     16FA                     _EUSART2_SetOverrunErrorHandler:	
 12522                           ;psect for function _EUSART2_SetOverrunErrorHandler
 12523                           
 12524     16FA                     l8609:	
 12525                           ;incstack = 0
 12526                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
 12527                           
 12528                           
 12529                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 12530     16FA  0872               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
 12531     16FB  0142               	movlb	2	; select bank2
 12532     16FC  00D1               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+256)
 12533     16FD  0871               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
 12534     16FE  00D0               	movwf	_EUSART2_OverrunErrorHandler^(0+256)
 12535     16FF                     l1108:
 12536     16FF  0008               	return
 12537     1700                     __end_of_EUSART2_SetOverrunErrorHandler:
 12538                           
 12539                           	psect	text13
 12540     16F4                     __ptext13:	
 12541 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 12542 ;; Defined at:
 12543 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12546 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;		None
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  1    wreg      void 
 12551 ;; Registers used:
 12552 ;;		wreg
 12553 ;; Tracked objects:
 12554 ;;		On entry : 0/0
 12555 ;;		On exit  : 0/0
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12562 ;;Total ram usage:        2 bytes
 12563 ;; Hardware stack levels used: 1
 12564 ;; Hardware stack levels required when called: 4
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_EUSART2_Initialize
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572     16F4                     _EUSART2_SetFramingErrorHandler:	
 12573                           ;psect for function _EUSART2_SetFramingErrorHandler
 12574                           
 12575     16F4                     l8607:	
 12576                           ;incstack = 0
 12577                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
 12578                           
 12579                           
 12580                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 12581     16F4  0872               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
 12582     16F5  0142               	movlb	2	; select bank2
 12583     16F6  00D3               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+256)
 12584     16F7  0871               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
 12585     16F8  00D2               	movwf	_EUSART2_FramingErrorHandler^(0+256)
 12586     16F9                     l1105:
 12587     16F9  0008               	return
 12588     16FA                     __end_of_EUSART2_SetFramingErrorHandler:
 12589                           
 12590                           	psect	text14
 12591     16EE                     __ptext14:	
 12592 ;; *************** function _EUSART2_SetErrorHandler *****************
 12593 ;; Defined at:
 12594 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 12595 ;; Parameters:    Size  Location     Type
 12596 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12597 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 12598 ;; Auto vars:     Size  Location     Type
 12599 ;;		None
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  1    wreg      void 
 12602 ;; Registers used:
 12603 ;;		wreg
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/0
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12613 ;;Total ram usage:        2 bytes
 12614 ;; Hardware stack levels used: 1
 12615 ;; Hardware stack levels required when called: 4
 12616 ;; This function calls:
 12617 ;;		Nothing
 12618 ;; This function is called by:
 12619 ;;		_EUSART2_Initialize
 12620 ;; This function uses a non-reentrant model
 12621 ;;
 12622                           
 12623     16EE                     _EUSART2_SetErrorHandler:	
 12624                           ;psect for function _EUSART2_SetErrorHandler
 12625                           
 12626     16EE                     l8611:	
 12627                           ;incstack = 0
 12628                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
 12629                           
 12630                           
 12631                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 12632     16EE  0872               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
 12633     16EF  0142               	movlb	2	; select bank2
 12634     16F0  00CF               	movwf	(_EUSART2_ErrorHandler+1)^(0+256)
 12635     16F1  0871               	movf	EUSART2_SetErrorHandler@interruptHandler,w
 12636     16F2  00CE               	movwf	_EUSART2_ErrorHandler^(0+256)
 12637     16F3                     l1111:
 12638     16F3  0008               	return
 12639     16F4                     __end_of_EUSART2_SetErrorHandler:
 12640                           
 12641                           	psect	text15
 12642     0F84                     __ptext15:	
 12643 ;; *************** function _EUSART1_Initialize *****************
 12644 ;; Defined at:
 12645 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      void 
 12652 ;; Registers used:
 12653 ;;		wreg, status,2, status,0, pclath, cstack
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12663 ;;Total ram usage:        0 bytes
 12664 ;; Hardware stack levels used: 1
 12665 ;; Hardware stack levels required when called: 5
 12666 ;; This function calls:
 12667 ;;		_EUSART1_SetErrorHandler
 12668 ;;		_EUSART1_SetFramingErrorHandler
 12669 ;;		_EUSART1_SetOverrunErrorHandler
 12670 ;;		_EUSART1_SetRxInterruptHandler
 12671 ;;		_EUSART1_SetTxInterruptHandler
 12672 ;; This function is called by:
 12673 ;;		_SYSTEM_Initialize
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677     0F84                     _EUSART1_Initialize:	
 12678                           ;psect for function _EUSART1_Initialize
 12679                           
 12680     0F84                     l8771:	
 12681                           ;incstack = 0
 12682                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12683                           
 12684                           
 12685                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 12686     0F84  014E               	movlb	14	; select bank14
 12687     0F85  1299               	bcf	25,5	;volatile
 12688     0F86                     l8773:
 12689                           
 12690                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12691     0F86  3047               	movlw	low _EUSART1_Receive_ISR
 12692     0F87  00F1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12693     0F88  300F               	movlw	high _EUSART1_Receive_ISR
 12694     0F89  00F2               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12695     0F8A  3196  26E2  318F   	fcall	_EUSART1_SetRxInterruptHandler
 12696     0F8D                     l8775:
 12697                           
 12698                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 12699     0F8D  014E               	movlb	14	; select bank14
 12700     0F8E  1219               	bcf	25,4	;volatile
 12701                           
 12702                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 12703     0F8F  30FC               	movlw	low _EUSART1_Transmit_ISR
 12704     0F90  00F1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 12705     0F91  300A               	movlw	high _EUSART1_Transmit_ISR
 12706     0F92  00F2               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 12707     0F93  3196  26E8  318F   	fcall	_EUSART1_SetTxInterruptHandler
 12708     0F96                     l8777:
 12709                           
 12710                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 12711     0F96  3008               	movlw	8
 12712     0F97  0142               	movlb	2	; select bank2
 12713     0F98  009F               	movwf	31	;volatile
 12714     0F99                     l8779:
 12715                           
 12716                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 12717     0F99  3090               	movlw	144
 12718     0F9A  009D               	movwf	29	;volatile
 12719     0F9B                     l8781:
 12720                           
 12721                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 12722     0F9B  3024               	movlw	36
 12723     0F9C  009E               	movwf	30	;volatile
 12724     0F9D                     l8783:
 12725                           
 12726                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
 12727     0F9D  3040               	movlw	64
 12728     0F9E  009B               	movwf	27	;volatile
 12729     0F9F                     l8785:
 12730                           
 12731                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
 12732     0F9F  3003               	movlw	3
 12733     0FA0  009C               	movwf	28	;volatile
 12734     0FA1                     l8787:
 12735                           
 12736                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12737     0FA1  302C               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12738     0FA2  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12739     0FA3  3016               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12740     0FA4  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12741     0FA5  3196  26D6  318F   	fcall	_EUSART1_SetFramingErrorHandler
 12742     0FA8                     l8789:
 12743                           
 12744                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12745     0FA8  3055               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12746     0FA9  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12747     0FAA  3016               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12748     0FAB  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12749     0FAC  3196  26DC  318F   	fcall	_EUSART1_SetOverrunErrorHandler
 12750     0FAF                     l8791:
 12751                           
 12752                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12753     0FAF  3051               	movlw	low _EUSART1_DefaultErrorHandler
 12754     0FB0  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12755     0FB1  3016               	movlw	high _EUSART1_DefaultErrorHandler
 12756     0FB2  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12757     0FB3  3196  26D0  318F   	fcall	_EUSART1_SetErrorHandler
 12758     0FB6                     l8793:
 12759                           
 12760                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 12761     0FB6  0140               	movlb	0	; select bank0
 12762     0FB7  01D6               	clrf	_eusart1RxLastError	;volatile
 12763     0FB8                     l8795:
 12764                           
 12765                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 12766     0FB8  01DC               	clrf	_eusart1TxHead	;volatile
 12767     0FB9                     l8797:
 12768                           
 12769                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 12770     0FB9  01DB               	clrf	_eusart1TxTail	;volatile
 12771     0FBA                     l8799:
 12772                           
 12773                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 12774     0FBA  3008               	movlw	8
 12775     0FBB  00DA               	movwf	_eusart1TxBufferRemaining	;volatile
 12776                           
 12777                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 12778     0FBC  01D9               	clrf	_eusart1RxHead	;volatile
 12779                           
 12780                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 12781     0FBD  01D8               	clrf	_eusart1RxTail	;volatile
 12782                           
 12783                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 12784     0FBE  01D7               	clrf	_eusart1RxCount	;volatile
 12785     0FBF                     l8801:
 12786                           
 12787                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 12788     0FBF  014E               	movlb	14	; select bank14
 12789     0FC0  1699               	bsf	25,5	;volatile
 12790     0FC1                     l1192:
 12791     0FC1  0008               	return
 12792     0FC2                     __end_of_EUSART1_Initialize:
 12793                           
 12794                           	psect	text16
 12795     16E8                     __ptext16:	
 12796 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 12797 ;; Defined at:
 12798 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12801 ;;		 -> EUSART2_Transmit_ISR(1), EUSART1_Transmit_ISR(1), 
 12802 ;; Auto vars:     Size  Location     Type
 12803 ;;		None
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  1    wreg      void 
 12806 ;; Registers used:
 12807 ;;		wreg
 12808 ;; Tracked objects:
 12809 ;;		On entry : 0/0
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12816 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12817 ;;Total ram usage:        2 bytes
 12818 ;; Hardware stack levels used: 1
 12819 ;; Hardware stack levels required when called: 4
 12820 ;; This function calls:
 12821 ;;		Nothing
 12822 ;; This function is called by:
 12823 ;;		_EUSART1_Initialize
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827     16E8                     _EUSART1_SetTxInterruptHandler:	
 12828                           ;psect for function _EUSART1_SetTxInterruptHandler
 12829                           
 12830     16E8                     l8625:	
 12831                           ;incstack = 0
 12832                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 12833                           
 12834                           
 12835                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12836     16E8  0872               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 12837     16E9  0142               	movlb	2	; select bank2
 12838     16EA  00CD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
 12839     16EB  0871               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 12840     16EC  00CC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
 12841     16ED                     l1264:
 12842     16ED  0008               	return
 12843     16EE                     __end_of_EUSART1_SetTxInterruptHandler:
 12844                           
 12845                           	psect	text17
 12846     16E2                     __ptext17:	
 12847 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 12848 ;; Defined at:
 12849 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12852 ;;		 -> EUSART2_Receive_ISR(1), EUSART1_Receive_ISR(1), 
 12853 ;; Auto vars:     Size  Location     Type
 12854 ;;		None
 12855 ;; Return value:  Size  Location     Type
 12856 ;;                  1    wreg      void 
 12857 ;; Registers used:
 12858 ;;		wreg
 12859 ;; Tracked objects:
 12860 ;;		On entry : 0/0
 12861 ;;		On exit  : 0/0
 12862 ;;		Unchanged: 0/0
 12863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12868 ;;Total ram usage:        2 bytes
 12869 ;; Hardware stack levels used: 1
 12870 ;; Hardware stack levels required when called: 4
 12871 ;; This function calls:
 12872 ;;		Nothing
 12873 ;; This function is called by:
 12874 ;;		_EUSART1_Initialize
 12875 ;; This function uses a non-reentrant model
 12876 ;;
 12877                           
 12878     16E2                     _EUSART1_SetRxInterruptHandler:	
 12879                           ;psect for function _EUSART1_SetRxInterruptHandler
 12880                           
 12881     16E2                     l8623:	
 12882                           ;incstack = 0
 12883                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 12884                           
 12885                           
 12886                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12887     16E2  0872               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 12888     16E3  0142               	movlb	2	; select bank2
 12889     16E4  00CB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 12890     16E5  0871               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 12891     16E6  00CA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 12892     16E7                     l1267:
 12893     16E7  0008               	return
 12894     16E8                     __end_of_EUSART1_SetRxInterruptHandler:
 12895                           
 12896                           	psect	text18
 12897     16DC                     __ptext18:	
 12898 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12899 ;; Defined at:
 12900 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12903 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12919 ;;Total ram usage:        2 bytes
 12920 ;; Hardware stack levels used: 1
 12921 ;; Hardware stack levels required when called: 4
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_EUSART1_Initialize
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929     16DC                     _EUSART1_SetOverrunErrorHandler:	
 12930                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12931                           
 12932     16DC                     l8629:	
 12933                           ;incstack = 0
 12934                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12935                           
 12936                           
 12937                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 12938     16DC  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12939     16DD  0142               	movlb	2	; select bank2
 12940     16DE  00C7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12941     16DF  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12942     16E0  00C6               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12943     16E1                     l1258:
 12944     16E1  0008               	return
 12945     16E2                     __end_of_EUSART1_SetOverrunErrorHandler:
 12946                           
 12947                           	psect	text19
 12948     16D6                     __ptext19:	
 12949 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12950 ;; Defined at:
 12951 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 12954 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;		None
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  1    wreg      void 
 12959 ;; Registers used:
 12960 ;;		wreg
 12961 ;; Tracked objects:
 12962 ;;		On entry : 0/0
 12963 ;;		On exit  : 0/0
 12964 ;;		Unchanged: 0/0
 12965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12970 ;;Total ram usage:        2 bytes
 12971 ;; Hardware stack levels used: 1
 12972 ;; Hardware stack levels required when called: 4
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_EUSART1_Initialize
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980     16D6                     _EUSART1_SetFramingErrorHandler:	
 12981                           ;psect for function _EUSART1_SetFramingErrorHandler
 12982                           
 12983     16D6                     l8627:	
 12984                           ;incstack = 0
 12985                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12986                           
 12987                           
 12988                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 12989     16D6  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12990     16D7  0142               	movlb	2	; select bank2
 12991     16D8  00C9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12992     16D9  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12993     16DA  00C8               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12994     16DB                     l1255:
 12995     16DB  0008               	return
 12996     16DC                     __end_of_EUSART1_SetFramingErrorHandler:
 12997                           
 12998                           	psect	text20
 12999     16D0                     __ptext20:	
 13000 ;; *************** function _EUSART1_SetErrorHandler *****************
 13001 ;; Defined at:
 13002 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 13003 ;; Parameters:    Size  Location     Type
 13004 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 13005 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;		None
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  1    wreg      void 
 13010 ;; Registers used:
 13011 ;;		wreg
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13021 ;;Total ram usage:        2 bytes
 13022 ;; Hardware stack levels used: 1
 13023 ;; Hardware stack levels required when called: 4
 13024 ;; This function calls:
 13025 ;;		Nothing
 13026 ;; This function is called by:
 13027 ;;		_EUSART1_Initialize
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031     16D0                     _EUSART1_SetErrorHandler:	
 13032                           ;psect for function _EUSART1_SetErrorHandler
 13033                           
 13034     16D0                     l8631:	
 13035                           ;incstack = 0
 13036                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13037                           
 13038                           
 13039                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 13040     16D0  0872               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13041     16D1  0142               	movlb	2	; select bank2
 13042     16D2  00C5               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 13043     16D3  0871               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13044     16D4  00C4               	movwf	_EUSART1_ErrorHandler^(0+256)
 13045     16D5                     l1261:
 13046     16D5  0008               	return
 13047     16D6                     __end_of_EUSART1_SetErrorHandler:
 13048                           
 13049                           	psect	text21
 13050     09E4                     __ptext21:	
 13051 ;; *************** function _RN487X_SetAsyncMessageHandler *****************
 13052 ;; Defined at:
 13053 ;;		line 328 in file "mcc_generated_files/rn487x/rn487x.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  pBuffer         2    1[COMMON] PTR unsigned char 
 13056 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), 
 13057 ;;  len             1    3[COMMON] unsigned char 
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;		None
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      _Bool 
 13062 ;; Registers used:
 13063 ;;		wreg, status,2, status,0
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13072 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13073 ;;Total ram usage:        3 bytes
 13074 ;; Hardware stack levels used: 1
 13075 ;; Hardware stack levels required when called: 4
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_main
 13080 ;;		_RN487X_Example_Initialized
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084     09E4                     _RN487X_SetAsyncMessageHandler:	
 13085                           ;psect for function _RN487X_SetAsyncMessageHandler
 13086                           
 13087     09E4                     l9049:	
 13088                           ;incstack = 0
 13089                           ; Regs used in _RN487X_SetAsyncMessageHandler: [wreg+status,2+status,0]
 13090                           
 13091                           
 13092                           ;mcc_generated_files/rn487x/rn487x.c: 328: _Bool RN487X_SetAsyncMessageHandler(char* pBu
      +                          ffer, uint8_t len);mcc_generated_files/rn487x/rn487x.c: 329: {;mcc_generated_files/rn487
      +                          x/rn487x.c: 330:     if ((pBuffer != ((void*)0)) && (len > 1))
 13093     09E4  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 13094     09E5  0472               	iorwf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 13095     09E6  1903               	btfsc	3,2
 13096     09E7  29E9               	goto	u5051
 13097     09E8  29EA               	goto	u5050
 13098     09E9                     u5051:
 13099     09E9  29FA               	goto	l9063
 13100     09EA                     u5050:
 13101     09EA                     l9051:
 13102     09EA  3002               	movlw	2
 13103     09EB  0273               	subwf	RN487X_SetAsyncMessageHandler@len,w
 13104     09EC  1C03               	skipc
 13105     09ED  29EF               	goto	u5061
 13106     09EE  29F0               	goto	u5060
 13107     09EF                     u5061:
 13108     09EF  29FA               	goto	l9063
 13109     09F0                     u5060:
 13110     09F0                     l9053:
 13111                           
 13112                           ;mcc_generated_files/rn487x/rn487x.c: 331:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          2:       asyncBuffer = pBuffer;
 13113     09F0  0872               	movf	RN487X_SetAsyncMessageHandler@pBuffer+1,w
 13114     09F1  0140               	movlb	0	; select bank0
 13115     09F2  00CC               	movwf	_asyncBuffer+1
 13116     09F3  0871               	movf	RN487X_SetAsyncMessageHandler@pBuffer,w
 13117     09F4  00CB               	movwf	_asyncBuffer
 13118     09F5                     l9055:
 13119                           
 13120                           ;mcc_generated_files/rn487x/rn487x.c: 333:       asyncBufferSize = len - 1;
 13121     09F5  0873               	movf	RN487X_SetAsyncMessageHandler@len,w
 13122     09F6  3EFF               	addlw	255
 13123     09F7  00E6               	movwf	_asyncBufferSize
 13124     09F8                     l9057:
 13125                           
 13126                           ;mcc_generated_files/rn487x/rn487x.c: 334:       return 1;
 13127     09F8  3001               	movlw	1
 13128     09F9  29FB               	goto	l949
 13129     09FA                     l9063:
 13130                           
 13131                           ;mcc_generated_files/rn487x/rn487x.c: 337:     {;mcc_generated_files/rn487x/rn487x.c: 33
      +                          8:         return 0;
 13132     09FA  3000               	movlw	0
 13133     09FB                     l949:
 13134     09FB  0008               	return
 13135     09FC                     __end_of_RN487X_SetAsyncMessageHandler:
 13136                           
 13137                           	psect	text22
 13138     0800                     __ptext22:	
 13139 ;; *************** function _RN487X_Read *****************
 13140 ;; Defined at:
 13141 ;;		line 356 in file "mcc_generated_files/rn487x/rn487x.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;		None
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      unsigned char 
 13148 ;; Registers used:
 13149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13159 ;;Total ram usage:        0 bytes
 13160 ;; Hardware stack levels used: 1
 13161 ;; Hardware stack levels required when called: 9
 13162 ;; This function calls:
 13163 ;;		_RN487X_DataReady
 13164 ;; This function is called by:
 13165 ;;		_main
 13166 ;;		_RN487X_Example_TransparentUart
 13167 ;; This function uses a non-reentrant model
 13168 ;;
 13169                           
 13170     0800                     _RN487X_Read:	
 13171                           ;psect for function _RN487X_Read
 13172                           
 13173     0800                     l9071:	
 13174                           ;incstack = 0
 13175                           ; Regs used in _RN487X_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13176                           
 13177     0800                     l9073:	
 13178                           ;mcc_generated_files/rn487x/rn487x.c: 358:     while(RN487X_DataReady() == 0);
 13179                           
 13180     0800  318A  227F  3188   	fcall	_RN487X_DataReady
 13181     0803  3A00               	xorlw	0
 13182     0804  1903               	skipnz
 13183     0805  2807               	goto	u5071
 13184     0806  2808               	goto	u5070
 13185     0807                     u5071:
 13186     0807  2800               	goto	l9073
 13187     0808                     u5070:
 13188     0808                     l9075:
 13189                           
 13190                           ;mcc_generated_files/rn487x/rn487x.c: 359:     dataReady = 0;
 13191     0808  0140               	movlb	0	; select bank0
 13192     0809  01E4               	clrf	_dataReady
 13193     080A                     l9077:
 13194                           
 13195                           ;mcc_generated_files/rn487x/rn487x.c: 360:     return peek;
 13196     080A  0865               	movf	_peek,w
 13197     080B                     l961:
 13198     080B  0008               	return
 13199     080C                     __end_of_RN487X_Read:
 13200                           
 13201                           	psect	text23
 13202     0A7F                     __ptext23:	
 13203 ;; *************** function _RN487X_DataReady *****************
 13204 ;; Defined at:
 13205 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;		None
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      _Bool 
 13212 ;; Registers used:
 13213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;Total ram usage:        0 bytes
 13224 ;; Hardware stack levels used: 1
 13225 ;; Hardware stack levels required when called: 8
 13226 ;; This function calls:
 13227 ;;		_RN487X_FilterData
 13228 ;;		_RN487X_is_rx_ready
 13229 ;; This function is called by:
 13230 ;;		_RN487X_Read
 13231 ;;		_main
 13232 ;;		_RN487X_Example_TransparentUart
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236     0A7F                     _RN487X_DataReady:	
 13237                           ;psect for function _RN487X_DataReady
 13238                           
 13239     0A7F                     l8713:	
 13240                           ;incstack = 0
 13241                           ; Regs used in _RN487X_DataReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13242                           
 13243                           
 13244                           ;mcc_generated_files/rn487x/rn487x.c: 344:     if (dataReady)
 13245     0A7F  0140               	movlb	0	; select bank0
 13246     0A80  0864               	movf	_dataReady,w
 13247     0A81  1903               	btfsc	3,2
 13248     0A82  2A84               	goto	u4871
 13249     0A83  2A85               	goto	u4870
 13250     0A84                     u4871:
 13251     0A84  2A87               	goto	l8719
 13252     0A85                     u4870:
 13253     0A85                     l8715:
 13254                           
 13255                           ;mcc_generated_files/rn487x/rn487x.c: 345:     {;mcc_generated_files/rn487x/rn487x.c: 34
      +                          6:         return 1;
 13256     0A85  3001               	movlw	1
 13257     0A86  2A9A               	goto	l954
 13258     0A87                     l8719:
 13259                           
 13260                           ;mcc_generated_files/rn487x/rn487x.c: 349:     if (RN487X.DataReady())
 13261     0A87  306E               	movlw	low ((_RN487X+6)| (0+32768))
 13262     0A88  0084               	movwf	4
 13263     0A89  3090               	movlw	high ((_RN487X+6)| (0+32768))
 13264     0A8A  0085               	movwf	5
 13265     0A8B  3F01               	moviw [1]fsr0
 13266     0A8C  008A               	movwf	10
 13267     0A8D  3F00               	moviw [0]fsr0
 13268     0A8E  000A               	callw
 13269     0A8F  318A               	pagesel	$
 13270     0A90  3A00               	xorlw	0
 13271     0A91  1903               	skipnz
 13272     0A92  2A94               	goto	u4881
 13273     0A93  2A95               	goto	u4880
 13274     0A94                     u4881:
 13275     0A94  2A99               	goto	l8725
 13276     0A95                     u4880:
 13277     0A95                     l8721:
 13278                           
 13279                           ;mcc_generated_files/rn487x/rn487x.c: 350:     {;mcc_generated_files/rn487x/rn487x.c: 35
      +                          1:         return RN487X_FilterData();
 13280     0A95  3184  2402  318A   	fcall	_RN487X_FilterData
 13281     0A98  2A9A               	goto	l954
 13282     0A99                     l8725:
 13283                           
 13284                           ;mcc_generated_files/rn487x/rn487x.c: 353:     return 0;
 13285     0A99  3000               	movlw	0
 13286     0A9A                     l954:
 13287     0A9A  0008               	return
 13288     0A9B                     __end_of_RN487X_DataReady:
 13289                           
 13290                           	psect	text24
 13291     0402                     __ptext24:	
 13292 ;; *************** function _RN487X_FilterData *****************
 13293 ;; Defined at:
 13294 ;;		line 363 in file "mcc_generated_files/rn487x/rn487x.c"
 13295 ;; Parameters:    Size  Location     Type
 13296 ;;		None
 13297 ;; Auto vars:     Size  Location     Type
 13298 ;;  readChar        1   36[BANK0 ] unsigned char 
 13299 ;; Return value:  Size  Location     Type
 13300 ;;                  1    wreg      _Bool 
 13301 ;; Registers used:
 13302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13310 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13311 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13312 ;;Total ram usage:        5 bytes
 13313 ;; Hardware stack levels used: 1
 13314 ;; Hardware stack levels required when called: 7
 13315 ;; This function calls:
 13316 ;;		_RN487X_MessageHandler
 13317 ;;		_RN487X_Read@rn487x_interface$F1335
 13318 ;; This function is called by:
 13319 ;;		_RN487X_DataReady
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323     0402                     _RN487X_FilterData:	
 13324                           ;psect for function _RN487X_FilterData
 13325                           
 13326     0402                     l8575:	
 13327                           ;incstack = 0
 13328                           ; Regs used in _RN487X_FilterData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13329                           
 13330                           
 13331                           ;mcc_generated_files/rn487x/rn487x.c: 365:     static _Bool asyncBuffering = 0;;mcc_gene
      +                          rated_files/rn487x/rn487x.c: 367:     uint8_t readChar = RN487X.Read();
 13332     0402  306A               	movlw	low ((_RN487X+2)| (0+32768))
 13333     0403  0084               	movwf	4
 13334     0404  3090               	movlw	high ((_RN487X+2)| (0+32768))
 13335     0405  0085               	movwf	5
 13336     0406  3F01               	moviw [1]fsr0
 13337     0407  008A               	movwf	10
 13338     0408  3F00               	moviw [0]fsr0
 13339     0409  000A               	callw
 13340     040A  3184               	pagesel	$
 13341     040B  0140               	movlb	0	; select bank0
 13342     040C  00C4               	movwf	RN487X_FilterData@readChar
 13343     040D                     l8577:
 13344                           
 13345                           ;mcc_generated_files/rn487x/rn487x.c: 369:     if(asyncBuffering == 1)
 13346     040D  0363               	decf	RN487X_FilterData@asyncBuffering,w
 13347     040E  1D03               	btfss	3,2
 13348     040F  2C11               	goto	u4711
 13349     0410  2C12               	goto	u4710
 13350     0411                     u4711:
 13351     0411  2C52               	goto	l8593
 13352     0412                     u4710:
 13353     0412                     l8579:
 13354                           
 13355                           ;mcc_generated_files/rn487x/rn487x.c: 370:     {;mcc_generated_files/rn487x/rn487x.c: 37
      +                          1:         if(readChar == ('%'))
 13356     0412  3025               	movlw	37
 13357     0413  0644               	xorwf	RN487X_FilterData@readChar,w
 13358     0414  1D03               	btfss	3,2
 13359     0415  2C17               	goto	u4721
 13360     0416  2C18               	goto	u4720
 13361     0417                     u4721:
 13362     0417  2C2C               	goto	l8587
 13363     0418                     u4720:
 13364     0418                     l8581:
 13365                           
 13366                           ;mcc_generated_files/rn487x/rn487x.c: 372:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 373:             asyncBuffering = 0;
 13367     0418  01E3               	clrf	RN487X_FilterData@asyncBuffering
 13368     0419                     l8583:
 13369                           
 13370                           ;mcc_generated_files/rn487x/rn487x.c: 374:             *pHead = '\0';
 13371     0419  0849               	movf	_pHead,w
 13372     041A  0086               	movwf	6
 13373     041B  084A               	movf	_pHead+1,w
 13374     041C  0087               	movwf	7
 13375     041D  0181               	clrf	1
 13376     041E                     l8585:
 13377                           
 13378                           ;mcc_generated_files/rn487x/rn487x.c: 375:             RN487X.AsyncHandler(asyncBuffer);
 13379     041E  084C               	movf	_asyncBuffer+1,w
 13380     041F  00C2               	movwf	RN487X_MessageHandler@message+1
 13381     0420  084B               	movf	_asyncBuffer,w
 13382     0421  00C1               	movwf	RN487X_MessageHandler@message
 13383     0422  3078               	movlw	low ((_RN487X+16)| (0+32768))
 13384     0423  0084               	movwf	4
 13385     0424  3090               	movlw	high ((_RN487X+16)| (0+32768))
 13386     0425  0085               	movwf	5
 13387     0426  3F01               	moviw [1]fsr0
 13388     0427  008A               	movwf	10
 13389     0428  3F00               	moviw [0]fsr0
 13390     0429  000A               	callw
 13391     042A  3184               	pagesel	$
 13392                           
 13393                           ;mcc_generated_files/rn487x/rn487x.c: 376:         }
 13394     042B  2C63               	goto	l970
 13395     042C                     l8587:
 13396     042C  0866               	movf	_asyncBufferSize,w
 13397     042D  0142               	movlb	2	; select bank2
 13398     042E  00E7               	movwf	??_RN487X_FilterData^(0+256)
 13399     042F  01E8               	clrf	(??_RN487X_FilterData^(0+256)+1)
 13400     0430  0867               	movf	??_RN487X_FilterData^(0+256),w
 13401     0431  0140               	movlb	0	; select bank0
 13402     0432  074B               	addwf	_asyncBuffer,w
 13403     0433  0142               	movlb	2	; select bank2
 13404     0434  00E9               	movwf	(??_RN487X_FilterData+2)^(0+256)
 13405     0435  0868               	movf	(??_RN487X_FilterData+1)^(0+256),w
 13406     0436  0140               	movlb	0	; select bank0
 13407     0437  3D4C               	addwfc	_asyncBuffer+1,w
 13408     0438  0142               	movlb	2	; select bank2
 13409     0439  00EA               	movwf	(??_RN487X_FilterData+3)^(0+256)
 13410     043A  086A               	movf	(??_RN487X_FilterData+3)^(0+256),w
 13411     043B  0140               	movlb	0	; select bank0
 13412     043C  024A               	subwf	_pHead+1,w
 13413     043D  1D03               	skipz
 13414     043E  2C43               	goto	u4735
 13415     043F  0142               	movlb	2	; select bank2
 13416     0440  0869               	movf	(??_RN487X_FilterData+2)^(0+256),w
 13417     0441  0140               	movlb	0	; select bank0
 13418     0442  0249               	subwf	_pHead,w
 13419     0443                     u4735:
 13420     0443  1803               	skipnc
 13421     0444  2C46               	goto	u4731
 13422     0445  2C47               	goto	u4730
 13423     0446                     u4731:
 13424     0446  2C63               	goto	l970
 13425     0447                     u4730:
 13426     0447                     l8589:
 13427                           
 13428                           ;mcc_generated_files/rn487x/rn487x.c: 378:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 379:             *pHead++ = readChar;
 13429     0447  0849               	movf	_pHead,w
 13430     0448  0086               	movwf	6
 13431     0449  084A               	movf	_pHead+1,w
 13432     044A  0087               	movwf	7
 13433     044B  0844               	movf	RN487X_FilterData@readChar,w
 13434     044C  0081               	movwf	1
 13435     044D                     l8591:
 13436     044D  3001               	movlw	1
 13437     044E  07C9               	addwf	_pHead,f
 13438     044F  3000               	movlw	0
 13439     0450  3DCA               	addwfc	_pHead+1,f
 13440     0451  2C63               	goto	l970
 13441     0452                     l8593:
 13442                           
 13443                           ;mcc_generated_files/rn487x/rn487x.c: 383:     {;mcc_generated_files/rn487x/rn487x.c: 38
      +                          4:         if (readChar == ('%'))
 13444     0452  3025               	movlw	37
 13445     0453  0644               	xorwf	RN487X_FilterData@readChar,w
 13446     0454  1D03               	btfss	3,2
 13447     0455  2C57               	goto	u4741
 13448     0456  2C58               	goto	u4740
 13449     0457                     u4741:
 13450     0457  2C5F               	goto	l971
 13451     0458                     u4740:
 13452     0458                     l8595:
 13453                           
 13454                           ;mcc_generated_files/rn487x/rn487x.c: 385:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 386:             asyncBuffering = 1;
 13455     0458  01E3               	clrf	RN487X_FilterData@asyncBuffering
 13456     0459  0AE3               	incf	RN487X_FilterData@asyncBuffering,f
 13457     045A                     l8597:
 13458                           
 13459                           ;mcc_generated_files/rn487x/rn487x.c: 387:             pHead = asyncBuffer;
 13460     045A  084C               	movf	_asyncBuffer+1,w
 13461     045B  00CA               	movwf	_pHead+1
 13462     045C  084B               	movf	_asyncBuffer,w
 13463     045D  00C9               	movwf	_pHead
 13464                           
 13465                           ;mcc_generated_files/rn487x/rn487x.c: 388:         }
 13466     045E  2C63               	goto	l970
 13467     045F                     l971:	
 13468                           ;mcc_generated_files/rn487x/rn487x.c: 389:         else
 13469                           
 13470                           
 13471                           ;mcc_generated_files/rn487x/rn487x.c: 390:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 391:             dataReady = 1;
 13472     045F  01E4               	clrf	_dataReady
 13473     0460  0AE4               	incf	_dataReady,f
 13474     0461                     l8599:
 13475                           
 13476                           ;mcc_generated_files/rn487x/rn487x.c: 392:             peek = readChar;
 13477     0461  0844               	movf	RN487X_FilterData@readChar,w
 13478     0462  00E5               	movwf	_peek
 13479     0463                     l970:	
 13480                           ;mcc_generated_files/rn487x/rn487x.c: 394:     }
 13481                           
 13482                           
 13483                           ;mcc_generated_files/rn487x/rn487x.c: 395:     return dataReady;
 13484     0463  0140               	movlb	0	; select bank0
 13485     0464  0864               	movf	_dataReady,w
 13486     0465                     l973:
 13487     0465  0008               	return
 13488     0466                     __end_of_RN487X_FilterData:
 13489                           
 13490                           	psect	text25
 13491     06E8                     __ptext25:	
 13492 ;; *************** function _RN487X_MessageHandler *****************
 13493 ;; Defined at:
 13494 ;;		line 368 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  message         2   33[BANK0 ] PTR unsigned char 
 13497 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), NULL(0), 
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;  messageType     1   35[BANK0 ] enum E12962
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  1    wreg      void 
 13502 ;; Registers used:
 13503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13513 ;;Total ram usage:        3 bytes
 13514 ;; Hardware stack levels used: 1
 13515 ;; Hardware stack levels required when called: 6
 13516 ;; This function calls:
 13517 ;;		_rn487x_PrintIndicatorCharacters
 13518 ;;		_rn487x_PrintMessage
 13519 ;;		_rn487x_PrintMessageEnd
 13520 ;;		_rn487x_PrintMessageStart
 13521 ;;		_strstr
 13522 ;; This function is called by:
 13523 ;;		_RN487X_FilterData
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527     06E8                     _RN487X_MessageHandler:	
 13528                           ;psect for function _RN487X_MessageHandler
 13529                           
 13530     06E8                     l8495:	
 13531                           ;incstack = 0
 13532                           ; Regs used in _RN487X_MessageHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13533                           
 13534                           
 13535                           ;mcc_generated_files/rn487x/rn487x_interface.c: 368: static void RN487X_MessageHandler(c
      +                          har* message);mcc_generated_files/rn487x/rn487x_interface.c: 369: {;mcc_generated_files/
      +                          rn487x/rn487x_interface.c: 370:     RN487X_MESSAGE_TYPE messageType;;mcc_generated_files
      +                          /rn487x/rn487x_interface.c: 371:     rn487x_PrintMessageStart();
 13536     06E8  318C  24F3  3186   	fcall	_rn487x_PrintMessageStart
 13537                           
 13538                           ;mcc_generated_files/rn487x/rn487x_interface.c: 372:     if (strstr(message, "DISCONNECT
      +                          "))
 13539     06EB  0140               	movlb	0	; select bank0
 13540     06EC  0842               	movf	RN487X_MessageHandler@message+1,w
 13541     06ED  00F9               	movwf	strstr@h+1
 13542     06EE  0841               	movf	RN487X_MessageHandler@message,w
 13543     06EF  00F8               	movwf	strstr@h
 13544     06F0  3017               	movlw	low (STR_2| (0+32768))
 13545     06F1  00FA               	movwf	strstr@n
 13546     06F2  3098               	movlw	high (STR_2| (0+32768))
 13547     06F3  00FB               	movwf	strstr@n+1
 13548     06F4  3184  24C4  3186   	fcall	_strstr
 13549     06F7  0878               	movf	?_strstr,w
 13550     06F8  0479               	iorwf	?_strstr+1,w
 13551     06F9  1903               	btfsc	3,2
 13552     06FA  2EFC               	goto	u4591
 13553     06FB  2EFD               	goto	u4590
 13554     06FC                     u4591:
 13555     06FC  2F01               	goto	l8499
 13556     06FD                     u4590:
 13557     06FD                     l8497:
 13558                           
 13559                           ;mcc_generated_files/rn487x/rn487x_interface.c: 373:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 374:         messageType = DISCONNECT_MSG;
 13560     06FD  0140               	movlb	0	; select bank0
 13561     06FE  01C3               	clrf	RN487X_MessageHandler@messageType
 13562                           
 13563                           ;mcc_generated_files/rn487x/rn487x_interface.c: 375:         connected = 0;
 13564     06FF  01E7               	clrf	_connected
 13565                           
 13566                           ;mcc_generated_files/rn487x/rn487x_interface.c: 376:     }
 13567     0700  2F1C               	goto	l8505
 13568     0701                     l8499:
 13569     0701  0140               	movlb	0	; select bank0
 13570     0702  0842               	movf	RN487X_MessageHandler@message+1,w
 13571     0703  00F9               	movwf	strstr@h+1
 13572     0704  0841               	movf	RN487X_MessageHandler@message,w
 13573     0705  00F8               	movwf	strstr@h
 13574     0706  3000               	movlw	low (STR_4| (0+32768))
 13575     0707  00FA               	movwf	strstr@n
 13576     0708  3098               	movlw	high (STR_4| (0+32768))
 13577     0709  00FB               	movwf	strstr@n+1
 13578     070A  3184  24C4  3186   	fcall	_strstr
 13579     070D  0878               	movf	?_strstr,w
 13580     070E  0479               	iorwf	?_strstr+1,w
 13581     070F  1903               	btfsc	3,2
 13582     0710  2F12               	goto	u4601
 13583     0711  2F13               	goto	u4600
 13584     0712                     u4601:
 13585     0712  2F19               	goto	l8503
 13586     0713                     u4600:
 13587     0713                     l8501:
 13588                           
 13589                           ;mcc_generated_files/rn487x/rn487x_interface.c: 378:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 379:         messageType = STREAM_OPEN_MSG;
 13590     0713  0140               	movlb	0	; select bank0
 13591     0714  01C3               	clrf	RN487X_MessageHandler@messageType
 13592     0715  0AC3               	incf	RN487X_MessageHandler@messageType,f
 13593                           
 13594                           ;mcc_generated_files/rn487x/rn487x_interface.c: 380:         connected = 1;
 13595     0716  01E7               	clrf	_connected
 13596     0717  0AE7               	incf	_connected,f
 13597                           
 13598                           ;mcc_generated_files/rn487x/rn487x_interface.c: 381:     }
 13599     0718  2F1C               	goto	l8505
 13600     0719                     l8503:
 13601                           
 13602                           ;mcc_generated_files/rn487x/rn487x_interface.c: 383:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 384:         messageType = GENERAL_MSG;
 13603     0719  3002               	movlw	2
 13604     071A  0140               	movlb	0	; select bank0
 13605     071B  00C3               	movwf	RN487X_MessageHandler@messageType
 13606     071C                     l8505:
 13607                           
 13608                           ;mcc_generated_files/rn487x/rn487x_interface.c: 386:     rn487x_PrintMessage(message);
 13609     071C  0842               	movf	RN487X_MessageHandler@message+1,w
 13610     071D  00F8               	movwf	rn487x_PrintMessage@passedMessage+1
 13611     071E  0841               	movf	RN487X_MessageHandler@message,w
 13612     071F  00F7               	movwf	rn487x_PrintMessage@passedMessage
 13613     0720  318E  266B  3186   	fcall	_rn487x_PrintMessage
 13614     0723                     l8507:
 13615                           
 13616                           ;mcc_generated_files/rn487x/rn487x_interface.c: 387:     rn487x_PrintMessageEnd();
 13617     0723  3185  25BE  3186   	fcall	_rn487x_PrintMessageEnd
 13618     0726                     l8509:
 13619                           
 13620                           ;mcc_generated_files/rn487x/rn487x_interface.c: 388:     rn487x_PrintIndicatorCharacters
      +                          (messageType);
 13621     0726  0140               	movlb	0	; select bank0
 13622     0727  0843               	movf	RN487X_MessageHandler@messageType,w
 13623     0728  318B  231E  3186   	fcall	_rn487x_PrintIndicatorCharacters
 13624     072B                     l852:
 13625     072B  0008               	return
 13626     072C                     __end_of_RN487X_MessageHandler:
 13627                           
 13628                           	psect	text26
 13629     04C4                     __ptext26:	
 13630 ;; *************** function _strstr *****************
 13631 ;; Defined at:
 13632 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strstr.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;  h               2    8[COMMON] PTR const unsigned char 
 13635 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), NULL(0), 
 13636 ;;  n               2   10[COMMON] PTR const unsigned char 
 13637 ;;		 -> STR_5(12), STR_3(11), 
 13638 ;; Auto vars:     Size  Location     Type
 13639 ;;  nl              2    2[BANK0 ] unsigned int 
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  2    8[COMMON] PTR unsigned char 
 13642 ;; Registers used:
 13643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13652 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13653 ;;Total ram usage:        8 bytes
 13654 ;; Hardware stack levels used: 1
 13655 ;; Hardware stack levels required when called: 5
 13656 ;; This function calls:
 13657 ;;		_strchr
 13658 ;;		_strlen
 13659 ;;		_strncmp
 13660 ;; This function is called by:
 13661 ;;		_RN487X_MessageHandler
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665     04C4                     _strstr:	
 13666                           ;psect for function _strstr
 13667                           
 13668     04C4                     l8433:	
 13669                           ;incstack = 0
 13670                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13671                           
 13672     04C4  087A               	movf	strstr@n,w
 13673     04C5  047B               	iorwf	strstr@n+1,w
 13674     04C6  1903               	btfsc	3,2
 13675     04C7  2CC9               	goto	u4471
 13676     04C8  2CCA               	goto	u4470
 13677     04C9                     u4471:
 13678     04C9  2D16               	goto	l8447
 13679     04CA                     u4470:
 13680     04CA                     l8435:
 13681     04CA  087B               	movf	strstr@n+1,w
 13682     04CB  00F2               	movwf	strlen@s+1
 13683     04CC  087A               	movf	strstr@n,w
 13684     04CD  00F1               	movwf	strlen@s
 13685     04CE  318A  2215  3184   	fcall	_strlen
 13686     04D1  0872               	movf	?_strlen+1,w
 13687     04D2  0140               	movlb	0	; select bank0
 13688     04D3  00A3               	movwf	strstr@nl+1
 13689     04D4  0871               	movf	?_strlen,w
 13690     04D5  00A2               	movwf	strstr@nl
 13691     04D6  2D07               	goto	l8443
 13692     04D7                     l8437:
 13693     04D7  0879               	movf	strstr@h+1,w
 13694     04D8  00F2               	movwf	strncmp@l+1
 13695     04D9  0878               	movf	strstr@h,w
 13696     04DA  00F1               	movwf	strncmp@l
 13697     04DB  087B               	movf	strstr@n+1,w
 13698     04DC  00F4               	movwf	strncmp@r+1
 13699     04DD  087A               	movf	strstr@n,w
 13700     04DE  00F3               	movwf	strncmp@r
 13701     04DF  0140               	movlb	0	; select bank0
 13702     04E0  0823               	movf	strstr@nl+1,w
 13703     04E1  00F6               	movwf	strncmp@n+1
 13704     04E2  0822               	movf	strstr@nl,w
 13705     04E3  00F5               	movwf	strncmp@n
 13706     04E4  3185  256C  3184   	fcall	_strncmp
 13707     04E7  0871               	movf	?_strncmp,w
 13708     04E8  0472               	iorwf	?_strncmp+1,w
 13709     04E9  1D03               	btfss	3,2
 13710     04EA  2CEC               	goto	u4481
 13711     04EB  2CED               	goto	u4480
 13712     04EC                     u4481:
 13713     04EC  2CEE               	goto	l8441
 13714     04ED                     u4480:
 13715     04ED                     l8439:
 13716     04ED  2D18               	goto	l2691
 13717     04EE                     l8441:
 13718     04EE  0878               	movf	strstr@h,w
 13719     04EF  3E01               	addlw	1
 13720     04F0  00F1               	movwf	strchr@s
 13721     04F1  3000               	movlw	0
 13722     04F2  3D79               	addwfc	strstr@h+1,w
 13723     04F3  00F2               	movwf	strchr@s+1
 13724     04F4  087A               	movf	strstr@n,w
 13725     04F5  0084               	movwf	4
 13726     04F6  087B               	movf	strstr@n+1,w
 13727     04F7  0085               	movwf	5
 13728     04F8  0800               	movf	0,w	;code access
 13729     04F9  0140               	movlb	0	; select bank0
 13730     04FA  00A0               	movwf	??_strstr
 13731     04FB  01A1               	clrf	??_strstr+1
 13732     04FC  0820               	movf	??_strstr,w
 13733     04FD  00F3               	movwf	strchr@c
 13734     04FE  0821               	movf	??_strstr+1,w
 13735     04FF  00F4               	movwf	strchr@c+1
 13736     0500  318A  229B  3184   	fcall	_strchr
 13737     0503  0872               	movf	?_strchr+1,w
 13738     0504  00F9               	movwf	strstr@h+1
 13739     0505  0871               	movf	?_strchr,w
 13740     0506  00F8               	movwf	strstr@h
 13741     0507                     l8443:
 13742     0507  0878               	movf	strstr@h,w
 13743     0508  0479               	iorwf	strstr@h+1,w
 13744     0509  1903               	btfsc	3,2
 13745     050A  2D0C               	goto	u4491
 13746     050B  2D0D               	goto	u4490
 13747     050C                     u4491:
 13748     050C  2D16               	goto	l8447
 13749     050D                     u4490:
 13750     050D                     l8445:
 13751     050D  0878               	movf	strstr@h,w
 13752     050E  0086               	movwf	6
 13753     050F  0879               	movf	strstr@h+1,w
 13754     0510  0087               	movwf	7
 13755     0511  0801               	movf	1,w
 13756     0512  1D03               	btfss	3,2
 13757     0513  2D15               	goto	u4501
 13758     0514  2D16               	goto	u4500
 13759     0515                     u4501:
 13760     0515  2CD7               	goto	l8437
 13761     0516                     u4500:
 13762     0516                     l8447:
 13763     0516  01F8               	clrf	?_strstr
 13764     0517  01F9               	clrf	?_strstr+1
 13765     0518                     l2691:
 13766     0518  0008               	return
 13767     0519                     __end_of_strstr:
 13768                           
 13769                           	psect	text27
 13770     056C                     __ptext27:	
 13771 ;; *************** function _strncmp *****************
 13772 ;; Defined at:
 13773 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strncmp.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  l               2    1[COMMON] PTR const unsigned char 
 13776 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), NULL(0), 
 13777 ;;  r               2    3[COMMON] PTR const unsigned char 
 13778 ;;		 -> STR_5(12), STR_3(11), 
 13779 ;;  n               2    5[COMMON] unsigned int 
 13780 ;; Auto vars:     Size  Location     Type
 13781 ;;		None
 13782 ;; Return value:  Size  Location     Type
 13783 ;;                  2    1[COMMON] int 
 13784 ;; Registers used:
 13785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13786 ;; Tracked objects:
 13787 ;;		On entry : 0/0
 13788 ;;		On exit  : 0/0
 13789 ;;		Unchanged: 0/0
 13790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13794 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13795 ;;Total ram usage:        7 bytes
 13796 ;; Hardware stack levels used: 1
 13797 ;; Hardware stack levels required when called: 4
 13798 ;; This function calls:
 13799 ;;		Nothing
 13800 ;; This function is called by:
 13801 ;;		_strstr
 13802 ;; This function uses a non-reentrant model
 13803 ;;
 13804                           
 13805     056C                     _strncmp:	
 13806                           ;psect for function _strncmp
 13807                           
 13808     056C                     l8287:	
 13809                           ;incstack = 0
 13810                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 13811                           
 13812     056C  3001               	movlw	1
 13813     056D  02F5               	subwf	strncmp@n,f
 13814     056E  3000               	movlw	0
 13815     056F  3BF6               	subwfb	strncmp@n+1,f
 13816     0570  0A75               	incf	strncmp@n,w
 13817     0571  1D03               	skipz
 13818     0572  2D77               	goto	u4311
 13819     0573  0A76               	incf	strncmp@n+1,w
 13820     0574  1D03               	btfss	3,2
 13821     0575  2D77               	goto	u4311
 13822     0576  2D78               	goto	u4310
 13823     0577                     u4311:
 13824     0577  2D87               	goto	l8295
 13825     0578                     u4310:
 13826     0578                     l8289:
 13827     0578  01F1               	clrf	?_strncmp
 13828     0579  01F2               	clrf	?_strncmp+1
 13829     057A  2DBD               	goto	l2704
 13830     057B                     l8293:
 13831     057B  3001               	movlw	1
 13832     057C  07F1               	addwf	strncmp@l,f
 13833     057D  3000               	movlw	0
 13834     057E  3DF2               	addwfc	strncmp@l+1,f
 13835     057F  3001               	movlw	1
 13836     0580  07F3               	addwf	strncmp@r,f
 13837     0581  3000               	movlw	0
 13838     0582  3DF4               	addwfc	strncmp@r+1,f
 13839     0583  3001               	movlw	1
 13840     0584  02F5               	subwf	strncmp@n,f
 13841     0585  3000               	movlw	0
 13842     0586  3BF6               	subwfb	strncmp@n+1,f
 13843     0587                     l8295:
 13844     0587  0871               	movf	strncmp@l,w
 13845     0588  0086               	movwf	6
 13846     0589  0872               	movf	strncmp@l+1,w
 13847     058A  0087               	movwf	7
 13848     058B  0801               	movf	1,w
 13849     058C  1903               	btfsc	3,2
 13850     058D  2D8F               	goto	u4321
 13851     058E  2D90               	goto	u4320
 13852     058F                     u4321:
 13853     058F  2DAF               	goto	l8303
 13854     0590                     u4320:
 13855     0590                     l8297:
 13856     0590  0873               	movf	strncmp@r,w
 13857     0591  0084               	movwf	4
 13858     0592  0874               	movf	strncmp@r+1,w
 13859     0593  0085               	movwf	5
 13860     0594  0012               	moviw fsr0++
 13861     0595  1903               	btfsc	3,2
 13862     0596  2D98               	goto	u4331
 13863     0597  2D99               	goto	u4330
 13864     0598                     u4331:
 13865     0598  2DAF               	goto	l8303
 13866     0599                     u4330:
 13867     0599                     l8299:
 13868     0599  0875               	movf	strncmp@n,w
 13869     059A  0476               	iorwf	strncmp@n+1,w
 13870     059B  1903               	btfsc	3,2
 13871     059C  2D9E               	goto	u4341
 13872     059D  2D9F               	goto	u4340
 13873     059E                     u4341:
 13874     059E  2DAF               	goto	l8303
 13875     059F                     u4340:
 13876     059F                     l8301:
 13877     059F  0873               	movf	strncmp@r,w
 13878     05A0  0084               	movwf	4
 13879     05A1  0874               	movf	strncmp@r+1,w
 13880     05A2  0085               	movwf	5
 13881     05A3  0800               	movf	0,w	;code access
 13882     05A4  00F7               	movwf	??_strncmp
 13883     05A5  0871               	movf	strncmp@l,w
 13884     05A6  0086               	movwf	6
 13885     05A7  0872               	movf	strncmp@l+1,w
 13886     05A8  0087               	movwf	7
 13887     05A9  0801               	movf	1,w
 13888     05AA  0677               	xorwf	??_strncmp,w
 13889     05AB  1903               	skipnz
 13890     05AC  2DAE               	goto	u4351
 13891     05AD  2DAF               	goto	u4350
 13892     05AE                     u4351:
 13893     05AE  2D7B               	goto	l8293
 13894     05AF                     u4350:
 13895     05AF                     l8303:
 13896     05AF  0871               	movf	strncmp@l,w
 13897     05B0  0086               	movwf	6
 13898     05B1  0872               	movf	strncmp@l+1,w
 13899     05B2  0087               	movwf	7
 13900     05B3  0873               	movf	strncmp@r,w
 13901     05B4  0084               	movwf	4
 13902     05B5  0874               	movf	strncmp@r+1,w
 13903     05B6  0085               	movwf	5
 13904     05B7  0800               	movf	0,w	;code access
 13905     05B8  0201               	subwf	1,w
 13906     05B9  00F1               	movwf	?_strncmp
 13907     05BA  01F2               	clrf	?_strncmp+1
 13908     05BB  1C03               	skipc
 13909     05BC  03F2               	decf	?_strncmp+1,f
 13910     05BD                     l2704:
 13911     05BD  0008               	return
 13912     05BE                     __end_of_strncmp:
 13913                           
 13914                           	psect	text28
 13915     0A9B                     __ptext28:	
 13916 ;; *************** function _strchr *****************
 13917 ;; Defined at:
 13918 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strchr.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;  s               2    1[COMMON] PTR const unsigned char 
 13921 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), NULL(0), 
 13922 ;;  c               2    3[COMMON] int 
 13923 ;; Auto vars:     Size  Location     Type
 13924 ;;		None
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  2    1[COMMON] PTR unsigned char 
 13927 ;; Registers used:
 13928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13938 ;;Total ram usage:        6 bytes
 13939 ;; Hardware stack levels used: 1
 13940 ;; Hardware stack levels required when called: 4
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		_strstr
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948     0A9B                     _strchr:	
 13949                           ;psect for function _strchr
 13950                           
 13951     0A9B                     l2697:	
 13952                           ;incstack = 0
 13953                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 13954                           
 13955     0A9B                     l8307:
 13956     0A9B  0871               	movf	strchr@s,w
 13957     0A9C  0086               	movwf	6
 13958     0A9D  0872               	movf	strchr@s+1,w
 13959     0A9E  0087               	movwf	7
 13960     0A9F  0801               	movf	1,w
 13961     0AA0  0673               	xorwf	strchr@c,w
 13962     0AA1  1D03               	skipz
 13963     0AA2  2AA4               	goto	u4361
 13964     0AA3  2AA5               	goto	u4360
 13965     0AA4                     u4361:
 13966     0AA4  2AA6               	goto	l8311
 13967     0AA5                     u4360:
 13968     0AA5                     l8309:
 13969     0AA5  2AB8               	goto	l2699
 13970     0AA6                     l8311:
 13971     0AA6  0872               	movf	strchr@s+1,w
 13972     0AA7  00F6               	movwf	??_strchr+1
 13973     0AA8  0871               	movf	strchr@s,w
 13974     0AA9  00F5               	movwf	??_strchr
 13975     0AAA  0AF1               	incf	strchr@s,f
 13976     0AAB  1903               	skipnz
 13977     0AAC  0AF2               	incf	strchr@s+1,f
 13978     0AAD  0875               	movf	??_strchr,w
 13979     0AAE  0086               	movwf	6
 13980     0AAF  0876               	movf	??_strchr+1,w
 13981     0AB0  0087               	movwf	7
 13982     0AB1  0801               	movf	1,w
 13983     0AB2  1D03               	btfss	3,2
 13984     0AB3  2AB5               	goto	u4371
 13985     0AB4  2AB6               	goto	u4370
 13986     0AB5                     u4371:
 13987     0AB5  2A9B               	goto	l2697
 13988     0AB6                     u4370:
 13989     0AB6                     l8313:
 13990     0AB6  01F1               	clrf	?_strchr
 13991     0AB7  01F2               	clrf	?_strchr+1
 13992     0AB8                     l2699:
 13993     0AB8  0008               	return
 13994     0AB9                     __end_of_strchr:
 13995                           
 13996                           	psect	text29
 13997     0CF3                     __ptext29:	
 13998 ;; *************** function _rn487x_PrintMessageStart *****************
 13999 ;; Defined at:
 14000 ;;		line 323 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;		None
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;		None
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  1    wreg      void 
 14007 ;; Registers used:
 14008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14018 ;;Total ram usage:        0 bytes
 14019 ;; Hardware stack levels used: 1
 14020 ;; Hardware stack levels required when called: 5
 14021 ;; This function calls:
 14022 ;;		_EUSART1_Write
 14023 ;;		_EUSART2_Write
 14024 ;; This function is called by:
 14025 ;;		_RN487X_MessageHandler
 14026 ;; This function uses a non-reentrant model
 14027 ;;
 14028                           
 14029     0CF3                     _rn487x_PrintMessageStart:	
 14030                           ;psect for function _rn487x_PrintMessageStart
 14031                           
 14032     0CF3                     l8411:	
 14033                           ;incstack = 0
 14034                           ; Regs used in _rn487x_PrintMessageStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14035                           
 14036                           
 14037                           ;mcc_generated_files/rn487x/rn487x_interface.c: 325:     uart[UART_CDC].Write('<');
 14038     0CF3  303C               	movlw	60
 14039     0CF4  00F1               	movwf	EUSART2_Write@txData
 14040     0CF5  3002               	movlw	low ((_uart+2)| (0+32768))
 14041     0CF6  0084               	movwf	4
 14042     0CF7  3090               	movlw	high ((_uart+2)| (0+32768))
 14043     0CF8  0085               	movwf	5
 14044     0CF9  3F01               	moviw [1]fsr0
 14045     0CFA  008A               	movwf	10
 14046     0CFB  3F00               	moviw [0]fsr0
 14047     0CFC  000A               	callw
 14048     0CFD  318C               	pagesel	$
 14049                           
 14050                           ;mcc_generated_files/rn487x/rn487x_interface.c: 326:     uart[UART_CDC].Write('<');
 14051     0CFE  303C               	movlw	60
 14052     0CFF  00F1               	movwf	EUSART2_Write@txData
 14053     0D00  3002               	movlw	low ((_uart+2)| (0+32768))
 14054     0D01  0084               	movwf	4
 14055     0D02  3090               	movlw	high ((_uart+2)| (0+32768))
 14056     0D03  0085               	movwf	5
 14057     0D04  3F01               	moviw [1]fsr0
 14058     0D05  008A               	movwf	10
 14059     0D06  3F00               	moviw [0]fsr0
 14060     0D07  000A               	callw
 14061     0D08  318C               	pagesel	$
 14062                           
 14063                           ;mcc_generated_files/rn487x/rn487x_interface.c: 327:     uart[UART_CDC].Write('<');
 14064     0D09  303C               	movlw	60
 14065     0D0A  00F1               	movwf	EUSART2_Write@txData
 14066     0D0B  3002               	movlw	low ((_uart+2)| (0+32768))
 14067     0D0C  0084               	movwf	4
 14068     0D0D  3090               	movlw	high ((_uart+2)| (0+32768))
 14069     0D0E  0085               	movwf	5
 14070     0D0F  3F01               	moviw [1]fsr0
 14071     0D10  008A               	movwf	10
 14072     0D11  3F00               	moviw [0]fsr0
 14073     0D12  000A               	callw
 14074     0D13  318C               	pagesel	$
 14075                           
 14076                           ;mcc_generated_files/rn487x/rn487x_interface.c: 328:     uart[UART_CDC].Write(' ');
 14077     0D14  3020               	movlw	32
 14078     0D15  00F1               	movwf	EUSART2_Write@txData
 14079     0D16  3002               	movlw	low ((_uart+2)| (0+32768))
 14080     0D17  0084               	movwf	4
 14081     0D18  3090               	movlw	high ((_uart+2)| (0+32768))
 14082     0D19  0085               	movwf	5
 14083     0D1A  3F01               	moviw [1]fsr0
 14084     0D1B  008A               	movwf	10
 14085     0D1C  3F00               	moviw [0]fsr0
 14086     0D1D  000A               	callw
 14087     0D1E  318C               	pagesel	$
 14088     0D1F                     l829:
 14089     0D1F  0008               	return
 14090     0D20                     __end_of_rn487x_PrintMessageStart:
 14091                           
 14092                           	psect	text30
 14093     05BE                     __ptext30:	
 14094 ;; *************** function _rn487x_PrintMessageEnd *****************
 14095 ;; Defined at:
 14096 ;;		line 331 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;Total ram usage:        0 bytes
 14115 ;; Hardware stack levels used: 1
 14116 ;; Hardware stack levels required when called: 5
 14117 ;; This function calls:
 14118 ;;		_EUSART1_Write
 14119 ;;		_EUSART2_Write
 14120 ;; This function is called by:
 14121 ;;		_RN487X_MessageHandler
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125     05BE                     _rn487x_PrintMessageEnd:	
 14126                           ;psect for function _rn487x_PrintMessageEnd
 14127                           
 14128     05BE                     l8413:	
 14129                           ;incstack = 0
 14130                           ; Regs used in _rn487x_PrintMessageEnd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14131                           
 14132                           
 14133                           ;mcc_generated_files/rn487x/rn487x_interface.c: 333:     uart[UART_CDC].Write(' ');
 14134     05BE  3020               	movlw	32
 14135     05BF  00F1               	movwf	EUSART2_Write@txData
 14136     05C0  3002               	movlw	low ((_uart+2)| (0+32768))
 14137     05C1  0084               	movwf	4
 14138     05C2  3090               	movlw	high ((_uart+2)| (0+32768))
 14139     05C3  0085               	movwf	5
 14140     05C4  3F01               	moviw [1]fsr0
 14141     05C5  008A               	movwf	10
 14142     05C6  3F00               	moviw [0]fsr0
 14143     05C7  000A               	callw
 14144     05C8  3185               	pagesel	$
 14145                           
 14146                           ;mcc_generated_files/rn487x/rn487x_interface.c: 334:     uart[UART_CDC].Write('>');
 14147     05C9  303E               	movlw	62
 14148     05CA  00F1               	movwf	EUSART2_Write@txData
 14149     05CB  3002               	movlw	low ((_uart+2)| (0+32768))
 14150     05CC  0084               	movwf	4
 14151     05CD  3090               	movlw	high ((_uart+2)| (0+32768))
 14152     05CE  0085               	movwf	5
 14153     05CF  3F01               	moviw [1]fsr0
 14154     05D0  008A               	movwf	10
 14155     05D1  3F00               	moviw [0]fsr0
 14156     05D2  000A               	callw
 14157     05D3  3185               	pagesel	$
 14158                           
 14159                           ;mcc_generated_files/rn487x/rn487x_interface.c: 335:     uart[UART_CDC].Write('>');
 14160     05D4  303E               	movlw	62
 14161     05D5  00F1               	movwf	EUSART2_Write@txData
 14162     05D6  3002               	movlw	low ((_uart+2)| (0+32768))
 14163     05D7  0084               	movwf	4
 14164     05D8  3090               	movlw	high ((_uart+2)| (0+32768))
 14165     05D9  0085               	movwf	5
 14166     05DA  3F01               	moviw [1]fsr0
 14167     05DB  008A               	movwf	10
 14168     05DC  3F00               	moviw [0]fsr0
 14169     05DD  000A               	callw
 14170     05DE  3185               	pagesel	$
 14171                           
 14172                           ;mcc_generated_files/rn487x/rn487x_interface.c: 336:     uart[UART_CDC].Write('>');
 14173     05DF  303E               	movlw	62
 14174     05E0  00F1               	movwf	EUSART2_Write@txData
 14175     05E1  3002               	movlw	low ((_uart+2)| (0+32768))
 14176     05E2  0084               	movwf	4
 14177     05E3  3090               	movlw	high ((_uart+2)| (0+32768))
 14178     05E4  0085               	movwf	5
 14179     05E5  3F01               	moviw [1]fsr0
 14180     05E6  008A               	movwf	10
 14181     05E7  3F00               	moviw [0]fsr0
 14182     05E8  000A               	callw
 14183     05E9  3185               	pagesel	$
 14184                           
 14185                           ;mcc_generated_files/rn487x/rn487x_interface.c: 337:     uart[UART_CDC].Write(' ');
 14186     05EA  3020               	movlw	32
 14187     05EB  00F1               	movwf	EUSART2_Write@txData
 14188     05EC  3002               	movlw	low ((_uart+2)| (0+32768))
 14189     05ED  0084               	movwf	4
 14190     05EE  3090               	movlw	high ((_uart+2)| (0+32768))
 14191     05EF  0085               	movwf	5
 14192     05F0  3F01               	moviw [1]fsr0
 14193     05F1  008A               	movwf	10
 14194     05F2  3F00               	moviw [0]fsr0
 14195     05F3  000A               	callw
 14196     05F4  3185               	pagesel	$
 14197                           
 14198                           ;mcc_generated_files/rn487x/rn487x_interface.c: 338:     uart[UART_CDC].Write('\r');
 14199     05F5  300D               	movlw	13
 14200     05F6  00F1               	movwf	EUSART2_Write@txData
 14201     05F7  3002               	movlw	low ((_uart+2)| (0+32768))
 14202     05F8  0084               	movwf	4
 14203     05F9  3090               	movlw	high ((_uart+2)| (0+32768))
 14204     05FA  0085               	movwf	5
 14205     05FB  3F01               	moviw [1]fsr0
 14206     05FC  008A               	movwf	10
 14207     05FD  3F00               	moviw [0]fsr0
 14208     05FE  000A               	callw
 14209     05FF  3185               	pagesel	$
 14210                           
 14211                           ;mcc_generated_files/rn487x/rn487x_interface.c: 339:     uart[UART_CDC].Write('\n');
 14212     0600  300A               	movlw	10
 14213     0601  00F1               	movwf	EUSART2_Write@txData
 14214     0602  3002               	movlw	low ((_uart+2)| (0+32768))
 14215     0603  0084               	movwf	4
 14216     0604  3090               	movlw	high ((_uart+2)| (0+32768))
 14217     0605  0085               	movwf	5
 14218     0606  3F01               	moviw [1]fsr0
 14219     0607  008A               	movwf	10
 14220     0608  3F00               	moviw [0]fsr0
 14221     0609  000A               	callw
 14222     060A  3185               	pagesel	$
 14223     060B                     l832:
 14224     060B  0008               	return
 14225     060C                     __end_of_rn487x_PrintMessageEnd:
 14226                           
 14227                           	psect	text31
 14228     0E6B                     __ptext31:	
 14229 ;; *************** function _rn487x_PrintMessage *****************
 14230 ;; Defined at:
 14231 ;;		line 358 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;  passedMessag    2    7[COMMON] PTR unsigned char 
 14234 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), NULL(0), 
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;  messageIndex    1   32[BANK0 ] unsigned char 
 14237 ;;  printCharact   32    0[BANK0 ] unsigned char [32]
 14238 ;; Return value:  Size  Location     Type
 14239 ;;                  1    wreg      void 
 14240 ;; Registers used:
 14241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14248 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14250 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14251 ;;Total ram usage:       37 bytes
 14252 ;; Hardware stack levels used: 1
 14253 ;; Hardware stack levels required when called: 5
 14254 ;; This function calls:
 14255 ;;		_EUSART1_Write
 14256 ;;		_EUSART2_Write
 14257 ;;		_strcpy
 14258 ;;		_strlen
 14259 ;; This function is called by:
 14260 ;;		_RN487X_MessageHandler
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264     0E6B                     _rn487x_PrintMessage:	
 14265                           ;psect for function _rn487x_PrintMessage
 14266                           
 14267     0E6B                     l8423:	
 14268                           ;incstack = 0
 14269                           ; Regs used in _rn487x_PrintMessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14270                           
 14271                           
 14272                           ;mcc_generated_files/rn487x/rn487x_interface.c: 358: static __attribute__((inline)) void
      +                           rn487x_PrintMessage(char* passedMessage);mcc_generated_files/rn487x/rn487x_interface.c:
      +                           359: {;mcc_generated_files/rn487x/rn487x_interface.c: 360:     char printCharacter [(32
      +                          )];;mcc_generated_files/rn487x/rn487x_interface.c: 361:     strcpy(printCharacter, passe
      +                          dMessage);
 14273     0E6B  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 14274     0E6C  00F2               	movwf	strcpy@src+1
 14275     0E6D  0877               	movf	rn487x_PrintMessage@passedMessage,w
 14276     0E6E  00F1               	movwf	strcpy@src
 14277     0E6F  3020               	movlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 14278     0E70  318A  222E  318E   	fcall	_strcpy
 14279     0E73                     l8425:
 14280                           
 14281                           ;mcc_generated_files/rn487x/rn487x_interface.c: 362:     for (uint8_t messageIndex = 0; 
      +                          messageIndex < strlen(passedMessage); messageIndex++)
 14282     0E73  0140               	movlb	0	; select bank0
 14283     0E74  01C0               	clrf	rn487x_PrintMessage@messageIndex
 14284     0E75  2E8A               	goto	l8431
 14285     0E76                     l8427:
 14286                           
 14287                           ;mcc_generated_files/rn487x/rn487x_interface.c: 363:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 364:         uart[UART_CDC].Write(printCharacter[messageIndex]);
 14288     0E76  0840               	movf	rn487x_PrintMessage@messageIndex,w
 14289     0E77  3E20               	addlw	(low (rn487x_PrintMessage@printCharacter| 0))& (0+255)
 14290     0E78  0086               	movwf	6
 14291     0E79  0187               	clrf	7
 14292     0E7A  0801               	movf	1,w
 14293     0E7B  00F1               	movwf	EUSART2_Write@txData
 14294     0E7C  3002               	movlw	low ((_uart+2)| (0+32768))
 14295     0E7D  0084               	movwf	4
 14296     0E7E  3090               	movlw	high ((_uart+2)| (0+32768))
 14297     0E7F  0085               	movwf	5
 14298     0E80  3F01               	moviw [1]fsr0
 14299     0E81  008A               	movwf	10
 14300     0E82  3F00               	moviw [0]fsr0
 14301     0E83  000A               	callw
 14302     0E84  318E               	pagesel	$
 14303     0E85                     l8429:
 14304                           
 14305                           ;mcc_generated_files/rn487x/rn487x_interface.c: 365:     }
 14306     0E85  3001               	movlw	1
 14307     0E86  00F9               	movwf	??_rn487x_PrintMessage
 14308     0E87  0879               	movf	??_rn487x_PrintMessage,w
 14309     0E88  0140               	movlb	0	; select bank0
 14310     0E89  07C0               	addwf	rn487x_PrintMessage@messageIndex,f
 14311     0E8A                     l8431:
 14312     0E8A  0878               	movf	rn487x_PrintMessage@passedMessage+1,w
 14313     0E8B  00F2               	movwf	strlen@s+1
 14314     0E8C  0877               	movf	rn487x_PrintMessage@passedMessage,w
 14315     0E8D  00F1               	movwf	strlen@s
 14316     0E8E  318A  2215  318E   	fcall	_strlen
 14317     0E91  0140               	movlb	0	; select bank0
 14318     0E92  0840               	movf	rn487x_PrintMessage@messageIndex,w
 14319     0E93  00F9               	movwf	??_rn487x_PrintMessage
 14320     0E94  01FA               	clrf	??_rn487x_PrintMessage+1
 14321     0E95  0872               	movf	?_strlen+1,w
 14322     0E96  027A               	subwf	??_rn487x_PrintMessage+1,w
 14323     0E97  1D03               	skipz
 14324     0E98  2E9B               	goto	u4465
 14325     0E99  0871               	movf	?_strlen,w
 14326     0E9A  0279               	subwf	??_rn487x_PrintMessage,w
 14327     0E9B                     u4465:
 14328     0E9B  1C03               	skipc
 14329     0E9C  2E9E               	goto	u4461
 14330     0E9D  2E9F               	goto	u4460
 14331     0E9E                     u4461:
 14332     0E9E  2E76               	goto	l8427
 14333     0E9F                     u4460:
 14334     0E9F                     l845:
 14335     0E9F  0008               	return
 14336     0EA0                     __end_of_rn487x_PrintMessage:
 14337                           
 14338                           	psect	text32
 14339     0A2E                     __ptext32:	
 14340 ;; *************** function _strcpy *****************
 14341 ;; Defined at:
 14342 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;  dest            1    wreg     PTR unsigned char 
 14345 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 14346 ;;  src             2    1[COMMON] PTR const unsigned char 
 14347 ;;		 -> statusBuffer@main$F3732(80), statusBuffer(80), NULL(0), 
 14348 ;; Auto vars:     Size  Location     Type
 14349 ;;  dest            1    6[COMMON] PTR unsigned char 
 14350 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 14351 ;;  d               1    5[COMMON] PTR unsigned char 
 14352 ;;		 -> rn487x_PrintMessage@printCharacter(32), 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      PTR unsigned char 
 14355 ;; Registers used:
 14356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14365 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14366 ;;Total ram usage:        6 bytes
 14367 ;; Hardware stack levels used: 1
 14368 ;; Hardware stack levels required when called: 4
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_rn487x_PrintMessage
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376     0A2E                     _strcpy:	
 14377                           ;psect for function _strcpy
 14378                           
 14379                           
 14380                           ;incstack = 0
 14381                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 14382                           ;strcpy@dest stored from wreg
 14383     0A2E  00F6               	movwf	strcpy@dest
 14384     0A2F                     l8221:
 14385     0A2F  0876               	movf	strcpy@dest,w
 14386     0A30  00F5               	movwf	strcpy@d
 14387     0A31                     l8223:
 14388     0A31  0875               	movf	strcpy@d,w
 14389     0A32  0086               	movwf	6
 14390     0A33  0187               	clrf	7
 14391     0A34  0AF5               	incf	strcpy@d,f
 14392     0A35  0872               	movf	strcpy@src+1,w
 14393     0A36  00F4               	movwf	??_strcpy+1
 14394     0A37  0871               	movf	strcpy@src,w
 14395     0A38  00F3               	movwf	??_strcpy
 14396     0A39  0AF1               	incf	strcpy@src,f
 14397     0A3A  1903               	skipnz
 14398     0A3B  0AF2               	incf	strcpy@src+1,f
 14399     0A3C  0873               	movf	??_strcpy,w
 14400     0A3D  0084               	movwf	4
 14401     0A3E  0874               	movf	??_strcpy+1,w
 14402     0A3F  0085               	movwf	5
 14403     0A40  0800               	movf	0,w
 14404     0A41  3FC0               	movwi [0]fsr1
 14405     0A42  0889               	movf	9,f
 14406     0A43  1D03               	btfss	3,2
 14407     0A44  2A46               	goto	u4221
 14408     0A45  2A47               	goto	u4220
 14409     0A46                     u4221:
 14410     0A46  2A31               	goto	l8223
 14411     0A47                     u4220:
 14412     0A47                     l2672:
 14413     0A47  0008               	return
 14414     0A48                     __end_of_strcpy:
 14415                           
 14416                           	psect	text33
 14417     0B1E                     __ptext33:	
 14418 ;; *************** function _rn487x_PrintIndicatorCharacters *****************
 14419 ;; Defined at:
 14420 ;;		line 342 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14421 ;; Parameters:    Size  Location     Type
 14422 ;;  messageType     1    wreg     enum E12962
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;  messageType     1    3[COMMON] enum E12962
 14425 ;; Return value:  Size  Location     Type
 14426 ;;                  1    wreg      void 
 14427 ;; Registers used:
 14428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14429 ;; Tracked objects:
 14430 ;;		On entry : 0/0
 14431 ;;		On exit  : 0/0
 14432 ;;		Unchanged: 0/0
 14433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14438 ;;Total ram usage:        1 bytes
 14439 ;; Hardware stack levels used: 1
 14440 ;; Hardware stack levels required when called: 5
 14441 ;; This function calls:
 14442 ;;		_EUSART1_Write
 14443 ;;		_EUSART2_Write
 14444 ;; This function is called by:
 14445 ;;		_RN487X_MessageHandler
 14446 ;; This function uses a non-reentrant model
 14447 ;;
 14448                           
 14449     0B1E                     _rn487x_PrintIndicatorCharacters:	
 14450                           ;psect for function _rn487x_PrintIndicatorCharacters
 14451                           
 14452                           
 14453                           ;incstack = 0
 14454                           ; Regs used in _rn487x_PrintIndicatorCharacters: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14455                           ;rn487x_PrintIndicatorCharacters@messageType stored from wreg
 14456     0B1E  00F3               	movwf	rn487x_PrintIndicatorCharacters@messageType
 14457     0B1F                     l8415:
 14458                           
 14459                           ;mcc_generated_files/rn487x/rn487x_interface.c: 342: static __attribute__((inline)) void
      +                           rn487x_PrintIndicatorCharacters(RN487X_MESSAGE_TYPE messageType);mcc_generated_files/rn
      +                          487x/rn487x_interface.c: 343: {;mcc_generated_files/rn487x/rn487x_interface.c: 344:     
      +                          if (DISCONNECT_MSG == messageType)
 14460     0B1F  0873               	movf	rn487x_PrintIndicatorCharacters@messageType,w
 14461     0B20  1D03               	btfss	3,2
 14462     0B21  2B23               	goto	u4441
 14463     0B22  2B24               	goto	u4440
 14464     0B23                     u4441:
 14465     0B23  2B30               	goto	l8419
 14466     0B24                     u4440:
 14467     0B24                     l8417:
 14468                           
 14469                           ;mcc_generated_files/rn487x/rn487x_interface.c: 345:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 346:         uart[UART_CDC].Write('[');
 14470     0B24  305B               	movlw	91
 14471     0B25  00F1               	movwf	EUSART2_Write@txData
 14472     0B26  3002               	movlw	low ((_uart+2)| (0+32768))
 14473     0B27  0084               	movwf	4
 14474     0B28  3090               	movlw	high ((_uart+2)| (0+32768))
 14475     0B29  0085               	movwf	5
 14476     0B2A  3F01               	moviw [1]fsr0
 14477     0B2B  008A               	movwf	10
 14478     0B2C  3F00               	moviw [0]fsr0
 14479     0B2D  000A               	callw
 14480     0B2E  318B               	pagesel	$
 14481                           
 14482                           ;mcc_generated_files/rn487x/rn487x_interface.c: 347:     }
 14483     0B2F  2B40               	goto	l839
 14484     0B30                     l8419:
 14485     0B30  0373               	decf	rn487x_PrintIndicatorCharacters@messageType,w
 14486     0B31  1D03               	btfss	3,2
 14487     0B32  2B34               	goto	u4451
 14488     0B33  2B35               	goto	u4450
 14489     0B34                     u4451:
 14490     0B34  2B40               	goto	l839
 14491     0B35                     u4450:
 14492     0B35                     l8421:
 14493                           
 14494                           ;mcc_generated_files/rn487x/rn487x_interface.c: 349:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 350:         uart[UART_CDC].Write(']');
 14495     0B35  305D               	movlw	93
 14496     0B36  00F1               	movwf	EUSART2_Write@txData
 14497     0B37  3002               	movlw	low ((_uart+2)| (0+32768))
 14498     0B38  0084               	movwf	4
 14499     0B39  3090               	movlw	high ((_uart+2)| (0+32768))
 14500     0B3A  0085               	movwf	5
 14501     0B3B  3F01               	moviw [1]fsr0
 14502     0B3C  008A               	movwf	10
 14503     0B3D  3F00               	moviw [0]fsr0
 14504     0B3E  000A               	callw
 14505     0B3F  318B               	pagesel	$
 14506     0B40                     l839:	
 14507                           ;mcc_generated_files/rn487x/rn487x_interface.c: 351:     }
 14508                           
 14509     0B40  0008               	return
 14510     0B41                     __end_of_rn487x_PrintIndicatorCharacters:
 14511                           
 14512                           	psect	text34
 14513     164E                     __ptext34:	
 14514 ;; *************** function _RN487X_IsConnected *****************
 14515 ;; Defined at:
 14516 ;;		line 243 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;		None
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;		None
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  1    wreg      _Bool 
 14523 ;; Registers used:
 14524 ;;		wreg
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14534 ;;Total ram usage:        0 bytes
 14535 ;; Hardware stack levels used: 1
 14536 ;; Hardware stack levels required when called: 4
 14537 ;; This function calls:
 14538 ;;		Nothing
 14539 ;; This function is called by:
 14540 ;;		_main
 14541 ;;		_RN487X_Example_TransparentUart
 14542 ;; This function uses a non-reentrant model
 14543 ;;
 14544                           
 14545     164E                     _RN487X_IsConnected:	
 14546                           ;psect for function _RN487X_IsConnected
 14547                           
 14548     164E                     l9067:	
 14549                           ;incstack = 0
 14550                           ; Regs used in _RN487X_IsConnected: [wreg]
 14551                           
 14552                           
 14553                           ;mcc_generated_files/rn487x/rn487x_interface.c: 245:     return connected;
 14554     164E  0140               	movlb	0	; select bank0
 14555     164F  0867               	movf	_connected,w
 14556     1650                     l780:
 14557     1650  0008               	return
 14558     1651                     __end_of_RN487X_IsConnected:
 14559                           
 14560                           	psect	text35
 14561     0466                     __ptext35:	
 14562 ;; *************** function _RN487X_Init *****************
 14563 ;; Defined at:
 14564 ;;		line 54 in file "mcc_generated_files/rn487x/rn487x.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;		None
 14567 ;; Auto vars:     Size  Location     Type
 14568 ;;		None
 14569 ;; Return value:  Size  Location     Type
 14570 ;;                  1    wreg      _Bool 
 14571 ;; Registers used:
 14572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14573 ;; Tracked objects:
 14574 ;;		On entry : 0/0
 14575 ;;		On exit  : 0/0
 14576 ;;		Unchanged: 0/0
 14577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14582 ;;Total ram usage:        0 bytes
 14583 ;; Hardware stack levels used: 1
 14584 ;; Hardware stack levels required when called: 6
 14585 ;; This function calls:
 14586 ;;		_RN487X_Delay
 14587 ;;		_RN487X_IndicateRx
 14588 ;;		_RN487X_Read@rn487x_interface$F1335
 14589 ;;		_RN487X_Reset
 14590 ;;		_RN487X_SetSystemMode
 14591 ;;		_RN487X_is_rx_ready
 14592 ;; This function is called by:
 14593 ;;		_main
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597     0466                     _RN487X_Init:	
 14598                           ;psect for function _RN487X_Init
 14599                           
 14600     0466                     l9081:	
 14601                           ;incstack = 0
 14602                           ; Regs used in _RN487X_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14603                           
 14604                           
 14605                           ;mcc_generated_files/rn487x/rn487x.c: 57:     RN487X.SetSystemMode(APPLICATION_MODE);
 14606     0466  01F1               	clrf	RN487X_SetSystemMode@mode
 14607     0467  0AF1               	incf	RN487X_SetSystemMode@mode,f
 14608     0468  3074               	movlw	low ((_RN487X+12)| (0+32768))
 14609     0469  0084               	movwf	4
 14610     046A  3090               	movlw	high ((_RN487X+12)| (0+32768))
 14611     046B  0085               	movwf	5
 14612     046C  3F01               	moviw [1]fsr0
 14613     046D  008A               	movwf	10
 14614     046E  3F00               	moviw [0]fsr0
 14615     046F  000A               	callw
 14616     0470  3184               	pagesel	$
 14617                           
 14618                           ;mcc_generated_files/rn487x/rn487x.c: 59:     RN487X.ResetModule(1);
 14619     0471  01F1               	clrf	RN487X_Reset@value
 14620     0472  0AF1               	incf	RN487X_Reset@value,f
 14621     0473  3072               	movlw	low ((_RN487X+10)| (0+32768))
 14622     0474  0084               	movwf	4
 14623     0475  3090               	movlw	high ((_RN487X+10)| (0+32768))
 14624     0476  0085               	movwf	5
 14625     0477  3F01               	moviw [1]fsr0
 14626     0478  008A               	movwf	10
 14627     0479  3F00               	moviw [0]fsr0
 14628     047A  000A               	callw
 14629     047B  3184               	pagesel	$
 14630                           
 14631                           ;mcc_generated_files/rn487x/rn487x.c: 61:     RN487X.DelayMs((1));
 14632     047C  3001               	movlw	1
 14633     047D  00F4               	movwf	RN487X_Delay@delayCount
 14634     047E  3000               	movlw	0
 14635     047F  00F5               	movwf	RN487X_Delay@delayCount+1
 14636     0480  3076               	movlw	low ((_RN487X+14)| (0+32768))
 14637     0481  0084               	movwf	4
 14638     0482  3090               	movlw	high ((_RN487X+14)| (0+32768))
 14639     0483  0085               	movwf	5
 14640     0484  3F01               	moviw [1]fsr0
 14641     0485  008A               	movwf	10
 14642     0486  3F00               	moviw [0]fsr0
 14643     0487  000A               	callw
 14644     0488  3184               	pagesel	$
 14645                           
 14646                           ;mcc_generated_files/rn487x/rn487x.c: 63:     RN487X.ResetModule(0);
 14647     0489  01F1               	clrf	RN487X_Reset@value
 14648     048A  3072               	movlw	low ((_RN487X+10)| (0+32768))
 14649     048B  0084               	movwf	4
 14650     048C  3090               	movlw	high ((_RN487X+10)| (0+32768))
 14651     048D  0085               	movwf	5
 14652     048E  3F01               	moviw [1]fsr0
 14653     048F  008A               	movwf	10
 14654     0490  3F00               	moviw [0]fsr0
 14655     0491  000A               	callw
 14656     0492  3184               	pagesel	$
 14657                           
 14658                           ;mcc_generated_files/rn487x/rn487x.c: 66:     RN487X.IndicateRx(1);
 14659     0493  01F1               	clrf	RN487X_IndicateRx@value
 14660     0494  0AF1               	incf	RN487X_IndicateRx@value,f
 14661     0495  3070               	movlw	low ((_RN487X+8)| (0+32768))
 14662     0496  0084               	movwf	4
 14663     0497  3090               	movlw	high ((_RN487X+8)| (0+32768))
 14664     0498  0085               	movwf	5
 14665     0499  3F01               	moviw [1]fsr0
 14666     049A  008A               	movwf	10
 14667     049B  3F00               	moviw [0]fsr0
 14668     049C  000A               	callw
 14669     049D  3184               	pagesel	$
 14670                           
 14671                           ;mcc_generated_files/rn487x/rn487x.c: 68:     RN487X.DelayMs((200));
 14672     049E  30C8               	movlw	200
 14673     049F  00F4               	movwf	RN487X_Delay@delayCount
 14674     04A0  3000               	movlw	0
 14675     04A1  00F5               	movwf	RN487X_Delay@delayCount+1
 14676     04A2  3076               	movlw	low ((_RN487X+14)| (0+32768))
 14677     04A3  0084               	movwf	4
 14678     04A4  3090               	movlw	high ((_RN487X+14)| (0+32768))
 14679     04A5  0085               	movwf	5
 14680     04A6  3F01               	moviw [1]fsr0
 14681     04A7  008A               	movwf	10
 14682     04A8  3F00               	moviw [0]fsr0
 14683     04A9  000A               	callw
 14684     04AA  3184               	pagesel	$
 14685                           
 14686                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 14687     04AB  2CB5               	goto	l9085
 14688     04AC                     l9083:
 14689                           
 14690                           ;mcc_generated_files/rn487x/rn487x.c: 72:     {;mcc_generated_files/rn487x/rn487x.c: 73:
      +                                   RN487X.Read();
 14691     04AC  306A               	movlw	low ((_RN487X+2)| (0+32768))
 14692     04AD  0084               	movwf	4
 14693     04AE  3090               	movlw	high ((_RN487X+2)| (0+32768))
 14694     04AF  0085               	movwf	5
 14695     04B0  3F01               	moviw [1]fsr0
 14696     04B1  008A               	movwf	10
 14697     04B2  3F00               	moviw [0]fsr0
 14698     04B3  000A               	callw
 14699     04B4  3184               	pagesel	$
 14700     04B5                     l9085:
 14701                           
 14702                           ;mcc_generated_files/rn487x/rn487x.c: 71:     while (RN487X.DataReady())
 14703     04B5  306E               	movlw	low ((_RN487X+6)| (0+32768))
 14704     04B6  0084               	movwf	4
 14705     04B7  3090               	movlw	high ((_RN487X+6)| (0+32768))
 14706     04B8  0085               	movwf	5
 14707     04B9  3F01               	moviw [1]fsr0
 14708     04BA  008A               	movwf	10
 14709     04BB  3F00               	moviw [0]fsr0
 14710     04BC  000A               	callw
 14711     04BD  3184               	pagesel	$
 14712     04BE  3A00               	xorlw	0
 14713     04BF  1D03               	skipz
 14714     04C0  2CC2               	goto	u5081
 14715     04C1  2CC3               	goto	u5080
 14716     04C2                     u5081:
 14717     04C2  2CAC               	goto	l9083
 14718     04C3                     u5080:
 14719     04C3                     l876:
 14720     04C3  0008               	return
 14721     04C4                     __end_of_RN487X_Init:
 14722                           
 14723                           	psect	text36
 14724     1776                     __ptext36:	
 14725 ;; *************** function _RN487X_is_rx_ready *****************
 14726 ;; Defined at:
 14727 ;;		line 267 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14728 ;; Parameters:    Size  Location     Type
 14729 ;;		None
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      _Bool 
 14734 ;; Registers used:
 14735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; Hardware stack levels required when called: 5
 14748 ;; This function calls:
 14749 ;;		_EUSART1_is_rx_ready
 14750 ;;		_EUSART2_is_rx_ready
 14751 ;; This function is called by:
 14752 ;;		_RN487X_DataReady
 14753 ;;		_RN487X_Init
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757     1776                     _RN487X_is_rx_ready:	
 14758                           ;psect for function _RN487X_is_rx_ready
 14759                           
 14760     1776                     l8571:	
 14761                           ;incstack = 0
 14762                           ; Regs used in _RN487X_is_rx_ready: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14763                           
 14764                           
 14765                           ;mcc_generated_files/rn487x/rn487x_interface.c: 269:     return uart[UART_BLE].DataReady
      +                          ();
 14766     1776  301A               	movlw	low ((_uart+26)| (0+32768))
 14767     1777  0084               	movwf	4
 14768     1778  3090               	movlw	high ((_uart+26)| (0+32768))
 14769     1779  0085               	movwf	5
 14770     177A  3F01               	moviw [1]fsr0
 14771     177B  008A               	movwf	10
 14772     177C  3F00               	moviw [0]fsr0
 14773     177D  000A               	callw
 14774     177E  3197               	pagesel	$
 14775     177F                     l792:
 14776     177F  0008               	return
 14777     1780                     __end_of_RN487X_is_rx_ready:
 14778                           
 14779                           	psect	text37
 14780     1750                     __ptext37:	
 14781 ;; *************** function _EUSART1_is_rx_ready *****************
 14782 ;; Defined at:
 14783 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;		None
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;		None
 14788 ;; Return value:  Size  Location     Type
 14789 ;;                  1    wreg      _Bool 
 14790 ;; Registers used:
 14791 ;;		wreg, status,2, status,0
 14792 ;; Tracked objects:
 14793 ;;		On entry : 0/0
 14794 ;;		On exit  : 0/0
 14795 ;;		Unchanged: 0/0
 14796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14801 ;;Total ram usage:        0 bytes
 14802 ;; Hardware stack levels used: 1
 14803 ;; Hardware stack levels required when called: 4
 14804 ;; This function calls:
 14805 ;;		Nothing
 14806 ;; This function is called by:
 14807 ;;		_RN487X_is_rx_ready
 14808 ;;		_RN487X_Example_TransparentUart
 14809 ;;		_main
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813     1750                     _EUSART1_is_rx_ready:	
 14814                           ;psect for function _EUSART1_is_rx_ready
 14815                           
 14816     1750                     l8515:	
 14817                           ;incstack = 0
 14818                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 14819                           
 14820                           
 14821                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 14822     1750  0140               	movlb	0	; select bank0
 14823     1751  0857               	movf	_eusart1RxCount,w	;volatile
 14824     1752  1D03               	btfss	3,2
 14825     1753  2F55               	goto	u4631
 14826     1754  2F57               	goto	u4630
 14827     1755                     u4631:
 14828     1755  3001               	movlw	1
 14829     1756  2F58               	goto	u4640
 14830     1757                     u4630:
 14831     1757  3000               	movlw	0
 14832     1758                     u4640:
 14833     1758                     l1198:
 14834     1758  0008               	return
 14835     1759                     __end_of_EUSART1_is_rx_ready:
 14836                           
 14837                           	psect	text38
 14838     1747                     __ptext38:	
 14839 ;; *************** function _EUSART2_is_rx_ready *****************
 14840 ;; Defined at:
 14841 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;		None
 14844 ;; Auto vars:     Size  Location     Type
 14845 ;;		None
 14846 ;; Return value:  Size  Location     Type
 14847 ;;                  1    wreg      _Bool 
 14848 ;; Registers used:
 14849 ;;		wreg, status,2, status,0
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : 0/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14859 ;;Total ram usage:        0 bytes
 14860 ;; Hardware stack levels used: 1
 14861 ;; Hardware stack levels required when called: 4
 14862 ;; This function calls:
 14863 ;;		Nothing
 14864 ;; This function is called by:
 14865 ;;		_RN487X_is_rx_ready
 14866 ;;		_RN487X_Example_TransparentUart
 14867 ;;		_main
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871     1747                     _EUSART2_is_rx_ready:	
 14872                           ;psect for function _EUSART2_is_rx_ready
 14873                           
 14874     1747                     l8511:	
 14875                           ;incstack = 0
 14876                           ; Regs used in _EUSART2_is_rx_ready: [wreg+status,2+status,0]
 14877                           
 14878                           
 14879                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 14880     1747  0140               	movlb	0	; select bank0
 14881     1748  085E               	movf	_eusart2RxCount,w	;volatile
 14882     1749  1D03               	btfss	3,2
 14883     174A  2F4C               	goto	u4611
 14884     174B  2F4E               	goto	u4610
 14885     174C                     u4611:
 14886     174C  3001               	movlw	1
 14887     174D  2F4F               	goto	u4620
 14888     174E                     u4610:
 14889     174E  3000               	movlw	0
 14890     174F                     u4620:
 14891     174F                     l1054:
 14892     174F  0008               	return
 14893     1750                     __end_of_EUSART2_is_rx_ready:
 14894                           
 14895                           	psect	text39
 14896     17CC                     __ptext39:	
 14897 ;; *************** function _RN487X_SetSystemMode *****************
 14898 ;; Defined at:
 14899 ;;		line 301 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  mode            1    1[COMMON] enum E204
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;		None
 14904 ;; Return value:  Size  Location     Type
 14905 ;;                  1    wreg      void 
 14906 ;; Registers used:
 14907 ;;		wreg, status,2, status,0
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14917 ;;Total ram usage:        1 bytes
 14918 ;; Hardware stack levels used: 1
 14919 ;; Hardware stack levels required when called: 4
 14920 ;; This function calls:
 14921 ;;		Nothing
 14922 ;; This function is called by:
 14923 ;;		_RN487X_Init
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927     17CC                     _RN487X_SetSystemMode:	
 14928                           ;psect for function _RN487X_SetSystemMode
 14929                           
 14930     17CC                     l816:	
 14931                           ;incstack = 0
 14932                           ; Regs used in _RN487X_SetSystemMode: [wreg+status,2+status,0]
 14933                           ;mcc_generated_files/rn487x/rn487x_interface.c: 301: static void RN487X_SetSystemMode(RN
      +                          487X_SYSTEM_MODES_t mode);mcc_generated_files/rn487x/rn487x_interface.c: 302: {;mcc_gene
      +                          rated_files/rn487x/rn487x_interface.c: 304:     do { TRISAbits.TRISA7 = 0; } while(0);
 14934                           
 14935     17CC  0140               	movlb	0	; select bank0
 14936     17CD  1392               	bcf	18,7	;volatile
 14937     17CE                     l8733:
 14938                           
 14939                           ;mcc_generated_files/rn487x/rn487x_interface.c: 306:     if (APPLICATION_MODE == mode)
 14940     17CE  0371               	decf	RN487X_SetSystemMode@mode,w
 14941     17CF  1D03               	btfss	3,2
 14942     17D0  2FD2               	goto	u4911
 14943     17D1  2FD3               	goto	u4910
 14944     17D2                     u4911:
 14945     17D2  2FD5               	goto	l822
 14946     17D3                     u4910:
 14947     17D3                     l819:	
 14948                           ;mcc_generated_files/rn487x/rn487x_interface.c: 307:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 308:         do { LATAbits.LATA7 = 1; } while(0);
 14949                           
 14950     17D3  1798               	bsf	24,7	;volatile
 14951     17D4  2FD6               	goto	l824
 14952     17D5                     l822:	
 14953                           ;mcc_generated_files/rn487x/rn487x_interface.c: 311:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
 14954                           
 14955     17D5  1398               	bcf	24,7	;volatile
 14956     17D6                     l824:	
 14957                           ;mcc_generated_files/rn487x/rn487x_interface.c: 316:     do { TRISAbits.TRISA7 = 1; } wh
      +                          ile(0);
 14958                           
 14959     17D6  1792               	bsf	18,7	;volatile
 14960     17D7                     l826:
 14961     17D7  0008               	return
 14962     17D8                     __end_of_RN487X_SetSystemMode:
 14963                           
 14964                           	psect	text40
 14965     17B5                     __ptext40:	
 14966 ;; *************** function _RN487X_Reset *****************
 14967 ;; Defined at:
 14968 ;;		line 277 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;  value           1    1[COMMON] _Bool 
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;		None
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      void 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14982 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;Total ram usage:        1 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 4
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_RN487X_Init
 14993 ;; This function uses a non-reentrant model
 14994 ;;
 14995                           
 14996     17B5                     _RN487X_Reset:	
 14997                           ;psect for function _RN487X_Reset
 14998                           
 14999     17B5                     l8729:	
 15000                           ;incstack = 0
 15001                           ; Regs used in _RN487X_Reset: [wreg+status,2+status,0]
 15002                           
 15003                           
 15004                           ;mcc_generated_files/rn487x/rn487x_interface.c: 277: static void RN487X_Reset(_Bool valu
      +                          e);mcc_generated_files/rn487x/rn487x_interface.c: 278: {;mcc_generated_files/rn487x/rn48
      +                          7x_interface.c: 279:     if (1 == value)
 15005     17B5  0371               	decf	RN487X_Reset@value,w
 15006     17B6  1D03               	btfss	3,2
 15007     17B7  2FB9               	goto	u4891
 15008     17B8  2FBA               	goto	u4890
 15009     17B9                     u4891:
 15010     17B9  2FBD               	goto	l802
 15011     17BA                     u4890:
 15012     17BA                     l799:	
 15013                           ;mcc_generated_files/rn487x/rn487x_interface.c: 280:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 281:         do { LATAbits.LATA0 = 0; } while(0);
 15014                           
 15015     17BA  0140               	movlb	0	; select bank0
 15016     17BB  1018               	bcf	24,0	;volatile
 15017     17BC  2FBF               	goto	l804
 15018     17BD                     l802:	
 15019                           ;mcc_generated_files/rn487x/rn487x_interface.c: 284:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 285:         do { LATAbits.LATA0 = 1; } while(0);
 15020                           
 15021     17BD  0140               	movlb	0	; select bank0
 15022     17BE  1418               	bsf	24,0	;volatile
 15023     17BF                     l804:
 15024     17BF  0008               	return
 15025     17C0                     __end_of_RN487X_Reset:
 15026                           
 15027                           	psect	text41
 15028     17AA                     __ptext41:	
 15029 ;; *************** function _RN487X_IndicateRx *****************
 15030 ;; Defined at:
 15031 ;;		line 289 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  value           1    1[COMMON] _Bool 
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;		None
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		wreg, status,2, status,0
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15049 ;;Total ram usage:        1 bytes
 15050 ;; Hardware stack levels used: 1
 15051 ;; Hardware stack levels required when called: 4
 15052 ;; This function calls:
 15053 ;;		Nothing
 15054 ;; This function is called by:
 15055 ;;		_RN487X_Init
 15056 ;; This function uses a non-reentrant model
 15057 ;;
 15058                           
 15059     17AA                     _RN487X_IndicateRx:	
 15060                           ;psect for function _RN487X_IndicateRx
 15061                           
 15062     17AA                     l8731:	
 15063                           ;incstack = 0
 15064                           ; Regs used in _RN487X_IndicateRx: [wreg+status,2+status,0]
 15065                           
 15066                           
 15067                           ;mcc_generated_files/rn487x/rn487x_interface.c: 289: static void RN487X_IndicateRx(_Bool
      +                           value);mcc_generated_files/rn487x/rn487x_interface.c: 290: {;mcc_generated_files/rn487x
      +                          /rn487x_interface.c: 291:     if (1 == value)
 15068     17AA  0371               	decf	RN487X_IndicateRx@value,w
 15069     17AB  1D03               	btfss	3,2
 15070     17AC  2FAE               	goto	u4901
 15071     17AD  2FAF               	goto	u4900
 15072     17AE                     u4901:
 15073     17AE  2FB2               	goto	l811
 15074     17AF                     u4900:
 15075     17AF                     l808:	
 15076                           ;mcc_generated_files/rn487x/rn487x_interface.c: 292:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 293:         do { LATCbits.LATC6 = 0; } while(0);
 15077                           
 15078     17AF  0140               	movlb	0	; select bank0
 15079     17B0  131A               	bcf	26,6	;volatile
 15080     17B1  2FB4               	goto	l813
 15081     17B2                     l811:	
 15082                           ;mcc_generated_files/rn487x/rn487x_interface.c: 296:     {;mcc_generated_files/rn487x/rn
      +                          487x_interface.c: 297:         do { LATCbits.LATC6 = 1; } while(0);
 15083                           
 15084     17B2  0140               	movlb	0	; select bank0
 15085     17B3  171A               	bsf	26,6	;volatile
 15086     17B4                     l813:
 15087     17B4  0008               	return
 15088     17B5                     __end_of_RN487X_IndicateRx:
 15089                           
 15090                           	psect	text42
 15091     0941                     __ptext42:	
 15092 ;; *************** function _LIGHTBLUE_TemperatureSensor *****************
 15093 ;; Defined at:
 15094 ;;		line 307 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15095 ;; Parameters:    Size  Location     Type
 15096 ;;		None
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;  payload         5   24[BANK0 ] unsigned char [5]
 15099 ;;  temperature     2   29[BANK0 ] short 
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  1    wreg      void 
 15102 ;; Registers used:
 15103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15110 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15112 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15113 ;;Total ram usage:        7 bytes
 15114 ;; Hardware stack levels used: 1
 15115 ;; Hardware stack levels required when called: 15
 15116 ;; This function calls:
 15117 ;;		_LIGHTBLUE_SendPacket
 15118 ;;		_LIGHTBLUE_SplitWord
 15119 ;;		_MCP9844_GetTemperatureValue
 15120 ;; This function is called by:
 15121 ;;		_main
 15122 ;; This function uses a non-reentrant model
 15123 ;;
 15124                           
 15125     0941                     _LIGHTBLUE_TemperatureSensor:	
 15126                           ;psect for function _LIGHTBLUE_TemperatureSensor
 15127                           
 15128     0941                     l8905:	
 15129                           ;incstack = 0
 15130                           ; Regs used in _LIGHTBLUE_TemperatureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15131                           
 15132                           
 15133                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 309:     char payload[5];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 310:     int16_t temperature;;mcc_generated
      +                          _files/application/LIGHTBLUE_service.c: 312:     *payload = '\0';
 15134     0941  0140               	movlb	0	; select bank0
 15135     0942  01B8               	clrf	LIGHTBLUE_TemperatureSensor@payload
 15136     0943                     l8907:
 15137                           
 15138                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 313:     MCP9844_GetTemperatureVal
      +                          ue(&temperature);
 15139     0943  303D               	movlw	(low (LIGHTBLUE_TemperatureSensor@temperature| 0))& (0+255)
 15140     0944  3187  27F3  3189   	fcall	_MCP9844_GetTemperatureValue
 15141     0947                     l8909:
 15142                           
 15143                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 315:     LIGHTBLUE_SplitWord(paylo
      +                          ad, temperature);
 15144     0947  0140               	movlb	0	; select bank0
 15145     0948  083E               	movf	LIGHTBLUE_TemperatureSensor@temperature+1,w
 15146     0949  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 15147     094A  083D               	movf	LIGHTBLUE_TemperatureSensor@temperature,w
 15148     094B  00F9               	movwf	LIGHTBLUE_SplitWord@value
 15149     094C  3038               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 15150     094D  3188  200C  3189   	fcall	_LIGHTBLUE_SplitWord
 15151     0950                     l8911:
 15152                           
 15153                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 317:     LIGHTBLUE_SendPacket(TEMP
      +                          ERATURE_DATA_ID, payload);
 15154     0950  3038               	movlw	(low (LIGHTBLUE_TemperatureSensor@payload| 0))& (0+255)
 15155     0951  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 15156     0952  3054               	movlw	84
 15157     0953  3182  22EE  3189   	fcall	_LIGHTBLUE_SendPacket
 15158     0956                     l121:
 15159     0956  0008               	return
 15160     0957                     __end_of_LIGHTBLUE_TemperatureSensor:
 15161                           
 15162                           	psect	text43
 15163     07F3                     __ptext43:	
 15164 ;; *************** function _MCP9844_GetTemperatureValue *****************
 15165 ;; Defined at:
 15166 ;;		line 70 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;  temperature     1    wreg     PTR short 
 15169 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;  temperature     1   11[COMMON] PTR short 
 15172 ;;		 -> LIGHTBLUE_TemperatureSensor@temperature(2), 
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      void 
 15175 ;; Registers used:
 15176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;Total ram usage:        1 bytes
 15187 ;; Hardware stack levels used: 1
 15188 ;; Hardware stack levels required when called: 14
 15189 ;; This function calls:
 15190 ;;		_MCP9844_CalcTemperature
 15191 ;; This function is called by:
 15192 ;;		_LIGHTBLUE_TemperatureSensor
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196     07F3                     _MCP9844_GetTemperatureValue:	
 15197                           ;psect for function _MCP9844_GetTemperatureValue
 15198                           
 15199                           
 15200                           ;incstack = 0
 15201                           ; Regs used in _MCP9844_GetTemperatureValue: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15202                           ;MCP9844_GetTemperatureValue@temperature stored from wreg
 15203     07F3  00FB               	movwf	MCP9844_GetTemperatureValue@temperature
 15204     07F4                     l8665:
 15205                           
 15206                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 70: void MCP9844_GetTemperatureV
      +                          alue(int16_t *temperature);mcc_generated_files/application/MCP9844_temp_sensor.c: 71: {;
      +                          mcc_generated_files/application/MCP9844_temp_sensor.c: 72:     *temperature = MCP9844_Ca
      +                          lcTemperature();
 15207     07F4  318B  2365  3187   	fcall	_MCP9844_CalcTemperature
 15208     07F7  087B               	movf	MCP9844_GetTemperatureValue@temperature,w
 15209     07F8  0086               	movwf	6
 15210     07F9  0187               	clrf	7
 15211     07FA  0140               	movlb	0	; select bank0
 15212     07FB  082D               	movf	?_MCP9844_CalcTemperature,w
 15213     07FC  3FC0               	movwi [0]fsr1
 15214     07FD  082E               	movf	?_MCP9844_CalcTemperature+1,w
 15215     07FE  3FC1               	movwi [1]fsr1
 15216     07FF                     l68:
 15217     07FF  0008               	return
 15218     0800                     __end_of_MCP9844_GetTemperatureValue:
 15219                           
 15220                           	psect	text44
 15221     0B65                     __ptext44:	
 15222 ;; *************** function _MCP9844_CalcTemperature *****************
 15223 ;; Defined at:
 15224 ;;		line 75 in file "mcc_generated_files/application/MCP9844_temp_sensor.c"
 15225 ;; Parameters:    Size  Location     Type
 15226 ;;		None
 15227 ;; Auto vars:     Size  Location     Type
 15228 ;;  temperatureD    2   22[BANK0 ] short 
 15229 ;;  lowerByte       1   21[BANK0 ] unsigned char 
 15230 ;;  upperByte       1   20[BANK0 ] unsigned char 
 15231 ;; Return value:  Size  Location     Type
 15232 ;;                  2   13[BANK0 ] short 
 15233 ;; Registers used:
 15234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15235 ;; Tracked objects:
 15236 ;;		On entry : 0/0
 15237 ;;		On exit  : 0/0
 15238 ;;		Unchanged: 0/0
 15239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15241 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15242 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15243 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15244 ;;Total ram usage:       11 bytes
 15245 ;; Hardware stack levels used: 1
 15246 ;; Hardware stack levels required when called: 13
 15247 ;; This function calls:
 15248 ;;		_i2c_read2ByteRegister
 15249 ;; This function is called by:
 15250 ;;		_MCP9844_GetTemperatureValue
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254     0B65                     _MCP9844_CalcTemperature:	
 15255                           ;psect for function _MCP9844_CalcTemperature
 15256                           
 15257     0B65                     l8543:	
 15258                           ;incstack = 0
 15259                           ; Regs used in _MCP9844_CalcTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15260                           
 15261                           
 15262                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 77:     int16_t temperatureData;
      +                          ;mcc_generated_files/application/MCP9844_temp_sensor.c: 78:     uint8_t upperByte;;mcc_g
      +                          enerated_files/application/MCP9844_temp_sensor.c: 79:     uint8_t lowerByte;;mcc_generat
      +                          ed_files/application/MCP9844_temp_sensor.c: 81:     temperatureData = i2c_read2ByteRegis
      +                          ter((0x18), (0x05));
 15263     0B65  3005               	movlw	5
 15264     0B66  0140               	movlb	0	; select bank0
 15265     0B67  00A4               	movwf	i2c_read2ByteRegister@reg
 15266     0B68  3018               	movlw	24
 15267     0B69  3187  272C  318B   	fcall	_i2c_read2ByteRegister
 15268     0B6C  0140               	movlb	0	; select bank0
 15269     0B6D  0825               	movf	?_i2c_read2ByteRegister+1,w
 15270     0B6E  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 15271     0B6F  0824               	movf	?_i2c_read2ByteRegister,w
 15272     0B70  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 15273     0B71                     l8545:
 15274                           
 15275                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 82:     upperByte = ((temperatur
      +                          eData & (0xFF00)) >> 8) & (0x1F);
 15276     0B71  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 15277     0B72  391F               	andlw	31
 15278     0B73  00B4               	movwf	MCP9844_CalcTemperature@upperByte
 15279     0B74                     l8547:
 15280                           
 15281                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 83:     lowerByte = (uint8_t)tem
      +                          peratureData;
 15282     0B74  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 15283     0B75  00B5               	movwf	MCP9844_CalcTemperature@lowerByte
 15284     0B76                     l8549:
 15285                           
 15286                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 85:     temperatureData = ((int1
      +                          6_t)(upperByte << 8) | lowerByte);
 15287     0B76  0835               	movf	MCP9844_CalcTemperature@lowerByte,w
 15288     0B77  00AF               	movwf	??_MCP9844_CalcTemperature
 15289     0B78  01B0               	clrf	??_MCP9844_CalcTemperature+1
 15290     0B79  0834               	movf	MCP9844_CalcTemperature@upperByte,w
 15291     0B7A  00B1               	movwf	??_MCP9844_CalcTemperature+2
 15292     0B7B  01B2               	clrf	??_MCP9844_CalcTemperature+3
 15293     0B7C  0831               	movf	??_MCP9844_CalcTemperature+2,w
 15294     0B7D  00B2               	movwf	??_MCP9844_CalcTemperature+3
 15295     0B7E  01B1               	clrf	??_MCP9844_CalcTemperature+2
 15296     0B7F  082F               	movf	??_MCP9844_CalcTemperature,w
 15297     0B80  0431               	iorwf	??_MCP9844_CalcTemperature+2,w
 15298     0B81  00B6               	movwf	MCP9844_CalcTemperature@temperatureData
 15299     0B82  0830               	movf	??_MCP9844_CalcTemperature+1,w
 15300     0B83  0432               	iorwf	??_MCP9844_CalcTemperature+3,w
 15301     0B84  00B7               	movwf	MCP9844_CalcTemperature@temperatureData+1
 15302     0B85                     l8551:
 15303                           
 15304                           ;mcc_generated_files/application/MCP9844_temp_sensor.c: 87:     return temperatureData;
 15305     0B85  0837               	movf	MCP9844_CalcTemperature@temperatureData+1,w
 15306     0B86  00AE               	movwf	?_MCP9844_CalcTemperature+1
 15307     0B87  0836               	movf	MCP9844_CalcTemperature@temperatureData,w
 15308     0B88  00AD               	movwf	?_MCP9844_CalcTemperature
 15309     0B89                     l71:
 15310     0B89  0008               	return
 15311     0B8A                     __end_of_MCP9844_CalcTemperature:
 15312                           
 15313                           	psect	text45
 15314     072C                     __ptext45:	
 15315 ;; *************** function _i2c_read2ByteRegister *****************
 15316 ;; Defined at:
 15317 ;;		line 135 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15318 ;; Parameters:    Size  Location     Type
 15319 ;;  address         1    wreg     unsigned char 
 15320 ;;  reg             1    4[BANK0 ] unsigned char 
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;  address         1   10[BANK0 ] unsigned char 
 15323 ;;  result          2   11[BANK0 ] unsigned short 
 15324 ;; Return value:  Size  Location     Type
 15325 ;;                  2    4[BANK0 ] unsigned short 
 15326 ;; Registers used:
 15327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15328 ;; Tracked objects:
 15329 ;;		On entry : 0/0
 15330 ;;		On exit  : 0/0
 15331 ;;		Unchanged: 0/0
 15332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15334 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15336 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15337 ;;Total ram usage:        9 bytes
 15338 ;; Hardware stack levels used: 1
 15339 ;; Hardware stack levels required when called: 12
 15340 ;; This function calls:
 15341 ;;		_I2C1_Close
 15342 ;;		_I2C1_MasterWrite
 15343 ;;		_I2C1_Open
 15344 ;;		_I2C1_SetAddressNackCallback
 15345 ;;		_I2C1_SetBuffer
 15346 ;;		_I2C1_SetDataCompleteCallback
 15347 ;; This function is called by:
 15348 ;;		_MCP9844_CalcTemperature
 15349 ;;		_MCP9844_GetManufacture
 15350 ;;		_MCP9844_GetDevice
 15351 ;; This function uses a non-reentrant model
 15352 ;;
 15353                           
 15354     072C                     _i2c_read2ByteRegister:	
 15355                           ;psect for function _i2c_read2ByteRegister
 15356                           
 15357                           
 15358                           ;incstack = 0
 15359                           ; Regs used in _i2c_read2ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15360                           ;i2c_read2ByteRegister@address stored from wreg
 15361     072C  0140               	movlb	0	; select bank0
 15362     072D  00AA               	movwf	i2c_read2ByteRegister@address
 15363     072E                     l8469:
 15364     072E                     l8471:	
 15365                           ;mcc_generated_files/drivers/i2c_simple_master.c: 135: uint16_t i2c_read2ByteRegister(i2
      +                          c1_address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 136:
      +                           {;mcc_generated_files/drivers/i2c_simple_master.c: 138:     uint16_t result;;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 140:     while(!I2C1_Open(address));
 15366                           
 15367     072E  0140               	movlb	0	; select bank0
 15368     072F  082A               	movf	i2c_read2ByteRegister@address,w
 15369     0730  318E  26A0  3187   	fcall	_I2C1_Open
 15370     0733  3A00               	xorlw	0
 15371     0734  1903               	skipnz
 15372     0735  2F37               	goto	u4571
 15373     0736  2F38               	goto	u4570
 15374     0737                     u4571:
 15375     0737  2F2E               	goto	l8471
 15376     0738                     u4570:
 15377     0738                     l8473:
 15378                           
 15379                           ;mcc_generated_files/drivers/i2c_simple_master.c: 141:     I2C1_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&result);
 15380     0738  306B               	movlw	low _rd2RegCompleteHandler
 15381     0739  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 15382     073A  3008               	movlw	high _rd2RegCompleteHandler
 15383     073B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15384     073C  302B               	movlw	(low (i2c_read2ByteRegister@result| 0))& (0+255)
 15385     073D  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 15386     073E  3197  2794  3187   	fcall	_I2C1_SetDataCompleteCallback
 15387     0741                     l8475:
 15388                           
 15389                           ;mcc_generated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(&reg,1);
 15390     0741  3001               	movlw	1
 15391     0742  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15392     0743  3000               	movlw	0
 15393     0744  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15394     0745  3024               	movlw	(low (i2c_read2ByteRegister@reg| 0))& (0+255)
 15395     0746  3197  27F2  3187   	fcall	_I2C1_SetBuffer
 15396     0749                     l8477:
 15397                           
 15398                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 15399     0749  3000               	movlw	0
 15400     074A  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 15401     074B  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 15402     074C  3000               	movlw	0
 15403     074D  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 15404     074E  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 15405     074F  3197  279F  3187   	fcall	_I2C1_SetAddressNackCallback
 15406     0752                     l8479:
 15407                           
 15408                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     I2C1_MasterWrite();
 15409     0752  3196  26A3  3187   	fcall	_I2C1_MasterWrite
 15410     0755                     l8481:	
 15411                           ;mcc_generated_files/drivers/i2c_simple_master.c: 145:     while(I2C1_BUSY == I2C1_Close
      +                          ());
 15412                           
 15413     0755  3189  219C  3187   	fcall	_I2C1_Close
 15414     0758  3A01               	xorlw	1
 15415     0759  1903               	skipnz
 15416     075A  2F5C               	goto	u4581
 15417     075B  2F5D               	goto	u4580
 15418     075C                     u4581:
 15419     075C  2F55               	goto	l8481
 15420     075D                     u4580:
 15421     075D                     l8483:
 15422                           
 15423                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147:     return (result << 8 | result 
      +                          >> 8);
 15424     075D  0140               	movlb	0	; select bank0
 15425     075E  082C               	movf	i2c_read2ByteRegister@result+1,w
 15426     075F  00A7               	movwf	??_i2c_read2ByteRegister+1
 15427     0760  082B               	movf	i2c_read2ByteRegister@result,w
 15428     0761  00A6               	movwf	??_i2c_read2ByteRegister
 15429     0762  0827               	movf	??_i2c_read2ByteRegister+1,w
 15430     0763  00A6               	movwf	??_i2c_read2ByteRegister
 15431     0764  01A7               	clrf	??_i2c_read2ByteRegister+1
 15432     0765  082B               	movf	i2c_read2ByteRegister@result,w
 15433     0766  00A9               	movwf	??_i2c_read2ByteRegister+3
 15434     0767  01A8               	clrf	??_i2c_read2ByteRegister+2
 15435     0768  0826               	movf	??_i2c_read2ByteRegister,w
 15436     0769  0428               	iorwf	??_i2c_read2ByteRegister+2,w
 15437     076A  00A4               	movwf	?_i2c_read2ByteRegister
 15438     076B  0827               	movf	??_i2c_read2ByteRegister+1,w
 15439     076C  0429               	iorwf	??_i2c_read2ByteRegister+3,w
 15440     076D  00A5               	movwf	?_i2c_read2ByteRegister+1
 15441     076E                     l543:
 15442     076E  0008               	return
 15443     076F                     __end_of_i2c_read2ByteRegister:
 15444                           
 15445                           	psect	text46
 15446     0244                     __ptext46:	
 15447 ;; *************** function _LIGHTBLUE_SendSerialData *****************
 15448 ;; Defined at:
 15449 ;;		line 383 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;  serialData      1    wreg     PTR unsigned char 
 15452 ;;		 -> lightBlueSerial(80), 
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;  serialData      1    9[COMMON] PTR unsigned char 
 15455 ;;		 -> lightBlueSerial(80), 
 15456 ;;  length          1    8[COMMON] unsigned char 
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15470 ;;Total ram usage:        3 bytes
 15471 ;; Hardware stack levels used: 1
 15472 ;; Hardware stack levels required when called: 6
 15473 ;; This function calls:
 15474 ;;		_RN487X_Write
 15475 ;;		_strlen
 15476 ;; This function is called by:
 15477 ;;		_main
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481     0244                     _LIGHTBLUE_SendSerialData:	
 15482                           ;psect for function _LIGHTBLUE_SendSerialData
 15483                           
 15484                           
 15485                           ;incstack = 0
 15486                           ; Regs used in _LIGHTBLUE_SendSerialData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15487                           ;LIGHTBLUE_SendSerialData@serialData stored from wreg
 15488     0244  00F9               	movwf	LIGHTBLUE_SendSerialData@serialData
 15489     0245                     l8959:
 15490                           
 15491                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 383: void LIGHTBLUE_SendSerialData
      +                          (char* serialData);mcc_generated_files/application/LIGHTBLUE_service.c: 384: {;mcc_gener
      +                          ated_files/application/LIGHTBLUE_service.c: 385:     uint8_t length = strlen(serialData)
      +                           * 2;
 15492     0245  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 15493     0246  00F1               	movwf	strlen@s
 15494     0247  3002               	movlw	2
 15495     0248  00F2               	movwf	strlen@s+1
 15496     0249  318A  2215  3182   	fcall	_strlen
 15497     024C  0871               	movf	?_strlen,w
 15498     024D  0709               	addwf	9,w
 15499     024E  00F8               	movwf	LIGHTBLUE_SendSerialData@length
 15500     024F                     l8961:
 15501                           
 15502                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 387:     RN487X.Write(('['));
 15503     024F  305B               	movlw	91
 15504     0250  00F6               	movwf	RN487X_Write@txData
 15505     0251  3068               	movlw	low (_RN487X| (0+32768))
 15506     0252  0084               	movwf	4
 15507     0253  3090               	movlw	high (_RN487X| (0+32768))
 15508     0254  0085               	movwf	5
 15509     0255  3F01               	moviw [1]fsr0
 15510     0256  008A               	movwf	10
 15511     0257  3F00               	moviw [0]fsr0
 15512     0258  000A               	callw
 15513     0259  3182               	pagesel	$
 15514     025A                     l8963:
 15515                           
 15516                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 388:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 15517     025A  0140               	movlb	0	; select bank0
 15518     025B  086B               	movf	_sequenceNumber,w
 15519     025C  390F               	andlw	15
 15520     025D  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 15521     025E  0086               	movwf	6
 15522     025F  3001               	movlw	1	; select bank2/3
 15523     0260  0087               	movwf	7
 15524     0261  0801               	movf	1,w
 15525     0262  00F6               	movwf	RN487X_Write@txData
 15526     0263  3068               	movlw	low (_RN487X| (0+32768))
 15527     0264  0084               	movwf	4
 15528     0265  3090               	movlw	high (_RN487X| (0+32768))
 15529     0266  0085               	movwf	5
 15530     0267  3F01               	moviw [1]fsr0
 15531     0268  008A               	movwf	10
 15532     0269  3F00               	moviw [0]fsr0
 15533     026A  000A               	callw
 15534     026B  3182               	pagesel	$
 15535     026C                     l8965:
 15536     026C  3001               	movlw	1
 15537     026D  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 15538     026E  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 15539     026F  0140               	movlb	0	; select bank0
 15540     0270  07EB               	addwf	_sequenceNumber,f
 15541     0271                     l8967:
 15542                           
 15543                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 389:     RN487X.Write(SERIAL_DATA_
      +                          ID);
 15544     0271  3053               	movlw	83
 15545     0272  00F6               	movwf	RN487X_Write@txData
 15546     0273  3068               	movlw	low (_RN487X| (0+32768))
 15547     0274  0084               	movwf	4
 15548     0275  3090               	movlw	high (_RN487X| (0+32768))
 15549     0276  0085               	movwf	5
 15550     0277  3F01               	moviw [1]fsr0
 15551     0278  008A               	movwf	10
 15552     0279  3F00               	moviw [0]fsr0
 15553     027A  000A               	callw
 15554     027B  3182               	pagesel	$
 15555     027C                     l8969:
 15556                           
 15557                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 390:     RN487X.Write((_hex[(lengt
      +                          h >> 4) & 0xF]));
 15558     027C  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 15559     027D  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 15560     027E  3004               	movlw	4
 15561     027F                     u4945:
 15562     027F  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 15563     0280  0B89               	decfsz	9,f
 15564     0281  2A7F               	goto	u4945
 15565     0282  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 15566     0283  390F               	andlw	15
 15567     0284  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 15568     0285  0086               	movwf	6
 15569     0286  3001               	movlw	1	; select bank2/3
 15570     0287  0087               	movwf	7
 15571     0288  0801               	movf	1,w
 15572     0289  00F6               	movwf	RN487X_Write@txData
 15573     028A  3068               	movlw	low (_RN487X| (0+32768))
 15574     028B  0084               	movwf	4
 15575     028C  3090               	movlw	high (_RN487X| (0+32768))
 15576     028D  0085               	movwf	5
 15577     028E  3F01               	moviw [1]fsr0
 15578     028F  008A               	movwf	10
 15579     0290  3F00               	moviw [0]fsr0
 15580     0291  000A               	callw
 15581     0292  3182               	pagesel	$
 15582     0293                     l8971:
 15583                           
 15584                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 391:     RN487X.Write((_hex[(lengt
      +                          h) & 0xF]));
 15585     0293  0878               	movf	LIGHTBLUE_SendSerialData@length,w
 15586     0294  390F               	andlw	15
 15587     0295  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 15588     0296  0086               	movwf	6
 15589     0297  3001               	movlw	1	; select bank2/3
 15590     0298  0087               	movwf	7
 15591     0299  0801               	movf	1,w
 15592     029A  00F6               	movwf	RN487X_Write@txData
 15593     029B  3068               	movlw	low (_RN487X| (0+32768))
 15594     029C  0084               	movwf	4
 15595     029D  3090               	movlw	high (_RN487X| (0+32768))
 15596     029E  0085               	movwf	5
 15597     029F  3F01               	moviw [1]fsr0
 15598     02A0  008A               	movwf	10
 15599     02A1  3F00               	moviw [0]fsr0
 15600     02A2  000A               	callw
 15601     02A3  3182               	pagesel	$
 15602                           
 15603                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     while(*serialData)
 15604     02A4  2AD9               	goto	l8977
 15605     02A5                     l8973:
 15606                           
 15607                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 393:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 394:         RN487X.Write((_hex[(*serialData >> 4) & 0xF])
      +                          );
 15608     02A5  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 15609     02A6  0086               	movwf	6
 15610     02A7  3002               	movlw	2	; select bank4/5
 15611     02A8  0087               	movwf	7
 15612     02A9  0801               	movf	1,w
 15613     02AA  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 15614     02AB  3004               	movlw	4
 15615     02AC                     u4955:
 15616     02AC  36F7               	lsrf	??_LIGHTBLUE_SendSerialData,f
 15617     02AD  0B89               	decfsz	9,f
 15618     02AE  2AAC               	goto	u4955
 15619     02AF  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 15620     02B0  390F               	andlw	15
 15621     02B1  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 15622     02B2  0086               	movwf	6
 15623     02B3  3001               	movlw	1	; select bank2/3
 15624     02B4  0087               	movwf	7
 15625     02B5  0801               	movf	1,w
 15626     02B6  00F6               	movwf	RN487X_Write@txData
 15627     02B7  3068               	movlw	low (_RN487X| (0+32768))
 15628     02B8  0084               	movwf	4
 15629     02B9  3090               	movlw	high (_RN487X| (0+32768))
 15630     02BA  0085               	movwf	5
 15631     02BB  3F01               	moviw [1]fsr0
 15632     02BC  008A               	movwf	10
 15633     02BD  3F00               	moviw [0]fsr0
 15634     02BE  000A               	callw
 15635     02BF  3182               	pagesel	$
 15636                           
 15637                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 395:         RN487X.Write((_hex[(*
      +                          serialData++) & 0xF]));
 15638     02C0  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 15639     02C1  0086               	movwf	6
 15640     02C2  3002               	movlw	2	; select bank4/5
 15641     02C3  0087               	movwf	7
 15642     02C4  0801               	movf	1,w
 15643     02C5  390F               	andlw	15
 15644     02C6  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 15645     02C7  0086               	movwf	6
 15646     02C8  3001               	movlw	1	; select bank2/3
 15647     02C9  0087               	movwf	7
 15648     02CA  0801               	movf	1,w
 15649     02CB  00F6               	movwf	RN487X_Write@txData
 15650     02CC  3068               	movlw	low (_RN487X| (0+32768))
 15651     02CD  0084               	movwf	4
 15652     02CE  3090               	movlw	high (_RN487X| (0+32768))
 15653     02CF  0085               	movwf	5
 15654     02D0  3F01               	moviw [1]fsr0
 15655     02D1  008A               	movwf	10
 15656     02D2  3F00               	moviw [0]fsr0
 15657     02D3  000A               	callw
 15658     02D4  3182               	pagesel	$
 15659     02D5                     l8975:
 15660     02D5  3001               	movlw	1
 15661     02D6  00F7               	movwf	??_LIGHTBLUE_SendSerialData
 15662     02D7  0877               	movf	??_LIGHTBLUE_SendSerialData,w
 15663     02D8  07F9               	addwf	LIGHTBLUE_SendSerialData@serialData,f
 15664     02D9                     l8977:
 15665                           
 15666                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 392:     while(*serialData)
 15667     02D9  0879               	movf	LIGHTBLUE_SendSerialData@serialData,w
 15668     02DA  0086               	movwf	6
 15669     02DB  3002               	movlw	2	; select bank4/5
 15670     02DC  0087               	movwf	7
 15671     02DD  0801               	movf	1,w
 15672     02DE  1D03               	btfss	3,2
 15673     02DF  2AE1               	goto	u4961
 15674     02E0  2AE2               	goto	u4960
 15675     02E1                     u4961:
 15676     02E1  2AA5               	goto	l8973
 15677     02E2                     u4960:
 15678     02E2                     l8979:
 15679                           
 15680                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 397:     RN487X.Write((']'));
 15681     02E2  305D               	movlw	93
 15682     02E3  00F6               	movwf	RN487X_Write@txData
 15683     02E4  3068               	movlw	low (_RN487X| (0+32768))
 15684     02E5  0084               	movwf	4
 15685     02E6  3090               	movlw	high (_RN487X| (0+32768))
 15686     02E7  0085               	movwf	5
 15687     02E8  3F01               	moviw [1]fsr0
 15688     02E9  008A               	movwf	10
 15689     02EA  3F00               	moviw [0]fsr0
 15690     02EB  000A               	callw
 15691     02EC  3182               	pagesel	$
 15692     02ED                     l142:
 15693     02ED  0008               	return
 15694     02EE                     __end_of_LIGHTBLUE_SendSerialData:
 15695                           
 15696                           	psect	text47
 15697     0E37                     __ptext47:	
 15698 ;; *************** function _LIGHTBLUE_SendProtocolVersion *****************
 15699 ;; Defined at:
 15700 ;;		line 366 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;  payload        19    2[BANK0 ] unsigned char [19]
 15705 ;;  dataIndex       1   22[BANK0 ] unsigned char 
 15706 ;;  value           1   21[BANK0 ] unsigned char 
 15707 ;; Return value:  Size  Location     Type
 15708 ;;                  1    wreg      void 
 15709 ;; Registers used:
 15710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15711 ;; Tracked objects:
 15712 ;;		On entry : 0/0
 15713 ;;		On exit  : 0/0
 15714 ;;		Unchanged: 0/0
 15715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15717 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15718 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15719 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15720 ;;Total ram usage:       23 bytes
 15721 ;; Hardware stack levels used: 1
 15722 ;; Hardware stack levels required when called: 7
 15723 ;; This function calls:
 15724 ;;		_LIGHTBLUE_SendPacket
 15725 ;;		_LIGHTBLUE_SplitByte
 15726 ;;		_strlen
 15727 ;; This function is called by:
 15728 ;;		_main
 15729 ;; This function uses a non-reentrant model
 15730 ;;
 15731                           
 15732     0E37                     _LIGHTBLUE_SendProtocolVersion:	
 15733                           ;psect for function _LIGHTBLUE_SendProtocolVersion
 15734                           
 15735     0E37                     l8947:	
 15736                           ;incstack = 0
 15737                           ; Regs used in _LIGHTBLUE_SendProtocolVersion: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15738                           
 15739                           
 15740                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 368:     char payload[19];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 369:     uint8_t value;;mcc_generated_file
      +                          s/application/LIGHTBLUE_service.c: 370:     uint8_t dataIndex;;mcc_generated_files/appli
      +                          cation/LIGHTBLUE_service.c: 372:     *payload = '\0';
 15741     0E37  0140               	movlb	0	; select bank0
 15742     0E38  01A2               	clrf	LIGHTBLUE_SendProtocolVersion@payload
 15743                           
 15744                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 374:     for(dataIndex = 0; dataIn
      +                          dex < strlen(protocol_version_number); dataIndex++)
 15745     0E39  01B6               	clrf	LIGHTBLUE_SendProtocolVersion@dataIndex
 15746     0E3A  2E4F               	goto	l8955
 15747     0E3B                     l8949:
 15748                           
 15749                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 375:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 376:         value = protocol_version_number[dataIndex];
 15750     0E3B  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 15751     0E3C  3E22               	addlw	low (STR_1| (0+32768))
 15752     0E3D  0084               	movwf	4
 15753     0E3E  3098               	movlw	high (STR_1| (0+32768))
 15754     0E3F  1803               	skipnc
 15755     0E40  3E01               	addlw	1
 15756     0E41  0085               	movwf	5
 15757     0E42  0800               	movf	0,w	;code access
 15758     0E43  00B5               	movwf	LIGHTBLUE_SendProtocolVersion@value
 15759     0E44                     l8951:
 15760                           
 15761                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 377:         LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 15762     0E44  0835               	movf	LIGHTBLUE_SendProtocolVersion@value,w
 15763     0E45  00F6               	movwf	LIGHTBLUE_SplitByte@value
 15764     0E46  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 15765     0E47  318E  2606  318E   	fcall	_LIGHTBLUE_SplitByte
 15766     0E4A                     l8953:
 15767                           
 15768                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 378:     }
 15769     0E4A  3001               	movlw	1
 15770     0E4B  0140               	movlb	0	; select bank0
 15771     0E4C  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 15772     0E4D  0820               	movf	??_LIGHTBLUE_SendProtocolVersion,w
 15773     0E4E  07B6               	addwf	LIGHTBLUE_SendProtocolVersion@dataIndex,f
 15774     0E4F                     l8955:
 15775     0E4F  3022               	movlw	low (STR_1| (0+32768))
 15776     0E50  00F1               	movwf	strlen@s
 15777     0E51  3098               	movlw	high (STR_1| (0+32768))
 15778     0E52  00F2               	movwf	strlen@s+1
 15779     0E53  318A  2215  318E   	fcall	_strlen
 15780     0E56  0140               	movlb	0	; select bank0
 15781     0E57  0836               	movf	LIGHTBLUE_SendProtocolVersion@dataIndex,w
 15782     0E58  00A0               	movwf	??_LIGHTBLUE_SendProtocolVersion
 15783     0E59  01A1               	clrf	??_LIGHTBLUE_SendProtocolVersion+1
 15784     0E5A  0872               	movf	?_strlen+1,w
 15785     0E5B  0221               	subwf	??_LIGHTBLUE_SendProtocolVersion+1,w
 15786     0E5C  1D03               	skipz
 15787     0E5D  2E60               	goto	u4935
 15788     0E5E  0871               	movf	?_strlen,w
 15789     0E5F  0220               	subwf	??_LIGHTBLUE_SendProtocolVersion,w
 15790     0E60                     u4935:
 15791     0E60  1C03               	skipc
 15792     0E61  2E63               	goto	u4931
 15793     0E62  2E64               	goto	u4930
 15794     0E63                     u4931:
 15795     0E63  2E3B               	goto	l8949
 15796     0E64                     u4930:
 15797     0E64                     l8957:
 15798                           
 15799                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 380:     LIGHTBLUE_SendPacket(PROT
      +                          OCOL_VERSION_ID, payload);
 15800     0E64  3022               	movlw	(low (LIGHTBLUE_SendProtocolVersion@payload| 0))& (0+255)
 15801     0E65  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 15802     0E66  3056               	movlw	86
 15803     0E67  3182  22EE  318E   	fcall	_LIGHTBLUE_SendPacket
 15804     0E6A                     l136:
 15805     0E6A  0008               	return
 15806     0E6B                     __end_of_LIGHTBLUE_SendProtocolVersion:
 15807                           
 15808                           	psect	text48
 15809     0904                     __ptext48:	
 15810 ;; *************** function _LIGHTBLUE_PushButton *****************
 15811 ;; Defined at:
 15812 ;;		line 336 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;  payload         3    1[BANK0 ] unsigned char [3]
 15817 ;;  button          1    0[BANK0 ] unsigned char 
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15828 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15830 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15831 ;;Total ram usage:        4 bytes
 15832 ;; Hardware stack levels used: 1
 15833 ;; Hardware stack levels required when called: 7
 15834 ;; This function calls:
 15835 ;;		_LIGHTBLUE_GetButtonValue
 15836 ;;		_LIGHTBLUE_SendPacket
 15837 ;;		_LIGHTBLUE_SplitByte
 15838 ;; This function is called by:
 15839 ;;		_main
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843     0904                     _LIGHTBLUE_PushButton:	
 15844                           ;psect for function _LIGHTBLUE_PushButton
 15845                           
 15846     0904                     l8925:	
 15847                           ;incstack = 0
 15848                           ; Regs used in _LIGHTBLUE_PushButton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15849                           
 15850                           
 15851                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 338:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 339:     uint8_t button = LIGHTBLUE_GetButt
      +                          onValue();
 15852     0904  3196  26CA  3189   	fcall	_LIGHTBLUE_GetButtonValue
 15853     0907  0140               	movlb	0	; select bank0
 15854     0908  00A0               	movwf	LIGHTBLUE_PushButton@button
 15855     0909                     l8927:
 15856                           
 15857                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 341:     *payload = '\0';
 15858     0909  01A1               	clrf	LIGHTBLUE_PushButton@payload
 15859     090A                     l8929:
 15860                           
 15861                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 342:     LIGHTBLUE_SplitByte(paylo
      +                          ad, button);
 15862     090A  0820               	movf	LIGHTBLUE_PushButton@button,w
 15863     090B  00F6               	movwf	LIGHTBLUE_SplitByte@value
 15864     090C  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 15865     090D  318E  2606  3189   	fcall	_LIGHTBLUE_SplitByte
 15866     0910                     l8931:
 15867                           
 15868                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 344:     LIGHTBLUE_SendPacket(BUTT
      +                          ON_STATE_ID, payload);
 15869     0910  3021               	movlw	(low (LIGHTBLUE_PushButton@payload| 0))& (0+255)
 15870     0911  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 15871     0912  3050               	movlw	80
 15872     0913  3182  22EE  3189   	fcall	_LIGHTBLUE_SendPacket
 15873     0916                     l127:
 15874     0916  0008               	return
 15875     0917                     __end_of_LIGHTBLUE_PushButton:
 15876                           
 15877                           	psect	text49
 15878     16CA                     __ptext49:	
 15879 ;; *************** function _LIGHTBLUE_GetButtonValue *****************
 15880 ;; Defined at:
 15881 ;;		line 488 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;		None
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;		None
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      unsigned char 
 15888 ;; Registers used:
 15889 ;;		wreg, status,2, status,0
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15899 ;;Total ram usage:        0 bytes
 15900 ;; Hardware stack levels used: 1
 15901 ;; Hardware stack levels required when called: 4
 15902 ;; This function calls:
 15903 ;;		Nothing
 15904 ;; This function is called by:
 15905 ;;		_LIGHTBLUE_PushButton
 15906 ;; This function uses a non-reentrant model
 15907 ;;
 15908                           
 15909     16CA                     _LIGHTBLUE_GetButtonValue:	
 15910                           ;psect for function _LIGHTBLUE_GetButtonValue
 15911                           
 15912     16CA                     l8687:	
 15913                           ;incstack = 0
 15914                           ; Regs used in _LIGHTBLUE_GetButtonValue: [wreg+status,2+status,0]
 15915                           
 15916                           
 15917                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 490:     return (0x01) - PORTAbits
      +                          .RA7;
 15918     16CA  0140               	movlb	0	; select bank0
 15919     16CB  0D0C               	rlf	12,w	;volatile
 15920     16CC  0D0C               	rlf	12,w	;volatile
 15921     16CD  3901               	andlw	1
 15922     16CE  3C01               	sublw	1
 15923     16CF                     l199:
 15924     16CF  0008               	return
 15925     16D0                     __end_of_LIGHTBLUE_GetButtonValue:
 15926                           
 15927                           	psect	text50
 15928     0178                     __ptext50:	
 15929 ;; *************** function _LIGHTBLUE_ParseIncomingPacket *****************
 15930 ;; Defined at:
 15931 ;;		line 400 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 15932 ;; Parameters:    Size  Location     Type
 15933 ;;  receivedByte    1    wreg     unsigned char 
 15934 ;; Auto vars:     Size  Location     Type
 15935 ;;  receivedByte    1   19[BANK0 ] unsigned char 
 15936 ;; Return value:  Size  Location     Type
 15937 ;;                  1    wreg      void 
 15938 ;; Registers used:
 15939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15940 ;; Tracked objects:
 15941 ;;		On entry : 0/0
 15942 ;;		On exit  : 0/0
 15943 ;;		Unchanged: 0/0
 15944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15946 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15948 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15949 ;;Total ram usage:        9 bytes
 15950 ;; Hardware stack levels used: 1
 15951 ;; Hardware stack levels required when called: 11
 15952 ;; This function calls:
 15953 ;;		_LIGHTBLUE_PerformAction
 15954 ;; This function is called by:
 15955 ;;		_main
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959     0178                     _LIGHTBLUE_ParseIncomingPacket:	
 15960                           ;psect for function _LIGHTBLUE_ParseIncomingPacket
 15961                           
 15962                           
 15963                           ;incstack = 0
 15964                           ; Regs used in _LIGHTBLUE_ParseIncomingPacket: [wreg-fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15965                           ;LIGHTBLUE_ParseIncomingPacket@receivedByte stored from wreg
 15966     0178  0140               	movlb	0	; select bank0
 15967     0179  00B3               	movwf	LIGHTBLUE_ParseIncomingPacket@receivedByte
 15968     017A                     l8981:
 15969                           
 15970                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 400: void LIGHTBLUE_ParseIncomingP
      +                          acket(char receivedByte);mcc_generated_files/application/LIGHTBLUE_service.c: 401: {;mcc
      +                          _generated_files/application/LIGHTBLUE_service.c: 402:     static PACKET_PARSER_STATE_t 
      +                          parserState = IDLE;;mcc_generated_files/application/LIGHTBLUE_service.c: 403:     static
      +                           uint8_t length = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 404:     stati
      +                          c uint16_t data = 0;;mcc_generated_files/application/LIGHTBLUE_service.c: 405:     stati
      +                          c char packetID = '\0';
 15971     017A  2A24               	goto	l9041
 15972     017B                     l8983:
 15973                           
 15974                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 411:             parserState = PAC
      +                          KET_ID;
 15975     017B  3002               	movlw	2
 15976     017C  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 15977                           
 15978                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 412:             break;
 15979     017D  2A43               	goto	l184
 15980     017E                     l8985:
 15981                           
 15982                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 414:             packetID = receiv
      +                          edByte;
 15983     017E  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 15984     017F  00E8               	movwf	LIGHTBLUE_ParseIncomingPacket@packetID
 15985                           
 15986                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 415:             parserState = PAY
      +                          LOAD_SIZE_0;
 15987     0180  3003               	movlw	3
 15988     0181  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 15989                           
 15990                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 416:             break;
 15991     0182  2A43               	goto	l184
 15992     0183                     l8987:
 15993                           
 15994                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 418:             length = (((recei
      +                          vedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 15995     0183  303A               	movlw	58
 15996     0184  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 15997     0185  1C03               	skipc
 15998     0186  2988               	goto	u4971
 15999     0187  2989               	goto	u4970
 16000     0188                     u4971:
 16001     0188  2992               	goto	l8991
 16002     0189                     u4970:
 16003     0189                     l8989:
 16004     0189  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16005     018A  395F               	andlw	95
 16006     018B  3EC9               	addlw	201
 16007     018C  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$417
 16008     018D  30FF               	movlw	255
 16009     018E  1803               	skipnc
 16010     018F  3000               	movlw	0
 16011     0190  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$417+1
 16012     0191  2999               	goto	l161
 16013     0192                     l8991:
 16014     0192  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16015     0193  3ED0               	addlw	208
 16016     0194  00AD               	movwf	_LIGHTBLUE_ParseIncomingPacket$417
 16017     0195  30FF               	movlw	255
 16018     0196  1803               	skipnc
 16019     0197  3000               	movlw	0
 16020     0198  00AE               	movwf	_LIGHTBLUE_ParseIncomingPacket$417+1
 16021     0199                     l161:
 16022     0199  082D               	movf	_LIGHTBLUE_ParseIncomingPacket$417,w
 16023     019A  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 16024                           
 16025                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 419:             parserState = PAY
      +                          LOAD_SIZE_1;
 16026     019B  3004               	movlw	4
 16027     019C  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16028                           
 16029                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 420:             break;
 16030     019D  2A43               	goto	l184
 16031     019E                     l8993:
 16032                           
 16033                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 422:             length = (length 
      +                          << 4) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 
      +                          10);
 16034     019E  303A               	movlw	58
 16035     019F  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16036     01A0  1C03               	skipc
 16037     01A1  29A3               	goto	u4981
 16038     01A2  29A4               	goto	u4980
 16039     01A3                     u4981:
 16040     01A3  29AD               	goto	l8997
 16041     01A4                     u4980:
 16042     01A4                     l8995:
 16043     01A4  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16044     01A5  395F               	andlw	95
 16045     01A6  3EC9               	addlw	201
 16046     01A7  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$418
 16047     01A8  30FF               	movlw	255
 16048     01A9  1803               	skipnc
 16049     01AA  3000               	movlw	0
 16050     01AB  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$418+1
 16051     01AC  29B4               	goto	l8999
 16052     01AD                     l8997:
 16053     01AD  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16054     01AE  3ED0               	addlw	208
 16055     01AF  00AF               	movwf	_LIGHTBLUE_ParseIncomingPacket$418
 16056     01B0  30FF               	movlw	255
 16057     01B1  1803               	skipnc
 16058     01B2  3000               	movlw	0
 16059     01B3  00B0               	movwf	_LIGHTBLUE_ParseIncomingPacket$418+1
 16060     01B4                     l8999:
 16061     01B4  0869               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16062     01B5  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16063     01B6  3003               	movlw	3
 16064     01B7                     u4995:
 16065     01B7  35AB               	lslf	??_LIGHTBLUE_ParseIncomingPacket,f
 16066     01B8  3EFF               	addlw	-1
 16067     01B9  1D03               	skipz
 16068     01BA  29B7               	goto	u4995
 16069     01BB  352B               	lslf	??_LIGHTBLUE_ParseIncomingPacket,w
 16070     01BC  072F               	addwf	_LIGHTBLUE_ParseIncomingPacket$418,w
 16071     01BD  00E9               	movwf	LIGHTBLUE_ParseIncomingPacket@length
 16072     01BE                     l9001:
 16073                           
 16074                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 423:             parserState = PAY
      +                          LOAD_0;
 16075     01BE  3005               	movlw	5
 16076     01BF  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16077                           
 16078                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 424:             break;
 16079     01C0  2A43               	goto	l184
 16080     01C1                     l9003:
 16081                           
 16082                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 426:             data = (((receive
      +                          dByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16083     01C1  303A               	movlw	58
 16084     01C2  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16085     01C3  1C03               	skipc
 16086     01C4  29C6               	goto	u5001
 16087     01C5  29C7               	goto	u5000
 16088     01C6                     u5001:
 16089     01C6  29D0               	goto	l9007
 16090     01C7                     u5000:
 16091     01C7                     l9005:
 16092     01C7  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16093     01C8  395F               	andlw	95
 16094     01C9  3EC9               	addlw	201
 16095     01CA  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16096     01CB  30FF               	movlw	255
 16097     01CC  1803               	skipnc
 16098     01CD  3000               	movlw	0
 16099     01CE  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16100     01CF  29D7               	goto	l9009
 16101     01D0                     l9007:
 16102     01D0  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16103     01D1  3ED0               	addlw	208
 16104     01D2  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16105     01D3  30FF               	movlw	255
 16106     01D4  1803               	skipnc
 16107     01D5  3000               	movlw	0
 16108     01D6  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16109     01D7                     l9009:
 16110                           
 16111                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 427:             length--;
 16112     01D7  3001               	movlw	1
 16113     01D8  02E9               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 16114     01D9                     l9011:
 16115                           
 16116                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 428:             if (length == 0)
 16117     01D9  0869               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16118     01DA  1D03               	btfss	3,2
 16119     01DB  29DD               	goto	u5011
 16120     01DC  29DE               	goto	u5010
 16121     01DD                     u5011:
 16122     01DD  29E0               	goto	l9015
 16123     01DE                     u5010:
 16124     01DE                     l9013:
 16125                           
 16126                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 429:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 430:                 parserState = IDLE;
 16127     01DE  01EA               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 16128                           
 16129                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 431:             }
 16130     01DF  2A43               	goto	l184
 16131     01E0                     l9015:
 16132                           
 16133                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 433:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 434:                 parserState = PAYLOAD_1;
 16134     01E0  3006               	movlw	6
 16135     01E1  00EA               	movwf	LIGHTBLUE_ParseIncomingPacket@parserState
 16136     01E2  2A43               	goto	l184
 16137     01E3                     l9017:
 16138                           
 16139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 438:             data = (data << 4
      +                          ) + (((receivedByte) <= '9') ? (receivedByte) - '0' : (receivedByte & 0x5f) - 'A' + 10);
 16140     01E3  303A               	movlw	58
 16141     01E4  0233               	subwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16142     01E5  1C03               	skipc
 16143     01E6  29E8               	goto	u5021
 16144     01E7  29E9               	goto	u5020
 16145     01E8                     u5021:
 16146     01E8  29F2               	goto	l9021
 16147     01E9                     u5020:
 16148     01E9                     l9019:
 16149     01E9  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16150     01EA  395F               	andlw	95
 16151     01EB  3EC9               	addlw	201
 16152     01EC  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$419
 16153     01ED  30FF               	movlw	255
 16154     01EE  1803               	skipnc
 16155     01EF  3000               	movlw	0
 16156     01F0  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$419+1
 16157     01F1  29F9               	goto	l9023
 16158     01F2                     l9021:
 16159     01F2  0833               	movf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16160     01F3  3ED0               	addlw	208
 16161     01F4  00B1               	movwf	_LIGHTBLUE_ParseIncomingPacket$419
 16162     01F5  30FF               	movlw	255
 16163     01F6  1803               	skipnc
 16164     01F7  3000               	movlw	0
 16165     01F8  00B2               	movwf	_LIGHTBLUE_ParseIncomingPacket$419+1
 16166     01F9                     l9023:
 16167     01F9  0852               	movf	LIGHTBLUE_ParseIncomingPacket@data+1,w
 16168     01FA  00AC               	movwf	??_LIGHTBLUE_ParseIncomingPacket+1
 16169     01FB  0851               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 16170     01FC  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16171     01FD  0EAB               	swapf	??_LIGHTBLUE_ParseIncomingPacket,f
 16172     01FE  0EAC               	swapf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 16173     01FF  30F0               	movlw	240
 16174     0200  05AC               	andwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 16175     0201  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 16176     0202  390F               	andlw	15
 16177     0203  04AC               	iorwf	??_LIGHTBLUE_ParseIncomingPacket+1,f
 16178     0204  30F0               	movlw	240
 16179     0205  05AB               	andwf	??_LIGHTBLUE_ParseIncomingPacket,f
 16180     0206  0831               	movf	_LIGHTBLUE_ParseIncomingPacket$419,w
 16181     0207  072B               	addwf	??_LIGHTBLUE_ParseIncomingPacket,w
 16182     0208  00D1               	movwf	LIGHTBLUE_ParseIncomingPacket@data
 16183     0209  0832               	movf	_LIGHTBLUE_ParseIncomingPacket$419+1,w
 16184     020A  3D2C               	addwfc	??_LIGHTBLUE_ParseIncomingPacket+1,w
 16185     020B  00D2               	movwf	LIGHTBLUE_ParseIncomingPacket@data+1
 16186     020C                     l9025:
 16187                           
 16188                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 439:             LIGHTBLUE_Perform
      +                          Action(packetID, data);
 16189     020C  0851               	movf	LIGHTBLUE_ParseIncomingPacket@data,w
 16190     020D  00A7               	movwf	LIGHTBLUE_PerformAction@data
 16191     020E  0868               	movf	LIGHTBLUE_ParseIncomingPacket@packetID,w
 16192     020F  318E  26D6  3181   	fcall	_LIGHTBLUE_PerformAction
 16193     0212                     l9027:
 16194                           
 16195                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 440:             length--;
 16196     0212  3001               	movlw	1
 16197     0213  0140               	movlb	0	; select bank0
 16198     0214  02E9               	subwf	LIGHTBLUE_ParseIncomingPacket@length,f
 16199     0215                     l9029:
 16200                           
 16201                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 441:             if (length == 0)
 16202     0215  0869               	movf	LIGHTBLUE_ParseIncomingPacket@length,w
 16203     0216  1D03               	btfss	3,2
 16204     0217  2A19               	goto	u5031
 16205     0218  2A1A               	goto	u5030
 16206     0219                     u5031:
 16207     0219  29BE               	goto	l9001
 16208     021A                     u5030:
 16209     021A  29DE               	goto	l9013
 16210     021B                     l9035:
 16211                           
 16212                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 452:             if (receivedByte 
      +                          == ('['))
 16213     021B  305B               	movlw	91
 16214     021C  0633               	xorwf	LIGHTBLUE_ParseIncomingPacket@receivedByte,w
 16215     021D  1D03               	btfss	3,2
 16216     021E  2A20               	goto	u5041
 16217     021F  2A21               	goto	u5040
 16218     0220                     u5041:
 16219     0220  2A43               	goto	l184
 16220     0221                     u5040:
 16221     0221                     l9037:
 16222                           
 16223                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 453:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 454:                 parserState = SEQUENCE_NUMBER
      +                          ;
 16224     0221  01EA               	clrf	LIGHTBLUE_ParseIncomingPacket@parserState
 16225     0222  0AEA               	incf	LIGHTBLUE_ParseIncomingPacket@parserState,f
 16226     0223  2A43               	goto	l184
 16227     0224                     l9041:
 16228     0224  086A               	movf	LIGHTBLUE_ParseIncomingPacket@parserState,w
 16229     0225  00AB               	movwf	??_LIGHTBLUE_ParseIncomingPacket
 16230     0226  01AC               	clrf	??_LIGHTBLUE_ParseIncomingPacket+1
 16231                           
 16232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16233                           ; Switch size 1, requested type "simple"
 16234                           ; Number of cases is 1, Range of values is 0 to 0
 16235                           ; switch strategies available:
 16236                           ; Name         Instructions Cycles
 16237                           ; simple_byte            4     3 (average)
 16238                           ; direct_byte            8     6 (fixed)
 16239                           ; jumptable            260     6 (fixed)
 16240                           ;	Chosen strategy is simple_byte
 16241     0227  082C               	movf	??_LIGHTBLUE_ParseIncomingPacket+1,w
 16242     0228  3A00               	xorlw	0	; case 0
 16243     0229  1903               	skipnz
 16244     022A  2A2C               	goto	l9713
 16245     022B  2A1B               	goto	l9035
 16246     022C                     l9713:
 16247                           
 16248                           ; Switch size 1, requested type "simple"
 16249                           ; Number of cases is 7, Range of values is 0 to 6
 16250                           ; switch strategies available:
 16251                           ; Name         Instructions Cycles
 16252                           ; direct_byte           20     6 (fixed)
 16253                           ; simple_byte           22    12 (average)
 16254                           ; jumptable            260     6 (fixed)
 16255                           ;	Chosen strategy is simple_byte
 16256     022C  082B               	movf	??_LIGHTBLUE_ParseIncomingPacket,w
 16257     022D  3A00               	xorlw	0	; case 0
 16258     022E  1903               	skipnz
 16259     022F  2A1B               	goto	l9035
 16260     0230  3A01               	xorlw	1	; case 1
 16261     0231  1903               	skipnz
 16262     0232  297B               	goto	l8983
 16263     0233  3A03               	xorlw	3	; case 2
 16264     0234  1903               	skipnz
 16265     0235  297E               	goto	l8985
 16266     0236  3A01               	xorlw	1	; case 3
 16267     0237  1903               	skipnz
 16268     0238  2983               	goto	l8987
 16269     0239  3A07               	xorlw	7	; case 4
 16270     023A  1903               	skipnz
 16271     023B  299E               	goto	l8993
 16272     023C  3A01               	xorlw	1	; case 5
 16273     023D  1903               	skipnz
 16274     023E  29C1               	goto	l9003
 16275     023F  3A03               	xorlw	3	; case 6
 16276     0240  1903               	skipnz
 16277     0241  29E3               	goto	l9017
 16278     0242  2A1B               	goto	l9035
 16279     0243                     l184:
 16280     0243  0008               	return
 16281     0244                     __end_of_LIGHTBLUE_ParseIncomingPacket:
 16282                           
 16283                           	psect	text51
 16284     0ED6                     __ptext51:	
 16285 ;; *************** function _LIGHTBLUE_PerformAction *****************
 16286 ;; Defined at:
 16287 ;;		line 517 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16288 ;; Parameters:    Size  Location     Type
 16289 ;;  id              1    wreg     unsigned char 
 16290 ;;  data            1    7[BANK0 ] unsigned char 
 16291 ;; Auto vars:     Size  Location     Type
 16292 ;;  id              1    9[BANK0 ] unsigned char 
 16293 ;;  led             1   10[BANK0 ] unsigned char 
 16294 ;; Return value:  Size  Location     Type
 16295 ;;                  1    wreg      void 
 16296 ;; Registers used:
 16297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16298 ;; Tracked objects:
 16299 ;;		On entry : 0/0
 16300 ;;		On exit  : 0/0
 16301 ;;		Unchanged: 0/0
 16302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16303 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16306 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16307 ;;Total ram usage:        4 bytes
 16308 ;; Hardware stack levels used: 1
 16309 ;; Hardware stack levels required when called: 10
 16310 ;; This function calls:
 16311 ;;		_EUSART1_Write
 16312 ;;		_EUSART2_Write
 16313 ;;		_LIGHTBLUE_SetErrorLedValue
 16314 ;; This function is called by:
 16315 ;;		_LIGHTBLUE_ParseIncomingPacket
 16316 ;; This function uses a non-reentrant model
 16317 ;;
 16318                           
 16319     0ED6                     _LIGHTBLUE_PerformAction:	
 16320                           ;psect for function _LIGHTBLUE_PerformAction
 16321                           
 16322                           
 16323                           ;incstack = 0
 16324                           ; Regs used in _LIGHTBLUE_PerformAction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16325                           ;LIGHTBLUE_PerformAction@id stored from wreg
 16326     0ED6  0140               	movlb	0	; select bank0
 16327     0ED7  00A9               	movwf	LIGHTBLUE_PerformAction@id
 16328     0ED8                     l8699:
 16329                           
 16330                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 517: static void LIGHTBLUE_Perform
      +                          Action(char id, uint8_t data);mcc_generated_files/application/LIGHTBLUE_service.c: 518: 
      +                          {;mcc_generated_files/application/LIGHTBLUE_service.c: 519:     uint8_t led;;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 521:     switch(id)
 16331     0ED8  2F05               	goto	l8711
 16332     0ED9                     l8701:
 16333                           
 16334                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 524:             led = (data >> 4)
      +                           & (0x01);
 16335     0ED9  0827               	movf	LIGHTBLUE_PerformAction@data,w
 16336     0EDA  00A8               	movwf	??_LIGHTBLUE_PerformAction
 16337     0EDB  3004               	movlw	4
 16338     0EDC                     u4825:
 16339     0EDC  36A8               	lsrf	??_LIGHTBLUE_PerformAction,f
 16340     0EDD  0B89               	decfsz	9,f
 16341     0EDE  2EDC               	goto	u4825
 16342     0EDF  0828               	movf	??_LIGHTBLUE_PerformAction,w
 16343     0EE0  3901               	andlw	1
 16344     0EE1  00AA               	movwf	LIGHTBLUE_PerformAction@led
 16345                           
 16346                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 525:             if(led == (0x00))
 16347     0EE2  082A               	movf	LIGHTBLUE_PerformAction@led,w
 16348     0EE3  1D03               	btfss	3,2
 16349     0EE4  2EE6               	goto	u4831
 16350     0EE5  2EE7               	goto	u4830
 16351     0EE6                     u4831:
 16352     0EE6  2EEF               	goto	l8705
 16353     0EE7                     u4830:
 16354     0EE7                     l8703:
 16355                           
 16356                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 526:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 527:                 if((data & (0x01)) == (0x00))
 16357     0EE7  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 16358     0EE8  2EEA               	goto	u4841
 16359     0EE9  2EEB               	goto	u4840
 16360     0EEA                     u4841:
 16361     0EEA  2EED               	goto	l221
 16362     0EEB                     u4840:
 16363     0EEB                     l218:	
 16364                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 528:                 {;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 529:                     do { LATAbits.LATA5 =
      +                           1; } while(0);
 16365                           
 16366     0EEB  1698               	bsf	24,5	;volatile
 16367     0EEC  2F0D               	goto	l227
 16368     0EED                     l221:	
 16369                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 532:                 {;mcc_generat
      +                          ed_files/application/LIGHTBLUE_service.c: 533:                     do { LATAbits.LATA5 =
      +                           0; } while(0);
 16370                           
 16371     0EED  1298               	bcf	24,5	;volatile
 16372     0EEE  2F0D               	goto	l227
 16373     0EEF                     l8705:
 16374                           
 16375                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 537:             {;mcc_generated_f
      +                          iles/application/LIGHTBLUE_service.c: 538:                 LIGHTBLUE_SetErrorLedValue(da
      +                          ta & (0x01));
 16376     0EEF  1827               	btfsc	LIGHTBLUE_PerformAction@data,0
 16377     0EF0  2EF2               	goto	u4851
 16378     0EF1  2EF4               	goto	u4850
 16379     0EF2                     u4851:
 16380     0EF2  3001               	movlw	1
 16381     0EF3  2EF5               	goto	u4860
 16382     0EF4                     u4850:
 16383     0EF4  3000               	movlw	0
 16384     0EF5                     u4860:
 16385     0EF5  3188  2029  318E   	fcall	_LIGHTBLUE_SetErrorLedValue
 16386     0EF8  2F0D               	goto	l227
 16387     0EF9                     l8707:
 16388                           
 16389                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 542:             uart[UART_CDC].Wr
      +                          ite(data);
 16390     0EF9  0827               	movf	LIGHTBLUE_PerformAction@data,w
 16391     0EFA  00F1               	movwf	EUSART2_Write@txData
 16392     0EFB  3002               	movlw	low ((_uart+2)| (0+32768))
 16393     0EFC  0084               	movwf	4
 16394     0EFD  3090               	movlw	high ((_uart+2)| (0+32768))
 16395     0EFE  0085               	movwf	5
 16396     0EFF  3F01               	moviw [1]fsr0
 16397     0F00  008A               	movwf	10
 16398     0F01  3F00               	moviw [0]fsr0
 16399     0F02  000A               	callw
 16400     0F03  318E               	pagesel	$
 16401                           
 16402                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 543:             break;
 16403     0F04  2F0D               	goto	l227
 16404     0F05                     l8711:
 16405     0F05  0829               	movf	LIGHTBLUE_PerformAction@id,w
 16406                           
 16407                           ; Switch size 1, requested type "simple"
 16408                           ; Number of cases is 2, Range of values is 76 to 83
 16409                           ; switch strategies available:
 16410                           ; Name         Instructions Cycles
 16411                           ; simple_byte            7     4 (average)
 16412                           ; direct_byte           25     9 (fixed)
 16413                           ; jumptable            263     9 (fixed)
 16414                           ;	Chosen strategy is simple_byte
 16415     0F06  3A4C               	xorlw	76	; case 76
 16416     0F07  1903               	skipnz
 16417     0F08  2ED9               	goto	l8701
 16418     0F09  3A1F               	xorlw	31	; case 83
 16419     0F0A  1903               	skipnz
 16420     0F0B  2EF9               	goto	l8707
 16421     0F0C  2F0D               	goto	l227
 16422     0F0D                     l227:
 16423     0F0D  0008               	return
 16424     0F0E                     __end_of_LIGHTBLUE_PerformAction:
 16425                           
 16426                           	psect	text52
 16427     0829                     __ptext52:	
 16428 ;; *************** function _LIGHTBLUE_SetErrorLedValue *****************
 16429 ;; Defined at:
 16430 ;;		line 503 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16431 ;; Parameters:    Size  Location     Type
 16432 ;;  value           1    wreg     _Bool 
 16433 ;; Auto vars:     Size  Location     Type
 16434 ;;  value           1    6[BANK0 ] _Bool 
 16435 ;; Return value:  Size  Location     Type
 16436 ;;                  1    wreg      void 
 16437 ;; Registers used:
 16438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16439 ;; Tracked objects:
 16440 ;;		On entry : 0/0
 16441 ;;		On exit  : 0/0
 16442 ;;		Unchanged: 0/0
 16443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16447 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16448 ;;Total ram usage:        2 bytes
 16449 ;; Hardware stack levels used: 1
 16450 ;; Hardware stack levels required when called: 9
 16451 ;; This function calls:
 16452 ;;		_LIGHTBLUE_UpdateErrorLed
 16453 ;; This function is called by:
 16454 ;;		_LIGHTBLUE_PerformAction
 16455 ;; This function uses a non-reentrant model
 16456 ;;
 16457                           
 16458     0829                     _LIGHTBLUE_SetErrorLedValue:	
 16459                           ;psect for function _LIGHTBLUE_SetErrorLedValue
 16460                           
 16461                           
 16462                           ;incstack = 0
 16463                           ; Regs used in _LIGHTBLUE_SetErrorLedValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16464                           ;LIGHTBLUE_SetErrorLedValue@value stored from wreg
 16465     0829  0140               	movlb	0	; select bank0
 16466     082A  00A6               	movwf	LIGHTBLUE_SetErrorLedValue@value
 16467     082B                     l8567:
 16468                           
 16469                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 503: static void LIGHTBLUE_SetErro
      +                          rLedValue(_Bool value);mcc_generated_files/application/LIGHTBLUE_service.c: 504: {;mcc_g
      +                          enerated_files/application/LIGHTBLUE_service.c: 505:     (bitMap.ioStateBitMap.p2_2_stat
      +                          e) = (0x01) - value;
 16470     082B  3001               	movlw	1
 16471     082C  00FB               	movwf	??_LIGHTBLUE_SetErrorLedValue
 16472     082D  0826               	movf	LIGHTBLUE_SetErrorLedValue@value,w
 16473     082E  02FB               	subwf	??_LIGHTBLUE_SetErrorLedValue,f
 16474     082F  0854               	movf	_bitMap+1,w	;volatile
 16475     0830  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 16476     0831  39FE               	andlw	-2
 16477     0832  067B               	xorwf	??_LIGHTBLUE_SetErrorLedValue,w
 16478     0833  00D4               	movwf	_bitMap+1	;volatile
 16479     0834                     l8569:
 16480                           
 16481                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 506:     LIGHTBLUE_UpdateErrorLed(
      +                          );
 16482     0834  318A  2263  3188   	fcall	_LIGHTBLUE_UpdateErrorLed
 16483     0837                     l208:
 16484     0837  0008               	return
 16485     0838                     __end_of_LIGHTBLUE_SetErrorLedValue:
 16486                           
 16487                           	psect	text53
 16488     0A63                     __ptext53:	
 16489 ;; *************** function _LIGHTBLUE_UpdateErrorLed *****************
 16490 ;; Defined at:
 16491 ;;		line 509 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;		None
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;		None
 16496 ;; Return value:  Size  Location     Type
 16497 ;;                  1    wreg      void 
 16498 ;; Registers used:
 16499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/0
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16509 ;;Total ram usage:        0 bytes
 16510 ;; Hardware stack levels used: 1
 16511 ;; Hardware stack levels required when called: 8
 16512 ;; This function calls:
 16513 ;;		_RN487X_Delay
 16514 ;;		_RN487X_EnterCmdMode
 16515 ;;		_RN487X_EnterDataMode
 16516 ;;		_RN487X_SetOutputs
 16517 ;; This function is called by:
 16518 ;;		_LIGHTBLUE_SetErrorLedValue
 16519 ;; This function uses a non-reentrant model
 16520 ;;
 16521                           
 16522     0A63                     _LIGHTBLUE_UpdateErrorLed:	
 16523                           ;psect for function _LIGHTBLUE_UpdateErrorLed
 16524                           
 16525     0A63                     l8487:	
 16526                           ;incstack = 0
 16527                           ; Regs used in _LIGHTBLUE_UpdateErrorLed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16528                           
 16529                           
 16530                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 511:     RN487X_EnterCmdMode();
 16531     0A63  3189  216D  318A   	fcall	_RN487X_EnterCmdMode
 16532     0A66                     l8489:
 16533                           
 16534                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 512:     RN487X.DelayMs((20));
 16535     0A66  3014               	movlw	20
 16536     0A67  00F4               	movwf	RN487X_Delay@delayCount
 16537     0A68  3000               	movlw	0
 16538     0A69  00F5               	movwf	RN487X_Delay@delayCount+1
 16539     0A6A  3076               	movlw	low ((_RN487X+14)| (0+32768))
 16540     0A6B  0084               	movwf	4
 16541     0A6C  3090               	movlw	high ((_RN487X+14)| (0+32768))
 16542     0A6D  0085               	movwf	5
 16543     0A6E  3F01               	moviw [1]fsr0
 16544     0A6F  008A               	movwf	10
 16545     0A70  3F00               	moviw [0]fsr0
 16546     0A71  000A               	callw
 16547     0A72  318A               	pagesel	$
 16548     0A73                     l8491:
 16549                           
 16550                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 513:     RN487X_SetOutputs(bitMap)
      +                          ;
 16551     0A73  0140               	movlb	0	; select bank0
 16552     0A74  0854               	movf	_bitMap+1,w	;volatile
 16553     0A75  00A1               	movwf	RN487X_SetOutputs@bitMap+1
 16554     0A76  0853               	movf	_bitMap,w	;volatile
 16555     0A77  00A0               	movwf	RN487X_SetOutputs@bitMap
 16556     0A78  3186  26A0  318A   	fcall	_RN487X_SetOutputs
 16557     0A7B                     l8493:
 16558                           
 16559                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 514:     RN487X_EnterDataMode();
 16560     0A7B  318A  2248  318A   	fcall	_RN487X_EnterDataMode
 16561     0A7E                     l211:
 16562     0A7E  0008               	return
 16563     0A7F                     __end_of_LIGHTBLUE_UpdateErrorLed:
 16564                           
 16565                           	psect	text54
 16566     06A0                     __ptext54:	
 16567 ;; *************** function _RN487X_SetOutputs *****************
 16568 ;; Defined at:
 16569 ;;		line 223 in file "mcc_generated_files/rn487x/rn487x.c"
 16570 ;; Parameters:    Size  Location     Type
 16571 ;;  bitMap          2    0[BANK0 ] struct .
 16572 ;; Auto vars:     Size  Location     Type
 16573 ;;  stateHighNib    1    5[BANK0 ] unsigned char 
 16574 ;;  ioHighNibble    1    4[BANK0 ] unsigned char 
 16575 ;;  stateLowNibb    1    3[BANK0 ] unsigned char 
 16576 ;;  ioLowNibble     1    2[BANK0 ] unsigned char 
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      _Bool 
 16579 ;; Registers used:
 16580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16587 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;Total ram usage:        6 bytes
 16591 ;; Hardware stack levels used: 1
 16592 ;; Hardware stack levels required when called: 7
 16593 ;; This function calls:
 16594 ;;		_RN487X_ReadDefaultResponse
 16595 ;;		_RN487X_SendCmd
 16596 ;; This function is called by:
 16597 ;;		_LIGHTBLUE_UpdateErrorLed
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601     06A0                     _RN487X_SetOutputs:	
 16602                           ;psect for function _RN487X_SetOutputs
 16603                           
 16604     06A0                     l8355:	
 16605                           ;incstack = 0
 16606                           ; Regs used in _RN487X_SetOutputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16607                           
 16608                           
 16609                           ;mcc_generated_files/rn487x/rn487x.c: 226:     char ioLowNibble = '0';
 16610     06A0  3030               	movlw	48
 16611     06A1  0140               	movlb	0	; select bank0
 16612     06A2  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 16613                           
 16614                           ;mcc_generated_files/rn487x/rn487x.c: 227:     char stateHighNibble = '0';
 16615     06A3  3030               	movlw	48
 16616     06A4  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 16617                           
 16618                           ;mcc_generated_files/rn487x/rn487x.c: 228:     char stateLowNibble = '0';
 16619     06A5  3030               	movlw	48
 16620     06A6  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 16621     06A7                     l8357:
 16622                           
 16623                           ;mcc_generated_files/rn487x/rn487x.c: 231:     if (bitMap.ioBitMap.p1_3)
 16624     06A7  1E20               	btfss	RN487X_SetOutputs@bitMap,4
 16625     06A8  2EAA               	goto	u4421
 16626     06A9  2EAB               	goto	u4420
 16627     06AA                     u4421:
 16628     06AA  2EAE               	goto	l8361
 16629     06AB                     u4420:
 16630     06AB                     l8359:
 16631                           
 16632                           ;mcc_generated_files/rn487x/rn487x.c: 232:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          3:         ioHighNibble = '1';
 16633     06AB  3031               	movlw	49
 16634     06AC  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 16635                           
 16636                           ;mcc_generated_files/rn487x/rn487x.c: 234:     }
 16637     06AD  2EB0               	goto	l8363
 16638     06AE                     l8361:
 16639                           
 16640                           ;mcc_generated_files/rn487x/rn487x.c: 236:     {;mcc_generated_files/rn487x/rn487x.c: 23
      +                          7:         ioHighNibble = '0';
 16641     06AE  3030               	movlw	48
 16642     06AF  00A4               	movwf	RN487X_SetOutputs@ioHighNibble
 16643     06B0                     l8363:
 16644                           
 16645                           ;mcc_generated_files/rn487x/rn487x.c: 239:     ioLowNibble = ( (0x0F & bitMap.ioBitMap.g
      +                          pioBitMap) + '0');
 16646     06B0  0820               	movf	RN487X_SetOutputs@bitMap,w
 16647     06B1  390F               	andlw	15
 16648     06B2  3E30               	addlw	48
 16649     06B3  00A2               	movwf	RN487X_SetOutputs@ioLowNibble
 16650     06B4                     l8365:
 16651                           
 16652                           ;mcc_generated_files/rn487x/rn487x.c: 242:     if (bitMap.ioStateBitMap.p1_3_state)
 16653     06B4  1E21               	btfss	RN487X_SetOutputs@bitMap+1,4
 16654     06B5  2EB7               	goto	u4431
 16655     06B6  2EB8               	goto	u4430
 16656     06B7                     u4431:
 16657     06B7  2EBB               	goto	l8369
 16658     06B8                     u4430:
 16659     06B8                     l8367:
 16660                           
 16661                           ;mcc_generated_files/rn487x/rn487x.c: 243:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          4:         stateHighNibble = '1';
 16662     06B8  3031               	movlw	49
 16663     06B9  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 16664                           
 16665                           ;mcc_generated_files/rn487x/rn487x.c: 245:     }
 16666     06BA  2EBD               	goto	l8371
 16667     06BB                     l8369:
 16668                           
 16669                           ;mcc_generated_files/rn487x/rn487x.c: 247:     {;mcc_generated_files/rn487x/rn487x.c: 24
      +                          8:         stateHighNibble = '0';
 16670     06BB  3030               	movlw	48
 16671     06BC  00A5               	movwf	RN487X_SetOutputs@stateHighNibble
 16672     06BD                     l8371:
 16673                           
 16674                           ;mcc_generated_files/rn487x/rn487x.c: 250:     stateLowNibble = ( (0x0F & bitMap.ioState
      +                          BitMap.gpioStateBitMap) + '0');
 16675     06BD  0821               	movf	RN487X_SetOutputs@bitMap+1,w
 16676     06BE  390F               	andlw	15
 16677     06BF  3E30               	addlw	48
 16678     06C0  00A3               	movwf	RN487X_SetOutputs@stateLowNibble
 16679     06C1                     l8373:
 16680                           
 16681                           ;mcc_generated_files/rn487x/rn487x.c: 252:     cmdBuf[0] = '|';
 16682     06C1  307C               	movlw	124
 16683     06C2  0143               	movlb	3	; select bank3
 16684     06C3  00A0               	movwf	_cmdBuf^(0+384)
 16685     06C4                     l8375:
 16686                           
 16687                           ;mcc_generated_files/rn487x/rn487x.c: 253:     cmdBuf[1] = 'O';
 16688     06C4  304F               	movlw	79
 16689     06C5  00A1               	movwf	(_cmdBuf^(0+384)+1)
 16690     06C6                     l8377:
 16691                           
 16692                           ;mcc_generated_files/rn487x/rn487x.c: 254:     cmdBuf[2] = ',';
 16693     06C6  302C               	movlw	44
 16694     06C7  00A2               	movwf	(_cmdBuf^(0+384)+2)
 16695     06C8                     l8379:
 16696                           
 16697                           ;mcc_generated_files/rn487x/rn487x.c: 255:     cmdBuf[3] = ioHighNibble;
 16698     06C8  0140               	movlb	0	; select bank0
 16699     06C9  0824               	movf	RN487X_SetOutputs@ioHighNibble,w
 16700     06CA  0143               	movlb	3	; select bank3
 16701     06CB  00A3               	movwf	(_cmdBuf^(0+384)+3)
 16702     06CC                     l8381:
 16703                           
 16704                           ;mcc_generated_files/rn487x/rn487x.c: 256:     cmdBuf[4] = ioLowNibble;
 16705     06CC  0140               	movlb	0	; select bank0
 16706     06CD  0822               	movf	RN487X_SetOutputs@ioLowNibble,w
 16707     06CE  0143               	movlb	3	; select bank3
 16708     06CF  00A4               	movwf	(_cmdBuf^(0+384)+4)
 16709     06D0                     l8383:
 16710                           
 16711                           ;mcc_generated_files/rn487x/rn487x.c: 257:     cmdBuf[5] = ',';
 16712     06D0  302C               	movlw	44
 16713     06D1  00A5               	movwf	(_cmdBuf^(0+384)+5)
 16714     06D2                     l8385:
 16715                           
 16716                           ;mcc_generated_files/rn487x/rn487x.c: 258:     cmdBuf[6] = stateHighNibble;
 16717     06D2  0140               	movlb	0	; select bank0
 16718     06D3  0825               	movf	RN487X_SetOutputs@stateHighNibble,w
 16719     06D4  0143               	movlb	3	; select bank3
 16720     06D5  00A6               	movwf	(_cmdBuf^(0+384)+6)
 16721     06D6                     l8387:
 16722                           
 16723                           ;mcc_generated_files/rn487x/rn487x.c: 259:     cmdBuf[7] = stateLowNibble;
 16724     06D6  0140               	movlb	0	; select bank0
 16725     06D7  0823               	movf	RN487X_SetOutputs@stateLowNibble,w
 16726     06D8  0143               	movlb	3	; select bank3
 16727     06D9  00A7               	movwf	(_cmdBuf^(0+384)+7)
 16728     06DA                     l8389:
 16729                           
 16730                           ;mcc_generated_files/rn487x/rn487x.c: 260:     cmdBuf[8] = '\r';
 16731     06DA  300D               	movlw	13
 16732     06DB  00A8               	movwf	(_cmdBuf^(0+384)+8)
 16733     06DC                     l8391:
 16734                           
 16735                           ;mcc_generated_files/rn487x/rn487x.c: 261:     cmdBuf[9] = '\n';
 16736     06DC  300A               	movlw	10
 16737     06DD  00A9               	movwf	(_cmdBuf^(0+384)+9)
 16738     06DE                     l8393:
 16739                           
 16740                           ;mcc_generated_files/rn487x/rn487x.c: 263:     RN487X_SendCmd(cmdBuf, 10);
 16741     06DE  300A               	movlw	10
 16742     06DF  00F7               	movwf	RN487X_SendCmd@cmdLen
 16743     06E0  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 16744     06E1  318D  25D8  3186   	fcall	_RN487X_SendCmd
 16745     06E4                     l8395:
 16746                           
 16747                           ;mcc_generated_files/rn487x/rn487x.c: 264:     return RN487X_ReadDefaultResponse();;	Ret
      +                          urn value of _RN487X_SetOutputs is never used
 16748     06E4  3183  237A  3186   	fcall	_RN487X_ReadDefaultResponse
 16749     06E7                     l930:
 16750     06E7  0008               	return
 16751     06E8                     __end_of_RN487X_SetOutputs:
 16752                           
 16753                           	psect	text55
 16754     037A                     __ptext55:	
 16755 ;; *************** function _RN487X_ReadDefaultResponse *****************
 16756 ;; Defined at:
 16757 ;;		line 125 in file "mcc_generated_files/rn487x/rn487x.c"
 16758 ;; Parameters:    Size  Location     Type
 16759 ;;		None
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;  resp            3    3[COMMON] unsigned char [3]
 16762 ;;  status          1    6[COMMON] _Bool 
 16763 ;; Return value:  Size  Location     Type
 16764 ;;                  1    wreg      _Bool 
 16765 ;; Registers used:
 16766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16767 ;; Tracked objects:
 16768 ;;		On entry : 0/0
 16769 ;;		On exit  : 0/0
 16770 ;;		Unchanged: 0/0
 16771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16776 ;;Total ram usage:        4 bytes
 16777 ;; Hardware stack levels used: 1
 16778 ;; Hardware stack levels required when called: 6
 16779 ;; This function calls:
 16780 ;;		_RN487X_Read@rn487x_interface$F1335
 16781 ;; This function is called by:
 16782 ;;		_RN487X_SetOutputs
 16783 ;;		_RN487X_Disconnect
 16784 ;; This function uses a non-reentrant model
 16785 ;;
 16786                           
 16787     037A                     _RN487X_ReadDefaultResponse:	
 16788                           ;psect for function _RN487X_ReadDefaultResponse
 16789                           
 16790     037A                     l8253:	
 16791                           ;incstack = 0
 16792                           ; Regs used in _RN487X_ReadDefaultResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16793                           
 16794                           
 16795                           ;mcc_generated_files/rn487x/rn487x.c: 127:     uint8_t resp[3];;mcc_generated_files/rn48
      +                          7x/rn487x.c: 128:     _Bool status = 0;
 16796     037A  01F6               	clrf	RN487X_ReadDefaultResponse@status
 16797     037B                     l8255:
 16798                           
 16799                           ;mcc_generated_files/rn487x/rn487x.c: 130:     resp[0] = RN487X.Read();
 16800     037B  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16801     037C  0084               	movwf	4
 16802     037D  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16803     037E  0085               	movwf	5
 16804     037F  3F01               	moviw [1]fsr0
 16805     0380  008A               	movwf	10
 16806     0381  3F00               	moviw [0]fsr0
 16807     0382  000A               	callw
 16808     0383  3183               	pagesel	$
 16809     0384  00F3               	movwf	RN487X_ReadDefaultResponse@resp
 16810     0385                     l8257:
 16811                           
 16812                           ;mcc_generated_files/rn487x/rn487x.c: 131:     resp[1] = RN487X.Read();
 16813     0385  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16814     0386  0084               	movwf	4
 16815     0387  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16816     0388  0085               	movwf	5
 16817     0389  3F01               	moviw [1]fsr0
 16818     038A  008A               	movwf	10
 16819     038B  3F00               	moviw [0]fsr0
 16820     038C  000A               	callw
 16821     038D  3183               	pagesel	$
 16822     038E  00F4               	movwf	RN487X_ReadDefaultResponse@resp+1
 16823     038F                     l8259:
 16824                           
 16825                           ;mcc_generated_files/rn487x/rn487x.c: 132:     resp[2] = RN487X.Read();
 16826     038F  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16827     0390  0084               	movwf	4
 16828     0391  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16829     0392  0085               	movwf	5
 16830     0393  3F01               	moviw [1]fsr0
 16831     0394  008A               	movwf	10
 16832     0395  3F00               	moviw [0]fsr0
 16833     0396  000A               	callw
 16834     0397  3183               	pagesel	$
 16835     0398  00F5               	movwf	RN487X_ReadDefaultResponse@resp+2
 16836                           
 16837                           ;mcc_generated_files/rn487x/rn487x.c: 134:     switch (resp[0])
 16838     0399  2BB9               	goto	l8279
 16839     039A                     l8261:
 16840                           
 16841                           ;mcc_generated_files/rn487x/rn487x.c: 137:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 138:             if ((resp[1] == 'O') && (resp[2] == 'K'))
 16842     039A  304F               	movlw	79
 16843     039B  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 16844     039C  1D03               	btfss	3,2
 16845     039D  2B9F               	goto	u4271
 16846     039E  2BA0               	goto	u4270
 16847     039F                     u4271:
 16848     039F  2BC1               	goto	l8281
 16849     03A0                     u4270:
 16850     03A0                     l8263:
 16851     03A0  304B               	movlw	75
 16852     03A1  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 16853     03A2  1D03               	btfss	3,2
 16854     03A3  2BA5               	goto	u4281
 16855     03A4  2BA6               	goto	u4280
 16856     03A5                     u4281:
 16857     03A5  2BC1               	goto	l8281
 16858     03A6                     u4280:
 16859     03A6                     l8265:
 16860                           
 16861                           ;mcc_generated_files/rn487x/rn487x.c: 139:                 status = 1;
 16862     03A6  01F6               	clrf	RN487X_ReadDefaultResponse@status
 16863     03A7  0AF6               	incf	RN487X_ReadDefaultResponse@status,f
 16864     03A8  2BC1               	goto	l8281
 16865     03A9                     l8267:
 16866                           
 16867                           ;mcc_generated_files/rn487x/rn487x.c: 144:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 145:             if ((resp[1] == 'r') && (resp[2] == 'r'))
 16868     03A9  3072               	movlw	114
 16869     03AA  0674               	xorwf	RN487X_ReadDefaultResponse@resp+1,w
 16870     03AB  1D03               	btfss	3,2
 16871     03AC  2BAE               	goto	u4291
 16872     03AD  2BAF               	goto	u4290
 16873     03AE                     u4291:
 16874     03AE  2BC1               	goto	l8281
 16875     03AF                     u4290:
 16876     03AF                     l8269:
 16877     03AF  3072               	movlw	114
 16878     03B0  0675               	xorwf	RN487X_ReadDefaultResponse@resp+2,w
 16879     03B1  1D03               	btfss	3,2
 16880     03B2  2BB4               	goto	u4301
 16881     03B3  2BB5               	goto	u4300
 16882     03B4                     u4301:
 16883     03B4  2BC1               	goto	l8281
 16884     03B5                     u4300:
 16885     03B5                     l8271:
 16886                           
 16887                           ;mcc_generated_files/rn487x/rn487x.c: 146:                 status = 0;
 16888     03B5  01F6               	clrf	RN487X_ReadDefaultResponse@status
 16889     03B6  2BC1               	goto	l8281
 16890     03B7                     l8273:
 16891                           
 16892                           ;mcc_generated_files/rn487x/rn487x.c: 151:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 152:             return status;
 16893     03B7  3000               	movlw	0
 16894     03B8  2C01               	goto	l905
 16895     03B9                     l8279:
 16896     03B9  0873               	movf	RN487X_ReadDefaultResponse@resp,w
 16897                           
 16898                           ; Switch size 1, requested type "simple"
 16899                           ; Number of cases is 2, Range of values is 65 to 69
 16900                           ; switch strategies available:
 16901                           ; Name         Instructions Cycles
 16902                           ; simple_byte            7     4 (average)
 16903                           ; direct_byte           19     9 (fixed)
 16904                           ; jumptable            263     9 (fixed)
 16905                           ;	Chosen strategy is simple_byte
 16906     03BA  3A41               	xorlw	65	; case 65
 16907     03BB  1903               	skipnz
 16908     03BC  2B9A               	goto	l8261
 16909     03BD  3A04               	xorlw	4	; case 69
 16910     03BE  1903               	skipnz
 16911     03BF  2BA9               	goto	l8267
 16912     03C0  2BB7               	goto	l8273
 16913     03C1                     l8281:
 16914                           
 16915                           ;mcc_generated_files/rn487x/rn487x.c: 157:     RN487X.Read();
 16916     03C1  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16917     03C2  0084               	movwf	4
 16918     03C3  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16919     03C4  0085               	movwf	5
 16920     03C5  3F01               	moviw [1]fsr0
 16921     03C6  008A               	movwf	10
 16922     03C7  3F00               	moviw [0]fsr0
 16923     03C8  000A               	callw
 16924     03C9  3183               	pagesel	$
 16925                           
 16926                           ;mcc_generated_files/rn487x/rn487x.c: 158:     RN487X.Read();
 16927     03CA  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16928     03CB  0084               	movwf	4
 16929     03CC  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16930     03CD  0085               	movwf	5
 16931     03CE  3F01               	moviw [1]fsr0
 16932     03CF  008A               	movwf	10
 16933     03D0  3F00               	moviw [0]fsr0
 16934     03D1  000A               	callw
 16935     03D2  3183               	pagesel	$
 16936                           
 16937                           ;mcc_generated_files/rn487x/rn487x.c: 161:     RN487X.Read();
 16938     03D3  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16939     03D4  0084               	movwf	4
 16940     03D5  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16941     03D6  0085               	movwf	5
 16942     03D7  3F01               	moviw [1]fsr0
 16943     03D8  008A               	movwf	10
 16944     03D9  3F00               	moviw [0]fsr0
 16945     03DA  000A               	callw
 16946     03DB  3183               	pagesel	$
 16947                           
 16948                           ;mcc_generated_files/rn487x/rn487x.c: 162:     RN487X.Read();
 16949     03DC  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16950     03DD  0084               	movwf	4
 16951     03DE  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16952     03DF  0085               	movwf	5
 16953     03E0  3F01               	moviw [1]fsr0
 16954     03E1  008A               	movwf	10
 16955     03E2  3F00               	moviw [0]fsr0
 16956     03E3  000A               	callw
 16957     03E4  3183               	pagesel	$
 16958                           
 16959                           ;mcc_generated_files/rn487x/rn487x.c: 163:     RN487X.Read();
 16960     03E5  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16961     03E6  0084               	movwf	4
 16962     03E7  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16963     03E8  0085               	movwf	5
 16964     03E9  3F01               	moviw [1]fsr0
 16965     03EA  008A               	movwf	10
 16966     03EB  3F00               	moviw [0]fsr0
 16967     03EC  000A               	callw
 16968     03ED  3183               	pagesel	$
 16969                           
 16970                           ;mcc_generated_files/rn487x/rn487x.c: 164:     RN487X.Read();
 16971     03EE  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16972     03EF  0084               	movwf	4
 16973     03F0  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16974     03F1  0085               	movwf	5
 16975     03F2  3F01               	moviw [1]fsr0
 16976     03F3  008A               	movwf	10
 16977     03F4  3F00               	moviw [0]fsr0
 16978     03F5  000A               	callw
 16979     03F6  3183               	pagesel	$
 16980                           
 16981                           ;mcc_generated_files/rn487x/rn487x.c: 165:     RN487X.Read();
 16982     03F7  306A               	movlw	low ((_RN487X+2)| (0+32768))
 16983     03F8  0084               	movwf	4
 16984     03F9  3090               	movlw	high ((_RN487X+2)| (0+32768))
 16985     03FA  0085               	movwf	5
 16986     03FB  3F01               	moviw [1]fsr0
 16987     03FC  008A               	movwf	10
 16988     03FD  3F00               	moviw [0]fsr0
 16989     03FE  000A               	callw
 16990     03FF  3183               	pagesel	$
 16991     0400                     l8283:
 16992                           
 16993                           ;mcc_generated_files/rn487x/rn487x.c: 167:     return status;
 16994     0400  0876               	movf	RN487X_ReadDefaultResponse@status,w
 16995     0401                     l905:
 16996     0401  0008               	return
 16997     0402                     __end_of_RN487X_ReadDefaultResponse:
 16998                           
 16999                           	psect	text56
 17000     0A48                     __ptext56:	
 17001 ;; *************** function _RN487X_EnterDataMode *****************
 17002 ;; Defined at:
 17003 ;;		line 208 in file "mcc_generated_files/rn487x/rn487x.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      _Bool 
 17010 ;; Registers used:
 17011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17021 ;;Total ram usage:        0 bytes
 17022 ;; Hardware stack levels used: 1
 17023 ;; Hardware stack levels required when called: 7
 17024 ;; This function calls:
 17025 ;;		_RN487X_ReadMsg
 17026 ;;		_RN487X_SendCmd
 17027 ;; This function is called by:
 17028 ;;		_LIGHTBLUE_UpdateErrorLed
 17029 ;; This function uses a non-reentrant model
 17030 ;;
 17031                           
 17032     0A48                     _RN487X_EnterDataMode:	
 17033                           ;psect for function _RN487X_EnterDataMode
 17034                           
 17035     0A48                     l8399:	
 17036                           ;incstack = 0
 17037                           ; Regs used in _RN487X_EnterDataMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17038                           
 17039                           
 17040                           ;mcc_generated_files/rn487x/rn487x.c: 210:     const uint8_t cmdPrompt[] = {'E', 'N', 'D
      +                          ', '\r', '\n'};;mcc_generated_files/rn487x/rn487x.c: 212:     cmdBuf[0] = '-';
 17041     0A48  302D               	movlw	45
 17042     0A49  0143               	movlb	3	; select bank3
 17043     0A4A  00A0               	movwf	_cmdBuf^(0+384)
 17044                           
 17045                           ;mcc_generated_files/rn487x/rn487x.c: 213:     cmdBuf[1] = '-';
 17046     0A4B  302D               	movlw	45
 17047     0A4C  00A1               	movwf	(_cmdBuf^(0+384)+1)
 17048                           
 17049                           ;mcc_generated_files/rn487x/rn487x.c: 214:     cmdBuf[2] = '-';
 17050     0A4D  302D               	movlw	45
 17051     0A4E  00A2               	movwf	(_cmdBuf^(0+384)+2)
 17052                           
 17053                           ;mcc_generated_files/rn487x/rn487x.c: 215:     cmdBuf[3] = '\r';
 17054     0A4F  300D               	movlw	13
 17055     0A50  00A3               	movwf	(_cmdBuf^(0+384)+3)
 17056                           
 17057                           ;mcc_generated_files/rn487x/rn487x.c: 216:     cmdBuf[4] = '\n';
 17058     0A51  300A               	movlw	10
 17059     0A52  00A4               	movwf	(_cmdBuf^(0+384)+4)
 17060     0A53                     l8401:
 17061                           
 17062                           ;mcc_generated_files/rn487x/rn487x.c: 218:     RN487X_SendCmd(cmdBuf, 5);
 17063     0A53  3005               	movlw	5
 17064     0A54  00F7               	movwf	RN487X_SendCmd@cmdLen
 17065     0A55  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 17066     0A56  318D  25D8  318A   	fcall	_RN487X_SendCmd
 17067     0A59                     l8403:
 17068                           
 17069                           ;mcc_generated_files/rn487x/rn487x.c: 220:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterDataMode is never used
 17070     0A59  3028               	movlw	low (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 17071     0A5A  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 17072     0A5B  3098               	movlw	high (RN487X_EnterDataMode@cmdPrompt| (0+32768))
 17073     0A5C  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 17074     0A5D  3005               	movlw	5
 17075     0A5E  00F5               	movwf	RN487X_ReadMsg@msgLen
 17076     0A5F  318C  249B  318A   	fcall	_RN487X_ReadMsg
 17077     0A62                     l923:
 17078     0A62  0008               	return
 17079     0A63                     __end_of_RN487X_EnterDataMode:
 17080                           
 17081                           	psect	text57
 17082     096D                     __ptext57:	
 17083 ;; *************** function _RN487X_EnterCmdMode *****************
 17084 ;; Defined at:
 17085 ;;		line 195 in file "mcc_generated_files/rn487x/rn487x.c"
 17086 ;; Parameters:    Size  Location     Type
 17087 ;;		None
 17088 ;; Auto vars:     Size  Location     Type
 17089 ;;		None
 17090 ;; Return value:  Size  Location     Type
 17091 ;;                  1    wreg      _Bool 
 17092 ;; Registers used:
 17093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17094 ;; Tracked objects:
 17095 ;;		On entry : 0/0
 17096 ;;		On exit  : 0/0
 17097 ;;		Unchanged: 0/0
 17098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17103 ;;Total ram usage:        0 bytes
 17104 ;; Hardware stack levels used: 1
 17105 ;; Hardware stack levels required when called: 7
 17106 ;; This function calls:
 17107 ;;		_RN487X_ReadMsg
 17108 ;;		_RN487X_SendCmd
 17109 ;; This function is called by:
 17110 ;;		_LIGHTBLUE_UpdateErrorLed
 17111 ;; This function uses a non-reentrant model
 17112 ;;
 17113                           
 17114     096D                     _RN487X_EnterCmdMode:	
 17115                           ;psect for function _RN487X_EnterCmdMode
 17116                           
 17117     096D                     l8347:	
 17118                           ;incstack = 0
 17119                           ; Regs used in _RN487X_EnterCmdMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17120                           
 17121                           
 17122                           ;mcc_generated_files/rn487x/rn487x.c: 197:     const uint8_t cmdPrompt[] = {'C', 'M', 'D
      +                          ', '>', ' '};;mcc_generated_files/rn487x/rn487x.c: 199:     cmdBuf[0] = '$';
 17123     096D  3024               	movlw	36
 17124     096E  0143               	movlb	3	; select bank3
 17125     096F  00A0               	movwf	_cmdBuf^(0+384)
 17126                           
 17127                           ;mcc_generated_files/rn487x/rn487x.c: 200:     cmdBuf[1] = '$';
 17128     0970  3024               	movlw	36
 17129     0971  00A1               	movwf	(_cmdBuf^(0+384)+1)
 17130                           
 17131                           ;mcc_generated_files/rn487x/rn487x.c: 201:     cmdBuf[2] = '$';
 17132     0972  3024               	movlw	36
 17133     0973  00A2               	movwf	(_cmdBuf^(0+384)+2)
 17134     0974                     l8349:
 17135                           
 17136                           ;mcc_generated_files/rn487x/rn487x.c: 203:     RN487X_SendCmd(cmdBuf, 3);
 17137     0974  3003               	movlw	3
 17138     0975  00F7               	movwf	RN487X_SendCmd@cmdLen
 17139     0976  30A0               	movlw	(low (_cmdBuf| (0+256)))& (0+255)
 17140     0977  318D  25D8  3189   	fcall	_RN487X_SendCmd
 17141     097A                     l8351:
 17142                           
 17143                           ;mcc_generated_files/rn487x/rn487x.c: 205:     return RN487X_ReadMsg(cmdPrompt, sizeof (
      +                          cmdPrompt));;	Return value of _RN487X_EnterCmdMode is never used
 17144     097A  302D               	movlw	low (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 17145     097B  00F3               	movwf	RN487X_ReadMsg@expectedMsg
 17146     097C  3098               	movlw	high (RN487X_EnterCmdMode@cmdPrompt| (0+32768))
 17147     097D  00F4               	movwf	RN487X_ReadMsg@expectedMsg+1
 17148     097E  3005               	movlw	5
 17149     097F  00F5               	movwf	RN487X_ReadMsg@msgLen
 17150     0980  318C  249B  3189   	fcall	_RN487X_ReadMsg
 17151     0983                     l918:
 17152     0983  0008               	return
 17153     0984                     __end_of_RN487X_EnterCmdMode:
 17154                           
 17155                           	psect	text58
 17156     0DD8                     __ptext58:	
 17157 ;; *************** function _RN487X_SendCmd *****************
 17158 ;; Defined at:
 17159 ;;		line 79 in file "mcc_generated_files/rn487x/rn487x.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  cmd             1    wreg     PTR const unsigned char 
 17162 ;;		 -> cmdBuf(64), 
 17163 ;;  cmdLen          1    7[COMMON] unsigned char 
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;  cmd             1   10[COMMON] PTR const unsigned char 
 17166 ;;		 -> cmdBuf(64), 
 17167 ;;  index           1    9[COMMON] unsigned char 
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  1    wreg      void 
 17170 ;; Registers used:
 17171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/0
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17177 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17181 ;;Total ram usage:        4 bytes
 17182 ;; Hardware stack levels used: 1
 17183 ;; Hardware stack levels required when called: 6
 17184 ;; This function calls:
 17185 ;;		_RN487X_Write
 17186 ;;		_RN487X_is_tx_done
 17187 ;; This function is called by:
 17188 ;;		_RN487X_EnterCmdMode
 17189 ;;		_RN487X_EnterDataMode
 17190 ;;		_RN487X_SetOutputs
 17191 ;;		_RN487X_GetCmd
 17192 ;;		_RN487X_GetInputsValues
 17193 ;;		_RN487X_RebootCmd
 17194 ;;		_RN487X_Disconnect
 17195 ;; This function uses a non-reentrant model
 17196 ;;
 17197                           
 17198     0DD8                     _RN487X_SendCmd:	
 17199                           ;psect for function _RN487X_SendCmd
 17200                           
 17201                           
 17202                           ;incstack = 0
 17203                           ; Regs used in _RN487X_SendCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17204                           ;RN487X_SendCmd@cmd stored from wreg
 17205     0DD8  00FA               	movwf	RN487X_SendCmd@cmd
 17206     0DD9                     l8225:
 17207                           
 17208                           ;mcc_generated_files/rn487x/rn487x.c: 79: void RN487X_SendCmd(const uint8_t *cmd, uint8_
      +                          t cmdLen);mcc_generated_files/rn487x/rn487x.c: 80: {;mcc_generated_files/rn487x/rn487x.c
      +                          : 81:     uint8_t index = 0;
 17209     0DD9  01F9               	clrf	RN487X_SendCmd@index
 17210                           
 17211                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 17212     0DDA  2DFF               	goto	l8233
 17213     0DDB                     l8227:
 17214                           
 17215                           ;mcc_generated_files/rn487x/rn487x.c: 84:     {;mcc_generated_files/rn487x/rn487x.c: 85:
      +                                   if (RN487X.TransmitDone())
 17216     0DDB  306C               	movlw	low ((_RN487X+4)| (0+32768))
 17217     0DDC  0084               	movwf	4
 17218     0DDD  3090               	movlw	high ((_RN487X+4)| (0+32768))
 17219     0DDE  0085               	movwf	5
 17220     0DDF  3F01               	moviw [1]fsr0
 17221     0DE0  008A               	movwf	10
 17222     0DE1  3F00               	moviw [0]fsr0
 17223     0DE2  000A               	callw
 17224     0DE3  318D               	pagesel	$
 17225     0DE4  3A00               	xorlw	0
 17226     0DE5  1903               	skipnz
 17227     0DE6  2DE8               	goto	u4231
 17228     0DE7  2DE9               	goto	u4230
 17229     0DE8                     u4231:
 17230     0DE8  2DFF               	goto	l8233
 17231     0DE9                     u4230:
 17232     0DE9                     l8229:
 17233                           
 17234                           ;mcc_generated_files/rn487x/rn487x.c: 86:         {;mcc_generated_files/rn487x/rn487x.c:
      +                           87:             RN487X.Write(cmd[index]);
 17235     0DE9  0879               	movf	RN487X_SendCmd@index,w
 17236     0DEA  077A               	addwf	RN487X_SendCmd@cmd,w
 17237     0DEB  00F8               	movwf	??_RN487X_SendCmd
 17238     0DEC  0878               	movf	??_RN487X_SendCmd,w
 17239     0DED  0086               	movwf	6
 17240     0DEE  3001               	movlw	1	; select bank2/3
 17241     0DEF  0087               	movwf	7
 17242     0DF0  0801               	movf	1,w
 17243     0DF1  00F6               	movwf	RN487X_Write@txData
 17244     0DF2  3068               	movlw	low (_RN487X| (0+32768))
 17245     0DF3  0084               	movwf	4
 17246     0DF4  3090               	movlw	high (_RN487X| (0+32768))
 17247     0DF5  0085               	movwf	5
 17248     0DF6  3F01               	moviw [1]fsr0
 17249     0DF7  008A               	movwf	10
 17250     0DF8  3F00               	moviw [0]fsr0
 17251     0DF9  000A               	callw
 17252     0DFA  318D               	pagesel	$
 17253     0DFB                     l8231:
 17254                           
 17255                           ;mcc_generated_files/rn487x/rn487x.c: 88:             index++;
 17256     0DFB  3001               	movlw	1
 17257     0DFC  00F8               	movwf	??_RN487X_SendCmd
 17258     0DFD  0878               	movf	??_RN487X_SendCmd,w
 17259     0DFE  07F9               	addwf	RN487X_SendCmd@index,f
 17260     0DFF                     l8233:
 17261                           
 17262                           ;mcc_generated_files/rn487x/rn487x.c: 83:     while (index < cmdLen)
 17263     0DFF  0877               	movf	RN487X_SendCmd@cmdLen,w
 17264     0E00  0279               	subwf	RN487X_SendCmd@index,w
 17265     0E01  1C03               	skipc
 17266     0E02  2E04               	goto	u4241
 17267     0E03  2E05               	goto	u4240
 17268     0E04                     u4241:
 17269     0E04  2DDB               	goto	l8227
 17270     0E05                     u4240:
 17271     0E05                     l883:
 17272     0E05  0008               	return
 17273     0E06                     __end_of_RN487X_SendCmd:
 17274                           
 17275                           	psect	text59
 17276     176C                     __ptext59:	
 17277 ;; *************** function _RN487X_is_tx_done *****************
 17278 ;; Defined at:
 17279 ;;		line 262 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;		None
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;		None
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  1    wreg      _Bool 
 17286 ;; Registers used:
 17287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17297 ;;Total ram usage:        0 bytes
 17298 ;; Hardware stack levels used: 1
 17299 ;; Hardware stack levels required when called: 5
 17300 ;; This function calls:
 17301 ;;		_EUSART1_is_tx_done
 17302 ;;		_EUSART2_is_tx_done
 17303 ;; This function is called by:
 17304 ;;		_RN487X_SendCmd
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308     176C                     _RN487X_is_tx_done:	
 17309                           ;psect for function _RN487X_is_tx_done
 17310                           
 17311     176C                     l8109:	
 17312                           ;incstack = 0
 17313                           ; Regs used in _RN487X_is_tx_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17314                           
 17315                           
 17316                           ;mcc_generated_files/rn487x/rn487x_interface.c: 264:     return uart[UART_BLE].TransmitD
      +                          one();
 17317     176C  3022               	movlw	low ((_uart+34)| (0+32768))
 17318     176D  0084               	movwf	4
 17319     176E  3090               	movlw	high ((_uart+34)| (0+32768))
 17320     176F  0085               	movwf	5
 17321     1770  3F01               	moviw [1]fsr0
 17322     1771  008A               	movwf	10
 17323     1772  3F00               	moviw [0]fsr0
 17324     1773  000A               	callw
 17325     1774  3197               	pagesel	$
 17326     1775                     l789:
 17327     1775  0008               	return
 17328     1776                     __end_of_RN487X_is_tx_done:
 17329                           
 17330                           	psect	text60
 17331     166D                     __ptext60:	
 17332 ;; *************** function _EUSART1_is_tx_done *****************
 17333 ;; Defined at:
 17334 ;;		line 142 in file "mcc_generated_files/eusart1.c"
 17335 ;; Parameters:    Size  Location     Type
 17336 ;;		None
 17337 ;; Auto vars:     Size  Location     Type
 17338 ;;		None
 17339 ;; Return value:  Size  Location     Type
 17340 ;;                  1    wreg      _Bool 
 17341 ;; Registers used:
 17342 ;;		wreg, status,2, status,0
 17343 ;; Tracked objects:
 17344 ;;		On entry : 0/0
 17345 ;;		On exit  : 0/0
 17346 ;;		Unchanged: 0/0
 17347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17352 ;;Total ram usage:        0 bytes
 17353 ;; Hardware stack levels used: 1
 17354 ;; Hardware stack levels required when called: 4
 17355 ;; This function calls:
 17356 ;;		Nothing
 17357 ;; This function is called by:
 17358 ;;		_RN487X_is_tx_done
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362     166D                     _EUSART1_is_tx_done:	
 17363                           ;psect for function _EUSART1_is_tx_done
 17364                           
 17365     166D                     l8049:	
 17366                           ;incstack = 0
 17367                           ; Regs used in _EUSART1_is_tx_done: [wreg+status,2+status,0]
 17368                           
 17369                           
 17370                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
 17371     166D  0142               	movlb	2	; select bank2
 17372     166E  0C1E               	rrf	30,w	;volatile
 17373     166F  3901               	andlw	1
 17374     1670                     l1201:
 17375     1670  0008               	return
 17376     1671                     __end_of_EUSART1_is_tx_done:
 17377                           
 17378                           	psect	text61
 17379     1669                     __ptext61:	
 17380 ;; *************** function _EUSART2_is_tx_done *****************
 17381 ;; Defined at:
 17382 ;;		line 142 in file "mcc_generated_files/eusart2.c"
 17383 ;; Parameters:    Size  Location     Type
 17384 ;;		None
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;		None
 17387 ;; Return value:  Size  Location     Type
 17388 ;;                  1    wreg      _Bool 
 17389 ;; Registers used:
 17390 ;;		wreg, status,2, status,0
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/0
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17400 ;;Total ram usage:        0 bytes
 17401 ;; Hardware stack levels used: 1
 17402 ;; Hardware stack levels required when called: 4
 17403 ;; This function calls:
 17404 ;;		Nothing
 17405 ;; This function is called by:
 17406 ;;		_RN487X_is_tx_done
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410     1669                     _EUSART2_is_tx_done:	
 17411                           ;psect for function _EUSART2_is_tx_done
 17412                           
 17413     1669                     l8005:	
 17414                           ;incstack = 0
 17415                           ; Regs used in _EUSART2_is_tx_done: [wreg+status,2+status,0]
 17416                           
 17417                           
 17418                           ;mcc_generated_files/eusart2.c: 144:     return TX2STAbits.TRMT;
 17419     1669  0154               	movlb	20	; select bank20
 17420     166A  0C1E               	rrf	30,w	;volatile
 17421     166B  3901               	andlw	1
 17422     166C                     l1057:
 17423     166C  0008               	return
 17424     166D                     __end_of_EUSART2_is_tx_done:
 17425                           
 17426                           	psect	text62
 17427     0C9B                     __ptext62:	
 17428 ;; *************** function _RN487X_ReadMsg *****************
 17429 ;; Defined at:
 17430 ;;		line 108 in file "mcc_generated_files/rn487x/rn487x.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;  expectedMsg     2    3[COMMON] PTR const unsigned char 
 17433 ;;		 -> RN487X_RebootCmd@reboot(11), RN487X_GetInputsValues@ioValue(2), RN487X_EnterDataMode@cmdPrompt(5), RN487X_EnterC
      +mdMode@cmdPrompt(5), 
 17434 ;;  msgLen          1    5[COMMON] unsigned char 
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;  index           1    9[COMMON] unsigned char 
 17437 ;;  resp            1    8[COMMON] unsigned char 
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      _Bool 
 17440 ;; Registers used:
 17441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17447 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;Total ram usage:        7 bytes
 17452 ;; Hardware stack levels used: 1
 17453 ;; Hardware stack levels required when called: 6
 17454 ;; This function calls:
 17455 ;;		_RN487X_Read@rn487x_interface$F1335
 17456 ;; This function is called by:
 17457 ;;		_RN487X_EnterCmdMode
 17458 ;;		_RN487X_EnterDataMode
 17459 ;;		_RN487X_GetInputsValues
 17460 ;;		_RN487X_RebootCmd
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464     0C9B                     _RN487X_ReadMsg:	
 17465                           ;psect for function _RN487X_ReadMsg
 17466                           
 17467     0C9B                     l8235:	
 17468                           ;incstack = 0
 17469                           ; Regs used in _RN487X_ReadMsg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17470                           
 17471                           
 17472                           ;mcc_generated_files/rn487x/rn487x.c: 108: _Bool RN487X_ReadMsg(const uint8_t *expectedM
      +                          sg, uint8_t msgLen);mcc_generated_files/rn487x/rn487x.c: 109: {;mcc_generated_files/rn48
      +                          7x/rn487x.c: 110:     uint8_t index;;mcc_generated_files/rn487x/rn487x.c: 111:     uint8
      +                          _t resp;;mcc_generated_files/rn487x/rn487x.c: 113:     for (index = 0; index < msgLen; i
      +                          ndex++)
 17473     0C9B  01F9               	clrf	RN487X_ReadMsg@index
 17474     0C9C  2CBE               	goto	l8247
 17475     0C9D                     l8237:
 17476                           
 17477                           ;mcc_generated_files/rn487x/rn487x.c: 114:     {;mcc_generated_files/rn487x/rn487x.c: 11
      +                          5:         resp = RN487X.Read();
 17478     0C9D  306A               	movlw	low ((_RN487X+2)| (0+32768))
 17479     0C9E  0084               	movwf	4
 17480     0C9F  3090               	movlw	high ((_RN487X+2)| (0+32768))
 17481     0CA0  0085               	movwf	5
 17482     0CA1  3F01               	moviw [1]fsr0
 17483     0CA2  008A               	movwf	10
 17484     0CA3  3F00               	moviw [0]fsr0
 17485     0CA4  000A               	callw
 17486     0CA5  318C               	pagesel	$
 17487     0CA6  00F8               	movwf	RN487X_ReadMsg@resp
 17488     0CA7                     l8239:
 17489                           
 17490                           ;mcc_generated_files/rn487x/rn487x.c: 116:         if (resp != expectedMsg[index])
 17491     0CA7  0874               	movf	RN487X_ReadMsg@expectedMsg+1,w
 17492     0CA8  00F7               	movwf	??_RN487X_ReadMsg+1
 17493     0CA9  0873               	movf	RN487X_ReadMsg@expectedMsg,w
 17494     0CAA  00F6               	movwf	??_RN487X_ReadMsg
 17495     0CAB  0879               	movf	RN487X_ReadMsg@index,w
 17496     0CAC  0776               	addwf	??_RN487X_ReadMsg,w
 17497     0CAD  0084               	movwf	4
 17498     0CAE  0877               	movf	??_RN487X_ReadMsg+1,w
 17499     0CAF  1803               	skipnc
 17500     0CB0  0A77               	incf	??_RN487X_ReadMsg+1,w
 17501     0CB1  0085               	movwf	5
 17502     0CB2  0800               	movf	0,w	;code access
 17503     0CB3  0678               	xorwf	RN487X_ReadMsg@resp,w
 17504     0CB4  1903               	skipnz
 17505     0CB5  2CB7               	goto	u4251
 17506     0CB6  2CB8               	goto	u4250
 17507     0CB7                     u4251:
 17508     0CB7  2CBA               	goto	l8245
 17509     0CB8                     u4250:
 17510     0CB8                     l8241:
 17511                           
 17512                           ;mcc_generated_files/rn487x/rn487x.c: 117:         {;mcc_generated_files/rn487x/rn487x.c
      +                          : 118:             return 0;
 17513     0CB8  3000               	movlw	0
 17514     0CB9  2CC5               	goto	l894
 17515     0CBA                     l8245:
 17516                           
 17517                           ;mcc_generated_files/rn487x/rn487x.c: 120:     }
 17518     0CBA  3001               	movlw	1
 17519     0CBB  00F6               	movwf	??_RN487X_ReadMsg
 17520     0CBC  0876               	movf	??_RN487X_ReadMsg,w
 17521     0CBD  07F9               	addwf	RN487X_ReadMsg@index,f
 17522     0CBE                     l8247:
 17523     0CBE  0875               	movf	RN487X_ReadMsg@msgLen,w
 17524     0CBF  0279               	subwf	RN487X_ReadMsg@index,w
 17525     0CC0  1C03               	skipc
 17526     0CC1  2CC3               	goto	u4261
 17527     0CC2  2CC4               	goto	u4260
 17528     0CC3                     u4261:
 17529     0CC3  2C9D               	goto	l8237
 17530     0CC4                     u4260:
 17531     0CC4                     l8249:
 17532                           
 17533                           ;mcc_generated_files/rn487x/rn487x.c: 122:     return 1;
 17534     0CC4  3001               	movlw	1
 17535     0CC5                     l894:
 17536     0CC5  0008               	return
 17537     0CC6                     __end_of_RN487X_ReadMsg:
 17538                           
 17539                           	psect	text63
 17540     1762                     __ptext63:	
 17541 ;; *************** function _RN487X_Read@rn487x_interface$F1335 *****************
 17542 ;; Defined at:
 17543 ;;		line 257 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 17544 ;; Parameters:    Size  Location     Type
 17545 ;;		None
 17546 ;; Auto vars:     Size  Location     Type
 17547 ;;		None
 17548 ;; Return value:  Size  Location     Type
 17549 ;;                  1    wreg      unsigned char 
 17550 ;; Registers used:
 17551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17552 ;; Tracked objects:
 17553 ;;		On entry : 0/0
 17554 ;;		On exit  : 0/0
 17555 ;;		Unchanged: 0/0
 17556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17561 ;;Total ram usage:        0 bytes
 17562 ;; Hardware stack levels used: 1
 17563 ;; Hardware stack levels required when called: 5
 17564 ;; This function calls:
 17565 ;;		_EUSART1_Read
 17566 ;;		_EUSART2_Read
 17567 ;; This function is called by:
 17568 ;;		_RN487X_ReadMsg
 17569 ;;		_RN487X_ReadDefaultResponse
 17570 ;;		_RN487X_FilterData
 17571 ;;		_RN487X_Init
 17572 ;;		_RN487X_GetCmd
 17573 ;;		_RN487X_WaitForMsg
 17574 ;; This function uses a non-reentrant model
 17575 ;;
 17576                           
 17577     1762                     _RN487X_Read@rn487x_interface$F1335:	
 17578                           ;psect for function _RN487X_Read@rn487x_interface$F1335
 17579                           
 17580     1762                     l8105:	
 17581                           ;incstack = 0
 17582                           ; Regs used in _RN487X_Read@rn487x_interface$F1335: [wreg-fsr1h+status,2+status,0+pclath
      +                          +cstack]
 17583                           
 17584                           
 17585                           ;mcc_generated_files/rn487x/rn487x_interface.c: 259:     return uart[UART_BLE].Read();
 17586     1762  3014               	movlw	low ((_uart+20)| (0+32768))
 17587     1763  0084               	movwf	4
 17588     1764  3090               	movlw	high ((_uart+20)| (0+32768))
 17589     1765  0085               	movwf	5
 17590     1766  3F01               	moviw [1]fsr0
 17591     1767  008A               	movwf	10
 17592     1768  3F00               	moviw [0]fsr0
 17593     1769  000A               	callw
 17594     176A  3197               	pagesel	$
 17595     176B                     l786:
 17596     176B  0008               	return
 17597     176C                     __end_of_RN487X_Read@rn487x_interface$F1335:
 17598                           
 17599                           	psect	text64
 17600     0BD6                     __ptext64:	
 17601 ;; *************** function _EUSART1_Read *****************
 17602 ;; Defined at:
 17603 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 17604 ;; Parameters:    Size  Location     Type
 17605 ;;		None
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;  readValue       1    2[COMMON] unsigned char 
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      unsigned char 
 17610 ;; Registers used:
 17611 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17612 ;; Tracked objects:
 17613 ;;		On entry : 0/0
 17614 ;;		On exit  : 0/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;Total ram usage:        2 bytes
 17622 ;; Hardware stack levels used: 1
 17623 ;; Hardware stack levels required when called: 4
 17624 ;; This function calls:
 17625 ;;		Nothing
 17626 ;; This function is called by:
 17627 ;;		_getch
 17628 ;;		_RN487X_Read@rn487x_interface$F1335
 17629 ;;		_RN487X_Example_TransparentUart
 17630 ;;		_main
 17631 ;; This function uses a non-reentrant model
 17632 ;;
 17633                           
 17634     0BD6                     _EUSART1_Read:	
 17635                           ;psect for function _EUSART1_Read
 17636                           
 17637     0BD6                     l8053:	
 17638                           ;incstack = 0
 17639                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 17640                           
 17641     0BD6                     l8055:	
 17642                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17643                           
 17644                           
 17645                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 17646     0BD6  0140               	movlb	0	; select bank0
 17647     0BD7  0857               	movf	_eusart1RxCount,w	;volatile
 17648     0BD8  1903               	btfsc	3,2
 17649     0BD9  2BDB               	goto	u4091
 17650     0BDA  2BDC               	goto	u4090
 17651     0BDB                     u4091:
 17652     0BDB  2BD6               	goto	l8055
 17653     0BDC                     u4090:
 17654     0BDC                     l8057:
 17655                           
 17656                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 17657     0BDC  0858               	movf	_eusart1RxTail,w	;volatile
 17658     0BDD  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 17659     0BDE  0086               	movwf	6
 17660     0BDF  0187               	clrf	7
 17661     0BE0  0801               	movf	1,w
 17662     0BE1  00D6               	movwf	_eusart1RxLastError	;volatile
 17663                           
 17664                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17665     0BE2  0858               	movf	_eusart1RxTail,w
 17666     0BE3  3EC5               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 17667     0BE4  0086               	movwf	6
 17668     0BE5  0187               	clrf	7
 17669     0BE6  0801               	movf	1,w
 17670     0BE7  00F2               	movwf	EUSART1_Read@readValue
 17671     0BE8                     l8059:
 17672     0BE8  3001               	movlw	1
 17673     0BE9  00F1               	movwf	??_EUSART1_Read
 17674     0BEA  0871               	movf	??_EUSART1_Read,w
 17675     0BEB  07D8               	addwf	_eusart1RxTail,f	;volatile
 17676     0BEC                     l8061:
 17677                           
 17678                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17679     0BEC  3008               	movlw	8
 17680     0BED  0258               	subwf	_eusart1RxTail,w	;volatile
 17681     0BEE  1C03               	skipc
 17682     0BEF  2BF1               	goto	u4101
 17683     0BF0  2BF2               	goto	u4100
 17684     0BF1                     u4101:
 17685     0BF1  2BF3               	goto	l8065
 17686     0BF2                     u4100:
 17687     0BF2                     l8063:
 17688                           
 17689                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17690     0BF2  01D8               	clrf	_eusart1RxTail	;volatile
 17691     0BF3                     l8065:
 17692                           
 17693                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17694     0BF3  014E               	movlb	14	; select bank14
 17695     0BF4  1299               	bcf	25,5	;volatile
 17696     0BF5                     l8067:
 17697                           
 17698                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17699     0BF5  3001               	movlw	1
 17700     0BF6  0140               	movlb	0	; select bank0
 17701     0BF7  02D7               	subwf	_eusart1RxCount,f	;volatile
 17702     0BF8                     l8069:
 17703                           
 17704                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17705     0BF8  014E               	movlb	14	; select bank14
 17706     0BF9  1699               	bsf	25,5	;volatile
 17707     0BFA                     l8071:
 17708                           
 17709                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17710     0BFA  0872               	movf	EUSART1_Read@readValue,w
 17711     0BFB                     l1211:
 17712     0BFB  0008               	return
 17713     0BFC                     __end_of_EUSART1_Read:
 17714                           
 17715                           	psect	text65
 17716     0BB0                     __ptext65:	
 17717 ;; *************** function _EUSART2_Read *****************
 17718 ;; Defined at:
 17719 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 17720 ;; Parameters:    Size  Location     Type
 17721 ;;		None
 17722 ;; Auto vars:     Size  Location     Type
 17723 ;;  readValue       1    2[COMMON] unsigned char 
 17724 ;; Return value:  Size  Location     Type
 17725 ;;                  1    wreg      unsigned char 
 17726 ;; Registers used:
 17727 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17728 ;; Tracked objects:
 17729 ;;		On entry : 0/0
 17730 ;;		On exit  : 0/0
 17731 ;;		Unchanged: 0/0
 17732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17737 ;;Total ram usage:        2 bytes
 17738 ;; Hardware stack levels used: 1
 17739 ;; Hardware stack levels required when called: 4
 17740 ;; This function calls:
 17741 ;;		Nothing
 17742 ;; This function is called by:
 17743 ;;		_RN487X_Read@rn487x_interface$F1335
 17744 ;;		_RN487X_Example_TransparentUart
 17745 ;;		_main
 17746 ;; This function uses a non-reentrant model
 17747 ;;
 17748                           
 17749     0BB0                     _EUSART2_Read:	
 17750                           ;psect for function _EUSART2_Read
 17751                           
 17752     0BB0                     l8009:	
 17753                           ;incstack = 0
 17754                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 17755                           
 17756     0BB0                     l8011:	
 17757                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 17758                           
 17759                           
 17760                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 17761     0BB0  0140               	movlb	0	; select bank0
 17762     0BB1  085E               	movf	_eusart2RxCount,w	;volatile
 17763     0BB2  1903               	btfsc	3,2
 17764     0BB3  2BB5               	goto	u4041
 17765     0BB4  2BB6               	goto	u4040
 17766     0BB5                     u4041:
 17767     0BB5  2BB0               	goto	l8011
 17768     0BB6                     u4040:
 17769     0BB6                     l8013:
 17770                           
 17771                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 17772     0BB6  085F               	movf	_eusart2RxTail,w	;volatile
 17773     0BB7  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 17774     0BB8  0086               	movwf	6
 17775     0BB9  0187               	clrf	7
 17776     0BBA  0801               	movf	1,w
 17777     0BBB  00DD               	movwf	_eusart2RxLastError	;volatile
 17778                           
 17779                           ;mcc_generated_files/eusart2.c: 161:     readValue = eusart2RxBuffer[eusart2RxTail++];
 17780     0BBC  085F               	movf	_eusart2RxTail,w
 17781     0BBD  3EDD               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 17782     0BBE  0086               	movwf	6
 17783     0BBF  0187               	clrf	7
 17784     0BC0  0801               	movf	1,w
 17785     0BC1  00F2               	movwf	EUSART2_Read@readValue
 17786     0BC2                     l8015:
 17787     0BC2  3001               	movlw	1
 17788     0BC3  00F1               	movwf	??_EUSART2_Read
 17789     0BC4  0871               	movf	??_EUSART2_Read,w
 17790     0BC5  07DF               	addwf	_eusart2RxTail,f	;volatile
 17791     0BC6                     l8017:
 17792                           
 17793                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 17794     0BC6  3008               	movlw	8
 17795     0BC7  025F               	subwf	_eusart2RxTail,w	;volatile
 17796     0BC8  1C03               	skipc
 17797     0BC9  2BCB               	goto	u4051
 17798     0BCA  2BCC               	goto	u4050
 17799     0BCB                     u4051:
 17800     0BCB  2BCD               	goto	l8021
 17801     0BCC                     u4050:
 17802     0BCC                     l8019:
 17803                           
 17804                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 17805     0BCC  01DF               	clrf	_eusart2RxTail	;volatile
 17806     0BCD                     l8021:
 17807                           
 17808                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 17809     0BCD  014E               	movlb	14	; select bank14
 17810     0BCE  1399               	bcf	25,7	;volatile
 17811     0BCF                     l8023:
 17812                           
 17813                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 17814     0BCF  3001               	movlw	1
 17815     0BD0  0140               	movlb	0	; select bank0
 17816     0BD1  02DE               	subwf	_eusart2RxCount,f	;volatile
 17817     0BD2                     l8025:
 17818                           
 17819                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 17820     0BD2  014E               	movlb	14	; select bank14
 17821     0BD3  1799               	bsf	25,7	;volatile
 17822     0BD4                     l8027:
 17823                           
 17824                           ;mcc_generated_files/eusart2.c: 170:     return readValue;
 17825     0BD4  0872               	movf	EUSART2_Read@readValue,w
 17826     0BD5                     l1067:
 17827     0BD5  0008               	return
 17828     0BD6                     __end_of_EUSART2_Read:
 17829                           
 17830                           	psect	text66
 17831     172D                     __ptext66:	
 17832 ;; *************** function _RN487X_Delay *****************
 17833 ;; Defined at:
 17834 ;;		line 272 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;  delayCount      2    4[COMMON] unsigned short 
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;		None
 17839 ;; Return value:  Size  Location     Type
 17840 ;;                  1    wreg      void 
 17841 ;; Registers used:
 17842 ;;		wreg, status,2, status,0, pclath, cstack
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/0
 17845 ;;		On exit  : 0/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17852 ;;Total ram usage:        2 bytes
 17853 ;; Hardware stack levels used: 1
 17854 ;; Hardware stack levels required when called: 5
 17855 ;; This function calls:
 17856 ;;		_DELAY_milliseconds
 17857 ;; This function is called by:
 17858 ;;		_LIGHTBLUE_UpdateErrorLed
 17859 ;;		_RN487X_Init
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863     172D                     _RN487X_Delay:	
 17864                           ;psect for function _RN487X_Delay
 17865                           
 17866     172D                     l8407:	
 17867                           ;incstack = 0
 17868                           ; Regs used in _RN487X_Delay: [wreg+status,2+status,0+pclath+cstack]
 17869                           
 17870                           
 17871                           ;mcc_generated_files/rn487x/rn487x_interface.c: 272: static __attribute__((inline)) void
      +                           RN487X_Delay(uint16_t delayCount);mcc_generated_files/rn487x/rn487x_interface.c: 273: {
      +                          ;mcc_generated_files/rn487x/rn487x_interface.c: 274:     return DELAY_milliseconds(delay
      +                          Count);;	Return value of _RN487X_Delay is never used
 17872     172D  0875               	movf	RN487X_Delay@delayCount+1,w
 17873     172E  00F2               	movwf	DELAY_milliseconds@milliseconds+1
 17874     172F  0874               	movf	RN487X_Delay@delayCount,w
 17875     1730  00F1               	movwf	DELAY_milliseconds@milliseconds
 17876     1731  3189  212B  3197   	fcall	_DELAY_milliseconds
 17877     1734                     l795:
 17878     1734  0008               	return
 17879     1735                     __end_of_RN487X_Delay:
 17880                           
 17881                           	psect	text67
 17882     092B                     __ptext67:	
 17883 ;; *************** function _DELAY_milliseconds *****************
 17884 ;; Defined at:
 17885 ;;		line 38 in file "mcc_generated_files/delay.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;  milliseconds    2    1[COMMON] unsigned short 
 17888 ;; Auto vars:     Size  Location     Type
 17889 ;;		None
 17890 ;; Return value:  Size  Location     Type
 17891 ;;                  1    wreg      void 
 17892 ;; Registers used:
 17893 ;;		wreg, status,2, status,0
 17894 ;; Tracked objects:
 17895 ;;		On entry : 0/0
 17896 ;;		On exit  : 0/0
 17897 ;;		Unchanged: 0/0
 17898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17902 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17903 ;;Total ram usage:        3 bytes
 17904 ;; Hardware stack levels used: 1
 17905 ;; Hardware stack levels required when called: 4
 17906 ;; This function calls:
 17907 ;;		Nothing
 17908 ;; This function is called by:
 17909 ;;		_RN487X_Delay
 17910 ;; This function uses a non-reentrant model
 17911 ;;
 17912                           
 17913     092B                     _DELAY_milliseconds:	
 17914                           ;psect for function _DELAY_milliseconds
 17915                           
 17916     092B                     l8215:	
 17917                           ;incstack = 0
 17918                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 17919                           
 17920                           
 17921                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 17922     092B  2934               	goto	l8219
 17923     092C                     l8217:
 17924                           
 17925                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 17926     092C  300B               	movlw	11
 17927     092D  00F3               	movwf	??_DELAY_milliseconds
 17928     092E  3062               	movlw	98
 17929     092F                     u5767:
 17930     092F  0B89               	decfsz	9,f
 17931     0930  292F               	goto	u5767
 17932     0931  0BF3               	decfsz	??_DELAY_milliseconds,f
 17933     0932  292F               	goto	u5767
 17934     0933  3200               	nop2
 17935     0934                     l8219:
 17936                           
 17937                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 17938     0934  3001               	movlw	1
 17939     0935  02F1               	subwf	DELAY_milliseconds@milliseconds,f
 17940     0936  3000               	movlw	0
 17941     0937  3BF2               	subwfb	DELAY_milliseconds@milliseconds+1,f
 17942     0938  0A71               	incf	DELAY_milliseconds@milliseconds,w
 17943     0939  1D03               	skipz
 17944     093A  293F               	goto	u4211
 17945     093B  0A72               	incf	DELAY_milliseconds@milliseconds+1,w
 17946     093C  1D03               	btfss	3,2
 17947     093D  293F               	goto	u4211
 17948     093E  2940               	goto	u4210
 17949     093F                     u4211:
 17950     093F  292C               	goto	l8217
 17951     0940                     u4210:
 17952     0940                     l1977:
 17953     0940  0008               	return
 17954     0941                     __end_of_DELAY_milliseconds:
 17955                           
 17956                           	psect	text68
 17957     0B8A                     __ptext68:	
 17958 ;; *************** function _LIGHTBLUE_LedState *****************
 17959 ;; Defined at:
 17960 ;;		line 347 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;		None
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;  payload         3    0[BANK0 ] unsigned char [3]
 17965 ;;  led             1    3[BANK0 ] unsigned char 
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      void 
 17968 ;; Registers used:
 17969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17978 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17979 ;;Total ram usage:        4 bytes
 17980 ;; Hardware stack levels used: 1
 17981 ;; Hardware stack levels required when called: 7
 17982 ;; This function calls:
 17983 ;;		_LIGHTBLUE_GetDataLedValue
 17984 ;;		_LIGHTBLUE_GetErrorLedValue
 17985 ;;		_LIGHTBLUE_SendPacket
 17986 ;;		_LIGHTBLUE_SplitByte
 17987 ;; This function is called by:
 17988 ;;		_main
 17989 ;; This function uses a non-reentrant model
 17990 ;;
 17991                           
 17992     0B8A                     _LIGHTBLUE_LedState:	
 17993                           ;psect for function _LIGHTBLUE_LedState
 17994                           
 17995     0B8A                     l8933:	
 17996                           ;incstack = 0
 17997                           ; Regs used in _LIGHTBLUE_LedState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17998                           
 17999                           
 18000                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 349:     char payload[3];;mcc_gene
      +                          rated_files/application/LIGHTBLUE_service.c: 350:     uint8_t led;;mcc_generated_files/a
      +                          pplication/LIGHTBLUE_service.c: 352:     led = (0x00) + LIGHTBLUE_GetDataLedValue();
 18001     0B8A  3196  26C4  318B   	fcall	_LIGHTBLUE_GetDataLedValue
 18002     0B8D  0140               	movlb	0	; select bank0
 18003     0B8E  00A3               	movwf	LIGHTBLUE_LedState@led
 18004     0B8F                     l8935:
 18005                           
 18006                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 354:     *payload = '\0';
 18007     0B8F  01A0               	clrf	LIGHTBLUE_LedState@payload
 18008     0B90                     l8937:
 18009                           
 18010                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 355:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 18011     0B90  0823               	movf	LIGHTBLUE_LedState@led,w
 18012     0B91  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18013     0B92  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18014     0B93  318E  2606  318B   	fcall	_LIGHTBLUE_SplitByte
 18015     0B96                     l8939:
 18016                           
 18017                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 357:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 18018     0B96  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18019     0B97  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 18020     0B98  304C               	movlw	76
 18021     0B99  3182  22EE  318B   	fcall	_LIGHTBLUE_SendPacket
 18022     0B9C                     l8941:
 18023                           
 18024                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 359:     led = (0x10) + LIGHTBLUE_
      +                          GetErrorLedValue();
 18025     0B9C  3196  26A8  318B   	fcall	_LIGHTBLUE_GetErrorLedValue
 18026     0B9F  3E10               	addlw	16
 18027     0BA0  0140               	movlb	0	; select bank0
 18028     0BA1  00A3               	movwf	LIGHTBLUE_LedState@led
 18029                           
 18030                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 360:     *payload = '\0';
 18031     0BA2  01A0               	clrf	LIGHTBLUE_LedState@payload
 18032     0BA3                     l8943:
 18033                           
 18034                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 361:     LIGHTBLUE_SplitByte(paylo
      +                          ad, led);
 18035     0BA3  0823               	movf	LIGHTBLUE_LedState@led,w
 18036     0BA4  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18037     0BA5  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18038     0BA6  318E  2606  318B   	fcall	_LIGHTBLUE_SplitByte
 18039     0BA9                     l8945:
 18040                           
 18041                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 363:     LIGHTBLUE_SendPacket(LED_
      +                          STATE_ID, payload);
 18042     0BA9  3020               	movlw	(low (LIGHTBLUE_LedState@payload| 0))& (0+255)
 18043     0BAA  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 18044     0BAB  304C               	movlw	76
 18045     0BAC  3182  22EE  318B   	fcall	_LIGHTBLUE_SendPacket
 18046     0BAF                     l130:
 18047     0BAF  0008               	return
 18048     0BB0                     __end_of_LIGHTBLUE_LedState:
 18049                           
 18050                           	psect	text69
 18051     16A8                     __ptext69:	
 18052 ;; *************** function _LIGHTBLUE_GetErrorLedValue *****************
 18053 ;; Defined at:
 18054 ;;		line 498 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18055 ;; Parameters:    Size  Location     Type
 18056 ;;		None
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;		None
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  1    wreg      unsigned char 
 18061 ;; Registers used:
 18062 ;;		wreg, status,2, status,0
 18063 ;; Tracked objects:
 18064 ;;		On entry : 0/0
 18065 ;;		On exit  : 0/0
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18072 ;;Total ram usage:        0 bytes
 18073 ;; Hardware stack levels used: 1
 18074 ;; Hardware stack levels required when called: 4
 18075 ;; This function calls:
 18076 ;;		Nothing
 18077 ;; This function is called by:
 18078 ;;		_LIGHTBLUE_LedState
 18079 ;; This function uses a non-reentrant model
 18080 ;;
 18081                           
 18082     16A8                     _LIGHTBLUE_GetErrorLedValue:	
 18083                           ;psect for function _LIGHTBLUE_GetErrorLedValue
 18084                           
 18085     16A8                     l8695:	
 18086                           ;incstack = 0
 18087                           ; Regs used in _LIGHTBLUE_GetErrorLedValue: [wreg+status,2+status,0]
 18088                           
 18089                           
 18090                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 500:     return (0x01) - (bitMap.i
      +                          oStateBitMap.p2_2_state);
 18091     16A8  0140               	movlb	0	; select bank0
 18092     16A9  0854               	movf	_bitMap+1,w	;volatile
 18093     16AA  3901               	andlw	1
 18094     16AB  3C01               	sublw	1
 18095     16AC                     l205:
 18096     16AC  0008               	return
 18097     16AD                     __end_of_LIGHTBLUE_GetErrorLedValue:
 18098                           
 18099                           	psect	text70
 18100     16C4                     __ptext70:	
 18101 ;; *************** function _LIGHTBLUE_GetDataLedValue *****************
 18102 ;; Defined at:
 18103 ;;		line 493 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18104 ;; Parameters:    Size  Location     Type
 18105 ;;		None
 18106 ;; Auto vars:     Size  Location     Type
 18107 ;;		None
 18108 ;; Return value:  Size  Location     Type
 18109 ;;                  1    wreg      unsigned char 
 18110 ;; Registers used:
 18111 ;;		wreg, status,2, status,0
 18112 ;; Tracked objects:
 18113 ;;		On entry : 0/0
 18114 ;;		On exit  : 0/0
 18115 ;;		Unchanged: 0/0
 18116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18121 ;;Total ram usage:        0 bytes
 18122 ;; Hardware stack levels used: 1
 18123 ;; Hardware stack levels required when called: 4
 18124 ;; This function calls:
 18125 ;;		Nothing
 18126 ;; This function is called by:
 18127 ;;		_LIGHTBLUE_LedState
 18128 ;; This function uses a non-reentrant model
 18129 ;;
 18130                           
 18131     16C4                     _LIGHTBLUE_GetDataLedValue:	
 18132                           ;psect for function _LIGHTBLUE_GetDataLedValue
 18133                           
 18134     16C4                     l8691:	
 18135                           ;incstack = 0
 18136                           ; Regs used in _LIGHTBLUE_GetDataLedValue: [wreg+status,2+status,0]
 18137                           
 18138                           
 18139                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 495:     return (0x01) - PORTAbits
      +                          .RA5;
 18140     16C4  0140               	movlb	0	; select bank0
 18141     16C5  0E0C               	swapf	12,w	;volatile
 18142     16C6  0C89               	rrf	9,f
 18143     16C7  3901               	andlw	1
 18144     16C8  3C01               	sublw	1
 18145     16C9                     l202:
 18146     16C9  0008               	return
 18147     16CA                     __end_of_LIGHTBLUE_GetDataLedValue:
 18148                           
 18149                           	psect	text71
 18150     16BE                     __ptext71:	
 18151 ;; *************** function _LIGHTBLUE_Initialize *****************
 18152 ;; Defined at:
 18153 ;;		line 301 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18154 ;; Parameters:    Size  Location     Type
 18155 ;;		None
 18156 ;; Auto vars:     Size  Location     Type
 18157 ;;		None
 18158 ;; Return value:  Size  Location     Type
 18159 ;;                  1    wreg      void 
 18160 ;; Registers used:
 18161 ;;		wreg
 18162 ;; Tracked objects:
 18163 ;;		On entry : 0/0
 18164 ;;		On exit  : 0/0
 18165 ;;		Unchanged: 0/0
 18166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18171 ;;Total ram usage:        0 bytes
 18172 ;; Hardware stack levels used: 1
 18173 ;; Hardware stack levels required when called: 4
 18174 ;; This function calls:
 18175 ;;		Nothing
 18176 ;; This function is called by:
 18177 ;;		_main
 18178 ;; This function uses a non-reentrant model
 18179 ;;
 18180                           
 18181     16BE                     _LIGHTBLUE_Initialize:	
 18182                           ;psect for function _LIGHTBLUE_Initialize
 18183                           
 18184     16BE                     l8903:	
 18185                           ;incstack = 0
 18186                           ; Regs used in _LIGHTBLUE_Initialize: [wreg]
 18187                           
 18188                           
 18189                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 303:     bitMap.ioBitMap.gpioBitMa
      +                          p = 0x01;
 18190     16BE  3001               	movlw	1
 18191     16BF  0140               	movlb	0	; select bank0
 18192     16C0  00D3               	movwf	_bitMap	;volatile
 18193                           
 18194                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 304:     bitMap.ioStateBitMap.gpio
      +                          StateBitMap = 0x01;
 18195     16C1  3001               	movlw	1
 18196     16C2  00D4               	movwf	_bitMap+1	;volatile
 18197     16C3                     l118:
 18198     16C3  0008               	return
 18199     16C4                     __end_of_LIGHTBLUE_Initialize:
 18200                           
 18201                           	psect	text72
 18202     0DAA                     __ptext72:	
 18203 ;; *************** function _LIGHTBLUE_AccelSensor *****************
 18204 ;; Defined at:
 18205 ;;		line 320 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18206 ;; Parameters:    Size  Location     Type
 18207 ;;		None
 18208 ;; Auto vars:     Size  Location     Type
 18209 ;;  payload        13   19[BANK0 ] unsigned char [13]
 18210 ;;  accelData       6   32[BANK0 ] struct .
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1    wreg      void 
 18213 ;; Registers used:
 18214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18215 ;; Tracked objects:
 18216 ;;		On entry : 0/0
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18221 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18223 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18224 ;;Total ram usage:       19 bytes
 18225 ;; Hardware stack levels used: 1
 18226 ;; Hardware stack levels required when called: 16
 18227 ;; This function calls:
 18228 ;;		_BMA253_GetAccelDataXYZ
 18229 ;;		_LIGHTBLUE_SendPacket
 18230 ;;		_LIGHTBLUE_SplitWord
 18231 ;; This function is called by:
 18232 ;;		_main
 18233 ;; This function uses a non-reentrant model
 18234 ;;
 18235                           
 18236     0DAA                     _LIGHTBLUE_AccelSensor:	
 18237                           ;psect for function _LIGHTBLUE_AccelSensor
 18238                           
 18239     0DAA                     l8913:	
 18240                           ;incstack = 0
 18241 ;; hardware stack exceeded
 18242                           ; Regs used in _LIGHTBLUE_AccelSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18243                           
 18244                           
 18245                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 322:     char payload[13];;mcc_gen
      +                          erated_files/application/LIGHTBLUE_service.c: 323:     BMA253_ACCEL_DATA_t accelData;;mc
      +                          c_generated_files/application/LIGHTBLUE_service.c: 325:     *payload = '\0';
 18246     0DAA  0140               	movlb	0	; select bank0
 18247     0DAB  01B3               	clrf	LIGHTBLUE_AccelSensor@payload
 18248     0DAC                     l8915:
 18249                           
 18250                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 326:     BMA253_GetAccelDataXYZ(&a
      +                          ccelData);
 18251     0DAC  3040               	movlw	(low (LIGHTBLUE_AccelSensor@accelData| 0))& (0+255)
 18252     0DAD  3187  27B2  318D   	fcall	_BMA253_GetAccelDataXYZ
 18253     0DB0                     l8917:
 18254                           
 18255                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 329:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.x & 0x0FFF));
 18256     0DB0  30FF               	movlw	255
 18257     0DB1  0140               	movlb	0	; select bank0
 18258     0DB2  0540               	andwf	LIGHTBLUE_AccelSensor@accelData,w
 18259     0DB3  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18260     0DB4  300F               	movlw	15
 18261     0DB5  0541               	andwf	LIGHTBLUE_AccelSensor@accelData+1,w
 18262     0DB6  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18263     0DB7  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18264     0DB8  3188  200C  318D   	fcall	_LIGHTBLUE_SplitWord
 18265     0DBB                     l8919:
 18266                           
 18267                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 330:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.y & 0x0FFF));
 18268     0DBB  30FF               	movlw	255
 18269     0DBC  0140               	movlb	0	; select bank0
 18270     0DBD  0542               	andwf	LIGHTBLUE_AccelSensor@accelData+2,w
 18271     0DBE  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18272     0DBF  300F               	movlw	15
 18273     0DC0  0543               	andwf	LIGHTBLUE_AccelSensor@accelData+3,w
 18274     0DC1  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18275     0DC2  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18276     0DC3  3188  200C  318D   	fcall	_LIGHTBLUE_SplitWord
 18277     0DC6                     l8921:
 18278                           
 18279                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 331:     LIGHTBLUE_SplitWord(paylo
      +                          ad, (accelData.z & 0x0FFF));
 18280     0DC6  30FF               	movlw	255
 18281     0DC7  0140               	movlb	0	; select bank0
 18282     0DC8  0544               	andwf	LIGHTBLUE_AccelSensor@accelData+4,w
 18283     0DC9  00F9               	movwf	LIGHTBLUE_SplitWord@value
 18284     0DCA  300F               	movlw	15
 18285     0DCB  0545               	andwf	LIGHTBLUE_AccelSensor@accelData+5,w
 18286     0DCC  00FA               	movwf	LIGHTBLUE_SplitWord@value+1
 18287     0DCD  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18288     0DCE  3188  200C  318D   	fcall	_LIGHTBLUE_SplitWord
 18289     0DD1                     l8923:
 18290                           
 18291                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 333:     LIGHTBLUE_SendPacket(ACCE
      +                          L_DATA_ID, payload);
 18292     0DD1  3033               	movlw	(low (LIGHTBLUE_AccelSensor@payload| 0))& (0+255)
 18293     0DD2  00F7               	movwf	LIGHTBLUE_SendPacket@payload
 18294     0DD3  3058               	movlw	88
 18295     0DD4  3182  22EE  318D   	fcall	_LIGHTBLUE_SendPacket
 18296     0DD7                     l124:
 18297     0DD7  0008               	return
 18298     0DD8                     __end_of_LIGHTBLUE_AccelSensor:
 18299                           
 18300                           	psect	text73
 18301     080C                     __ptext73:	
 18302 ;; *************** function _LIGHTBLUE_SplitWord *****************
 18303 ;; Defined at:
 18304 ;;		line 474 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  payload         1    wreg     PTR unsigned char 
 18307 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 18308 ;;  value           2    9[COMMON] short 
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;  payload         1   11[COMMON] PTR unsigned char 
 18311 ;;		 -> LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), 
 18312 ;; Return value:  Size  Location     Type
 18313 ;;                  1    wreg      void 
 18314 ;; Registers used:
 18315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18316 ;; Tracked objects:
 18317 ;;		On entry : 0/0
 18318 ;;		On exit  : 0/0
 18319 ;;		Unchanged: 0/0
 18320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18325 ;;Total ram usage:        3 bytes
 18326 ;; Hardware stack levels used: 1
 18327 ;; Hardware stack levels required when called: 6
 18328 ;; This function calls:
 18329 ;;		_LIGHTBLUE_SplitByte
 18330 ;; This function is called by:
 18331 ;;		_LIGHTBLUE_TemperatureSensor
 18332 ;;		_LIGHTBLUE_AccelSensor
 18333 ;; This function uses a non-reentrant model
 18334 ;;
 18335                           
 18336     080C                     _LIGHTBLUE_SplitWord:	
 18337                           ;psect for function _LIGHTBLUE_SplitWord
 18338                           
 18339                           
 18340                           ;incstack = 0
 18341                           ; Regs used in _LIGHTBLUE_SplitWord: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18342                           ;LIGHTBLUE_SplitWord@payload stored from wreg
 18343     080C  00FB               	movwf	LIGHTBLUE_SplitWord@payload
 18344     080D                     l8667:
 18345                           
 18346                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 474: static void LIGHTBLUE_SplitWo
      +                          rd(char* payload, int16_t value);mcc_generated_files/application/LIGHTBLUE_service.c: 47
      +                          5: {;mcc_generated_files/application/LIGHTBLUE_service.c: 476:     LIGHTBLUE_SplitByte(p
      +                          ayload, value);
 18347     080D  0879               	movf	LIGHTBLUE_SplitWord@value,w
 18348     080E  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18349     080F  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 18350     0810  318E  2606  3188   	fcall	_LIGHTBLUE_SplitByte
 18351                           
 18352                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 477:     LIGHTBLUE_SplitByte(paylo
      +                          ad, value >> 8);
 18353     0813  087A               	movf	LIGHTBLUE_SplitWord@value+1,w
 18354     0814  00F6               	movwf	LIGHTBLUE_SplitByte@value
 18355     0815  087B               	movf	LIGHTBLUE_SplitWord@payload,w
 18356     0816  318E  2606  3188   	fcall	_LIGHTBLUE_SplitByte
 18357     0819                     l193:
 18358     0819  0008               	return
 18359     081A                     __end_of_LIGHTBLUE_SplitWord:
 18360                           
 18361                           	psect	text74
 18362     0E06                     __ptext74:	
 18363 ;; *************** function _LIGHTBLUE_SplitByte *****************
 18364 ;; Defined at:
 18365 ;;		line 480 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;  payload         1    wreg     PTR unsigned char 
 18368 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 18369 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 18370 ;;  value           1    6[COMMON] char 
 18371 ;; Auto vars:     Size  Location     Type
 18372 ;;  payload         1    8[COMMON] PTR unsigned char 
 18373 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 18374 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  1    wreg      void 
 18377 ;; Registers used:
 18378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18379 ;; Tracked objects:
 18380 ;;		On entry : 0/0
 18381 ;;		On exit  : 0/0
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18388 ;;Total ram usage:        3 bytes
 18389 ;; Hardware stack levels used: 1
 18390 ;; Hardware stack levels required when called: 5
 18391 ;; This function calls:
 18392 ;;		_strlen
 18393 ;; This function is called by:
 18394 ;;		_LIGHTBLUE_PushButton
 18395 ;;		_LIGHTBLUE_LedState
 18396 ;;		_LIGHTBLUE_SendProtocolVersion
 18397 ;;		_LIGHTBLUE_SplitWord
 18398 ;; This function uses a non-reentrant model
 18399 ;;
 18400                           
 18401     0E06                     _LIGHTBLUE_SplitByte:	
 18402                           ;psect for function _LIGHTBLUE_SplitByte
 18403                           
 18404                           
 18405                           ;incstack = 0
 18406                           ; Regs used in _LIGHTBLUE_SplitByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18407                           ;LIGHTBLUE_SplitByte@payload stored from wreg
 18408     0E06  00F8               	movwf	LIGHTBLUE_SplitByte@payload
 18409     0E07                     l8555:
 18410                           
 18411                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 480: static void LIGHTBLUE_SplitBy
      +                          te(char* payload, int8_t value);mcc_generated_files/application/LIGHTBLUE_service.c: 481
      +                          : {;mcc_generated_files/application/LIGHTBLUE_service.c: 482:     payload += strlen(payl
      +                          oad);
 18412     0E07  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18413     0E08  00F1               	movwf	strlen@s
 18414     0E09  01F2               	clrf	strlen@s+1
 18415     0E0A  318A  2215  318E   	fcall	_strlen
 18416     0E0D  0871               	movf	?_strlen,w
 18417     0E0E  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18418     0E0F  0877               	movf	??_LIGHTBLUE_SplitByte,w
 18419     0E10  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 18420     0E11                     l8557:
 18421                           
 18422                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 483:     *payload++ = (_hex[(value
      +                           >> 4) & 0xF]);
 18423     0E11  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18424     0E12  0086               	movwf	6
 18425     0E13  0187               	clrf	7
 18426     0E14  0E76               	swapf	LIGHTBLUE_SplitByte@value,w
 18427     0E15  390F               	andlw	15
 18428     0E16  1989               	btfsc	9,3
 18429     0E17  38F0               	iorlw	240
 18430     0E18  390F               	andlw	15
 18431     0E19  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 18432     0E1A  0084               	movwf	4
 18433     0E1B  3001               	movlw	1	; select bank2/3
 18434     0E1C  0085               	movwf	5
 18435     0E1D  0800               	movf	0,w
 18436     0E1E  0081               	movwf	1
 18437     0E1F                     l8559:
 18438     0E1F  3001               	movlw	1
 18439     0E20  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18440     0E21  0877               	movf	??_LIGHTBLUE_SplitByte,w
 18441     0E22  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 18442     0E23                     l8561:
 18443                           
 18444                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 484:     *payload++ = (_hex[(value
      +                          ) & 0xF]);
 18445     0E23  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18446     0E24  0086               	movwf	6
 18447     0E25  0187               	clrf	7
 18448     0E26  0876               	movf	LIGHTBLUE_SplitByte@value,w
 18449     0E27  390F               	andlw	15
 18450     0E28  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 18451     0E29  0084               	movwf	4
 18452     0E2A  3001               	movlw	1	; select bank2/3
 18453     0E2B  0085               	movwf	5
 18454     0E2C  0800               	movf	0,w
 18455     0E2D  0081               	movwf	1
 18456     0E2E                     l8563:
 18457     0E2E  3001               	movlw	1
 18458     0E2F  00F7               	movwf	??_LIGHTBLUE_SplitByte
 18459     0E30  0877               	movf	??_LIGHTBLUE_SplitByte,w
 18460     0E31  07F8               	addwf	LIGHTBLUE_SplitByte@payload,f
 18461     0E32                     l8565:
 18462                           
 18463                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 485:     *payload = '\0';
 18464     0E32  0878               	movf	LIGHTBLUE_SplitByte@payload,w
 18465     0E33  0086               	movwf	6
 18466     0E34  0187               	clrf	7
 18467     0E35  0181               	clrf	1
 18468     0E36                     l196:
 18469     0E36  0008               	return
 18470     0E37                     __end_of_LIGHTBLUE_SplitByte:
 18471                           
 18472                           	psect	text75
 18473     02EE                     __ptext75:	
 18474 ;; *************** function _LIGHTBLUE_SendPacket *****************
 18475 ;; Defined at:
 18476 ;;		line 460 in file "mcc_generated_files/application/LIGHTBLUE_service.c"
 18477 ;; Parameters:    Size  Location     Type
 18478 ;;  packetID        1    wreg     unsigned char 
 18479 ;;  payload         1    7[COMMON] PTR unsigned char 
 18480 ;;		 -> LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), LIGHTBLUE_PushButton@payload(3), LIGHT
      +BLUE_AccelSensor@payload(13), 
 18481 ;;		 -> LIGHTBLUE_TemperatureSensor@payload(5), 
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;  packetID        1   10[COMMON] unsigned char 
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  1    wreg      void 
 18486 ;; Registers used:
 18487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;Total ram usage:        4 bytes
 18498 ;; Hardware stack levels used: 1
 18499 ;; Hardware stack levels required when called: 6
 18500 ;; This function calls:
 18501 ;;		_RN487X_Write
 18502 ;;		_strlen
 18503 ;; This function is called by:
 18504 ;;		_LIGHTBLUE_TemperatureSensor
 18505 ;;		_LIGHTBLUE_AccelSensor
 18506 ;;		_LIGHTBLUE_PushButton
 18507 ;;		_LIGHTBLUE_LedState
 18508 ;;		_LIGHTBLUE_SendProtocolVersion
 18509 ;; This function uses a non-reentrant model
 18510 ;;
 18511                           
 18512     02EE                     _LIGHTBLUE_SendPacket:	
 18513                           ;psect for function _LIGHTBLUE_SendPacket
 18514                           
 18515                           
 18516                           ;incstack = 0
 18517                           ; Regs used in _LIGHTBLUE_SendPacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18518                           ;LIGHTBLUE_SendPacket@packetID stored from wreg
 18519     02EE  00FA               	movwf	LIGHTBLUE_SendPacket@packetID
 18520     02EF                     l8669:
 18521                           
 18522                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 460: static void LIGHTBLUE_SendPac
      +                          ket(char packetID, char* payload);mcc_generated_files/application/LIGHTBLUE_service.c: 4
      +                          61: {;mcc_generated_files/application/LIGHTBLUE_service.c: 462:     RN487X.Write(('['));
 18523     02EF  305B               	movlw	91
 18524     02F0  00F6               	movwf	RN487X_Write@txData
 18525     02F1  3068               	movlw	low (_RN487X| (0+32768))
 18526     02F2  0084               	movwf	4
 18527     02F3  3090               	movlw	high (_RN487X| (0+32768))
 18528     02F4  0085               	movwf	5
 18529     02F5  3F01               	moviw [1]fsr0
 18530     02F6  008A               	movwf	10
 18531     02F7  3F00               	moviw [0]fsr0
 18532     02F8  000A               	callw
 18533     02F9  3182               	pagesel	$
 18534                           
 18535                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 463:     RN487X.Write((_hex[(seque
      +                          nceNumber++) & 0xF]));
 18536     02FA  0140               	movlb	0	; select bank0
 18537     02FB  086B               	movf	_sequenceNumber,w
 18538     02FC  390F               	andlw	15
 18539     02FD  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 18540     02FE  0086               	movwf	6
 18541     02FF  3001               	movlw	1	; select bank2/3
 18542     0300  0087               	movwf	7
 18543     0301  0801               	movf	1,w
 18544     0302  00F6               	movwf	RN487X_Write@txData
 18545     0303  3068               	movlw	low (_RN487X| (0+32768))
 18546     0304  0084               	movwf	4
 18547     0305  3090               	movlw	high (_RN487X| (0+32768))
 18548     0306  0085               	movwf	5
 18549     0307  3F01               	moviw [1]fsr0
 18550     0308  008A               	movwf	10
 18551     0309  3F00               	moviw [0]fsr0
 18552     030A  000A               	callw
 18553     030B  3182               	pagesel	$
 18554     030C                     l8671:
 18555     030C  3001               	movlw	1
 18556     030D  00F8               	movwf	??_LIGHTBLUE_SendPacket
 18557     030E  0878               	movf	??_LIGHTBLUE_SendPacket,w
 18558     030F  0140               	movlb	0	; select bank0
 18559     0310  07EB               	addwf	_sequenceNumber,f
 18560     0311                     l8673:
 18561                           
 18562                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 464:     RN487X.Write(packetID);
 18563     0311  087A               	movf	LIGHTBLUE_SendPacket@packetID,w
 18564     0312  00F6               	movwf	RN487X_Write@txData
 18565     0313  3068               	movlw	low (_RN487X| (0+32768))
 18566     0314  0084               	movwf	4
 18567     0315  3090               	movlw	high (_RN487X| (0+32768))
 18568     0316  0085               	movwf	5
 18569     0317  3F01               	moviw [1]fsr0
 18570     0318  008A               	movwf	10
 18571     0319  3F00               	moviw [0]fsr0
 18572     031A  000A               	callw
 18573     031B  3182               	pagesel	$
 18574     031C                     l8675:
 18575                           
 18576                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 465:     RN487X.Write((_hex[(strle
      +                          n(payload) >> 4) & 0xF]));
 18577     031C  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 18578     031D  00F1               	movwf	strlen@s
 18579     031E  01F2               	clrf	strlen@s+1
 18580     031F  318A  2215  3182   	fcall	_strlen
 18581     0322  0871               	movf	?_strlen,w
 18582     0323  00F8               	movwf	??_LIGHTBLUE_SendPacket
 18583     0324  0872               	movf	?_strlen+1,w
 18584     0325  00F9               	movwf	??_LIGHTBLUE_SendPacket+1
 18585     0326  3004               	movlw	4
 18586     0327                     u4805:
 18587     0327  36F9               	lsrf	??_LIGHTBLUE_SendPacket+1,f
 18588     0328  0CF8               	rrf	??_LIGHTBLUE_SendPacket,f
 18589     0329  0B89               	decfsz	9,f
 18590     032A  2B27               	goto	u4805
 18591     032B  0878               	movf	??_LIGHTBLUE_SendPacket,w
 18592     032C  390F               	andlw	15
 18593     032D  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 18594     032E  0086               	movwf	6
 18595     032F  3001               	movlw	1	; select bank2/3
 18596     0330  0087               	movwf	7
 18597     0331  0801               	movf	1,w
 18598     0332  00F6               	movwf	RN487X_Write@txData
 18599     0333  3068               	movlw	low (_RN487X| (0+32768))
 18600     0334  0084               	movwf	4
 18601     0335  3090               	movlw	high (_RN487X| (0+32768))
 18602     0336  0085               	movwf	5
 18603     0337  3F01               	moviw [1]fsr0
 18604     0338  008A               	movwf	10
 18605     0339  3F00               	moviw [0]fsr0
 18606     033A  000A               	callw
 18607     033B  3182               	pagesel	$
 18608     033C                     l8677:
 18609                           
 18610                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 466:     RN487X.Write((_hex[(strle
      +                          n(payload)) & 0xF]));
 18611     033C  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 18612     033D  00F1               	movwf	strlen@s
 18613     033E  01F2               	clrf	strlen@s+1
 18614     033F  318A  2215  3182   	fcall	_strlen
 18615     0342  0871               	movf	?_strlen,w
 18616     0343  390F               	andlw	15
 18617     0344  3E56               	addlw	(low (__hex| (0+256)))& (0+255)
 18618     0345  0086               	movwf	6
 18619     0346  3001               	movlw	1	; select bank2/3
 18620     0347  0087               	movwf	7
 18621     0348  0801               	movf	1,w
 18622     0349  00F6               	movwf	RN487X_Write@txData
 18623     034A  3068               	movlw	low (_RN487X| (0+32768))
 18624     034B  0084               	movwf	4
 18625     034C  3090               	movlw	high (_RN487X| (0+32768))
 18626     034D  0085               	movwf	5
 18627     034E  3F01               	moviw [1]fsr0
 18628     034F  008A               	movwf	10
 18629     0350  3F00               	moviw [0]fsr0
 18630     0351  000A               	callw
 18631     0352  3182               	pagesel	$
 18632                           
 18633                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 467:     while (*payload)
 18634     0353  2B66               	goto	l8683
 18635     0354                     l8679:
 18636                           
 18637                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 468:     {;mcc_generated_files/app
      +                          lication/LIGHTBLUE_service.c: 469:         RN487X.Write((*(uint8_t *)payload++));
 18638     0354  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 18639     0355  0086               	movwf	6
 18640     0356  0187               	clrf	7
 18641     0357  0801               	movf	1,w
 18642     0358  00F6               	movwf	RN487X_Write@txData
 18643     0359  3068               	movlw	low (_RN487X| (0+32768))
 18644     035A  0084               	movwf	4
 18645     035B  3090               	movlw	high (_RN487X| (0+32768))
 18646     035C  0085               	movwf	5
 18647     035D  3F01               	moviw [1]fsr0
 18648     035E  008A               	movwf	10
 18649     035F  3F00               	moviw [0]fsr0
 18650     0360  000A               	callw
 18651     0361  3182               	pagesel	$
 18652     0362                     l8681:
 18653     0362  3001               	movlw	1
 18654     0363  00F8               	movwf	??_LIGHTBLUE_SendPacket
 18655     0364  0878               	movf	??_LIGHTBLUE_SendPacket,w
 18656     0365  07F7               	addwf	LIGHTBLUE_SendPacket@payload,f
 18657     0366                     l8683:
 18658                           
 18659                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 467:     while (*payload)
 18660     0366  0877               	movf	LIGHTBLUE_SendPacket@payload,w
 18661     0367  0086               	movwf	6
 18662     0368  0187               	clrf	7
 18663     0369  0801               	movf	1,w
 18664     036A  1D03               	btfss	3,2
 18665     036B  2B6D               	goto	u4811
 18666     036C  2B6E               	goto	u4810
 18667     036D                     u4811:
 18668     036D  2B54               	goto	l8679
 18669     036E                     u4810:
 18670     036E                     l8685:
 18671                           
 18672                           ;mcc_generated_files/application/LIGHTBLUE_service.c: 471:     RN487X.Write((']'));
 18673     036E  305D               	movlw	93
 18674     036F  00F6               	movwf	RN487X_Write@txData
 18675     0370  3068               	movlw	low (_RN487X| (0+32768))
 18676     0371  0084               	movwf	4
 18677     0372  3090               	movlw	high (_RN487X| (0+32768))
 18678     0373  0085               	movwf	5
 18679     0374  3F01               	moviw [1]fsr0
 18680     0375  008A               	movwf	10
 18681     0376  3F00               	moviw [0]fsr0
 18682     0377  000A               	callw
 18683     0378  3182               	pagesel	$
 18684     0379                     l190:
 18685     0379  0008               	return
 18686     037A                     __end_of_LIGHTBLUE_SendPacket:
 18687                           
 18688                           	psect	text76
 18689     0A15                     __ptext76:	
 18690 ;; *************** function _strlen *****************
 18691 ;; Defined at:
 18692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
 18693 ;; Parameters:    Size  Location     Type
 18694 ;;  s               2    1[COMMON] PTR const unsigned char 
 18695 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3732(80), STR_5(12), STR_3(11), 
 18696 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 18697 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 18698 ;; Auto vars:     Size  Location     Type
 18699 ;;  a               2    4[COMMON] PTR const unsigned char 
 18700 ;;		 -> lightBlueSerial(80), statusBuffer@main$F3732(80), STR_5(12), STR_3(11), 
 18701 ;;		 -> statusBuffer(80), NULL(0), LIGHTBLUE_SendProtocolVersion@payload(19), LIGHTBLUE_LedState@payload(3), 
 18702 ;;		 -> LIGHTBLUE_PushButton@payload(3), LIGHTBLUE_AccelSensor@payload(13), LIGHTBLUE_TemperatureSensor@payload(5), STR_
      +1(6), 
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  2    1[COMMON] unsigned int 
 18705 ;; Registers used:
 18706 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18707 ;; Tracked objects:
 18708 ;;		On entry : 0/0
 18709 ;;		On exit  : 0/0
 18710 ;;		Unchanged: 0/0
 18711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;Total ram usage:        5 bytes
 18717 ;; Hardware stack levels used: 1
 18718 ;; Hardware stack levels required when called: 4
 18719 ;; This function calls:
 18720 ;;		Nothing
 18721 ;; This function is called by:
 18722 ;;		_LIGHTBLUE_SendProtocolVersion
 18723 ;;		_LIGHTBLUE_SendSerialData
 18724 ;;		_LIGHTBLUE_SendPacket
 18725 ;;		_LIGHTBLUE_SplitByte
 18726 ;;		_rn487x_PrintMessage
 18727 ;;		_strstr
 18728 ;; This function uses a non-reentrant model
 18729 ;;
 18730                           
 18731     0A15                     _strlen:	
 18732                           ;psect for function _strlen
 18733                           
 18734     0A15                     l8149:	
 18735                           ;incstack = 0
 18736                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18737                           
 18738     0A15  0872               	movf	strlen@s+1,w
 18739     0A16  00F5               	movwf	strlen@a+1
 18740     0A17  0871               	movf	strlen@s,w
 18741     0A18  00F4               	movwf	strlen@a
 18742     0A19  2A1E               	goto	l8153
 18743     0A1A                     l8151:
 18744     0A1A  3001               	movlw	1
 18745     0A1B  07F1               	addwf	strlen@s,f
 18746     0A1C  3000               	movlw	0
 18747     0A1D  3DF2               	addwfc	strlen@s+1,f
 18748     0A1E                     l8153:
 18749     0A1E  0871               	movf	strlen@s,w
 18750     0A1F  0084               	movwf	4
 18751     0A20  0872               	movf	strlen@s+1,w
 18752     0A21  0085               	movwf	5
 18753     0A22  0012               	moviw fsr0++
 18754     0A23  1D03               	btfss	3,2
 18755     0A24  2A26               	goto	u4181
 18756     0A25  2A27               	goto	u4180
 18757     0A26                     u4181:
 18758     0A26  2A1A               	goto	l8151
 18759     0A27                     u4180:
 18760     0A27                     l8155:
 18761     0A27  0874               	movf	strlen@a,w
 18762     0A28  0271               	subwf	strlen@s,w
 18763     0A29  00F1               	movwf	?_strlen
 18764     0A2A  0875               	movf	strlen@a+1,w
 18765     0A2B  3B72               	subwfb	strlen@s+1,w
 18766     0A2C  00F2               	movwf	?_strlen+1
 18767     0A2D                     l2678:
 18768     0A2D  0008               	return
 18769     0A2E                     __end_of_strlen:
 18770                           
 18771                           	psect	text77
 18772     17C0                     __ptext77:	
 18773 ;; *************** function _RN487X_Write *****************
 18774 ;; Defined at:
 18775 ;;		line 252 in file "mcc_generated_files/rn487x/rn487x_interface.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;  txData          1    6[COMMON] unsigned char 
 18778 ;; Auto vars:     Size  Location     Type
 18779 ;;		None
 18780 ;; Return value:  Size  Location     Type
 18781 ;;                  1    wreg      void 
 18782 ;; Registers used:
 18783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18784 ;; Tracked objects:
 18785 ;;		On entry : 0/0
 18786 ;;		On exit  : 0/0
 18787 ;;		Unchanged: 0/0
 18788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18789 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18793 ;;Total ram usage:        1 bytes
 18794 ;; Hardware stack levels used: 1
 18795 ;; Hardware stack levels required when called: 5
 18796 ;; This function calls:
 18797 ;;		_EUSART1_Write
 18798 ;;		_EUSART2_Write
 18799 ;; This function is called by:
 18800 ;;		_RN487X_SendCmd
 18801 ;;		_LIGHTBLUE_SendPacket
 18802 ;;		_LIGHTBLUE_SendSerialData
 18803 ;;		_RN487X_Example_TransparentUart
 18804 ;;		_main
 18805 ;; This function uses a non-reentrant model
 18806 ;;
 18807                           
 18808     17C0                     _RN487X_Write:	
 18809                           ;psect for function _RN487X_Write
 18810                           
 18811     17C0                     l8103:	
 18812                           ;incstack = 0
 18813                           ; Regs used in _RN487X_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18814                           
 18815                           
 18816                           ;mcc_generated_files/rn487x/rn487x_interface.c: 252: static __attribute__((inline)) void
      +                           RN487X_Write(uint8_t txData);mcc_generated_files/rn487x/rn487x_interface.c: 253: {;mcc_
      +                          generated_files/rn487x/rn487x_interface.c: 254:     uart[UART_BLE].Write(txData);
 18817     17C0  0876               	movf	RN487X_Write@txData,w
 18818     17C1  00F1               	movwf	EUSART2_Write@txData
 18819     17C2  3016               	movlw	low ((_uart+22)| (0+32768))
 18820     17C3  0084               	movwf	4
 18821     17C4  3090               	movlw	high ((_uart+22)| (0+32768))
 18822     17C5  0085               	movwf	5
 18823     17C6  3F01               	moviw [1]fsr0
 18824     17C7  008A               	movwf	10
 18825     17C8  3F00               	moviw [0]fsr0
 18826     17C9  000A               	callw
 18827     17CA  3197               	pagesel	$
 18828     17CB                     l783:
 18829     17CB  0008               	return
 18830     17CC                     __end_of_RN487X_Write:
 18831                           
 18832                           	psect	text78
 18833     0C23                     __ptext78:	
 18834 ;; *************** function _EUSART1_Write *****************
 18835 ;; Defined at:
 18836 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 18837 ;; Parameters:    Size  Location     Type
 18838 ;;  txData          1    1[COMMON] unsigned char 
 18839 ;; Auto vars:     Size  Location     Type
 18840 ;;		None
 18841 ;; Return value:  Size  Location     Type
 18842 ;;                  1    wreg      void 
 18843 ;; Registers used:
 18844 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18845 ;; Tracked objects:
 18846 ;;		On entry : 0/0
 18847 ;;		On exit  : 0/0
 18848 ;;		Unchanged: 0/0
 18849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18850 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18854 ;;Total ram usage:        2 bytes
 18855 ;; Hardware stack levels used: 1
 18856 ;; Hardware stack levels required when called: 4
 18857 ;; This function calls:
 18858 ;;		Nothing
 18859 ;; This function is called by:
 18860 ;;		_putch
 18861 ;;		_RN487X_Write
 18862 ;;		_rn487x_PrintMessageStart
 18863 ;;		_rn487x_PrintMessageEnd
 18864 ;;		_rn487x_PrintIndicatorCharacters
 18865 ;;		_rn487x_PrintMessage
 18866 ;;		_LIGHTBLUE_PerformAction
 18867 ;;		_RN487X_Example_TransparentUart
 18868 ;;		_main
 18869 ;; This function uses a non-reentrant model
 18870 ;;
 18871                           
 18872     0C23                     _EUSART1_Write:	
 18873                           ;psect for function _EUSART1_Write
 18874                           
 18875     0C23                     l8075:	
 18876                           ;incstack = 0
 18877                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18878                           
 18879     0C23                     l8077:	
 18880                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 18881                           
 18882                           
 18883                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 18884     0C23  0140               	movlb	0	; select bank0
 18885     0C24  085A               	movf	_eusart1TxBufferRemaining,w	;volatile
 18886     0C25  1903               	btfsc	3,2
 18887     0C26  2C28               	goto	u4111
 18888     0C27  2C29               	goto	u4110
 18889     0C28                     u4111:
 18890     0C28  2C23               	goto	l8077
 18891     0C29                     u4110:
 18892     0C29                     l1216:
 18893                           
 18894                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 18895     0C29  014E               	movlb	14	; select bank14
 18896     0C2A  1A19               	btfsc	25,4	;volatile
 18897     0C2B  2C2D               	goto	u4121
 18898     0C2C  2C2E               	goto	u4120
 18899     0C2D                     u4121:
 18900     0C2D  2C32               	goto	l1217
 18901     0C2E                     u4120:
 18902     0C2E                     l8079:
 18903                           
 18904                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 18905     0C2E  0871               	movf	EUSART1_Write@txData,w
 18906     0C2F  0142               	movlb	2	; select bank2
 18907     0C30  009A               	movwf	26	;volatile
 18908                           
 18909                           ;mcc_generated_files/eusart1.c: 182:     }
 18910     0C31  2C47               	goto	l8091
 18911     0C32                     l1217:	
 18912                           ;mcc_generated_files/eusart1.c: 183:     else
 18913                           
 18914                           
 18915                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 18916     0C32  1219               	bcf	25,4	;volatile
 18917     0C33                     l8081:
 18918                           
 18919                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 18920     0C33  0140               	movlb	0	; select bank0
 18921     0C34  085C               	movf	_eusart1TxHead,w
 18922     0C35  3ECD               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 18923     0C36  0086               	movwf	6
 18924     0C37  0187               	clrf	7
 18925     0C38  0871               	movf	EUSART1_Write@txData,w
 18926     0C39  0081               	movwf	1
 18927     0C3A                     l8083:
 18928     0C3A  3001               	movlw	1
 18929     0C3B  00F2               	movwf	??_EUSART1_Write
 18930     0C3C  0872               	movf	??_EUSART1_Write,w
 18931     0C3D  07DC               	addwf	_eusart1TxHead,f	;volatile
 18932     0C3E                     l8085:
 18933                           
 18934                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 18935     0C3E  3008               	movlw	8
 18936     0C3F  025C               	subwf	_eusart1TxHead,w	;volatile
 18937     0C40  1C03               	skipc
 18938     0C41  2C43               	goto	u4131
 18939     0C42  2C44               	goto	u4130
 18940     0C43                     u4131:
 18941     0C43  2C45               	goto	l8089
 18942     0C44                     u4130:
 18943     0C44                     l8087:
 18944                           
 18945                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 18946     0C44  01DC               	clrf	_eusart1TxHead	;volatile
 18947     0C45                     l8089:
 18948                           
 18949                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 18950     0C45  3001               	movlw	1
 18951     0C46  02DA               	subwf	_eusart1TxBufferRemaining,f	;volatile
 18952     0C47                     l8091:
 18953                           
 18954                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 18955     0C47  014E               	movlb	14	; select bank14
 18956     0C48  1619               	bsf	25,4	;volatile
 18957     0C49                     l1220:
 18958     0C49  0008               	return
 18959     0C4A                     __end_of_EUSART1_Write:
 18960                           
 18961                           	psect	text79
 18962     0BFC                     __ptext79:	
 18963 ;; *************** function _EUSART2_Write *****************
 18964 ;; Defined at:
 18965 ;;		line 173 in file "mcc_generated_files/eusart2.c"
 18966 ;; Parameters:    Size  Location     Type
 18967 ;;  txData          1    1[COMMON] unsigned char 
 18968 ;; Auto vars:     Size  Location     Type
 18969 ;;		None
 18970 ;; Return value:  Size  Location     Type
 18971 ;;                  1    wreg      void 
 18972 ;; Registers used:
 18973 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18974 ;; Tracked objects:
 18975 ;;		On entry : 0/0
 18976 ;;		On exit  : 0/0
 18977 ;;		Unchanged: 0/0
 18978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18983 ;;Total ram usage:        2 bytes
 18984 ;; Hardware stack levels used: 1
 18985 ;; Hardware stack levels required when called: 4
 18986 ;; This function calls:
 18987 ;;		Nothing
 18988 ;; This function is called by:
 18989 ;;		_RN487X_Write
 18990 ;;		_rn487x_PrintMessageStart
 18991 ;;		_rn487x_PrintMessageEnd
 18992 ;;		_rn487x_PrintIndicatorCharacters
 18993 ;;		_rn487x_PrintMessage
 18994 ;;		_LIGHTBLUE_PerformAction
 18995 ;;		_RN487X_Example_TransparentUart
 18996 ;;		_main
 18997 ;; This function uses a non-reentrant model
 18998 ;;
 18999                           
 19000     0BFC                     _EUSART2_Write:	
 19001                           ;psect for function _EUSART2_Write
 19002                           
 19003     0BFC                     l8031:	
 19004                           ;incstack = 0
 19005                           ; Regs used in _EUSART2_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19006                           
 19007     0BFC                     l8033:	
 19008                           ;mcc_generated_files/eusart2.c: 173: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 174: {;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBuffer
      +                          Remaining)
 19009                           
 19010                           
 19011                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
 19012     0BFC  0140               	movlb	0	; select bank0
 19013     0BFD  0860               	movf	_eusart2TxBufferRemaining,w	;volatile
 19014     0BFE  1903               	btfsc	3,2
 19015     0BFF  2C01               	goto	u4061
 19016     0C00  2C02               	goto	u4060
 19017     0C01                     u4061:
 19018     0C01  2BFC               	goto	l8033
 19019     0C02                     u4060:
 19020     0C02                     l1072:
 19021                           
 19022                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
 19023     0C02  014E               	movlb	14	; select bank14
 19024     0C03  1B19               	btfsc	25,6	;volatile
 19025     0C04  2C06               	goto	u4071
 19026     0C05  2C07               	goto	u4070
 19027     0C06                     u4071:
 19028     0C06  2C0B               	goto	l1073
 19029     0C07                     u4070:
 19030     0C07                     l8035:
 19031                           
 19032                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
 19033     0C07  0871               	movf	EUSART2_Write@txData,w
 19034     0C08  0154               	movlb	20	; select bank20
 19035     0C09  009A               	movwf	26	;volatile
 19036                           
 19037                           ;mcc_generated_files/eusart2.c: 182:     }
 19038     0C0A  2C20               	goto	l8047
 19039     0C0B                     l1073:	
 19040                           ;mcc_generated_files/eusart2.c: 183:     else
 19041                           
 19042                           
 19043                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
 19044     0C0B  1319               	bcf	25,6	;volatile
 19045     0C0C                     l8037:
 19046                           
 19047                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
 19048     0C0C  0140               	movlb	0	; select bank0
 19049     0C0D  0862               	movf	_eusart2TxHead,w
 19050     0C0E  3EE5               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 19051     0C0F  0086               	movwf	6
 19052     0C10  0187               	clrf	7
 19053     0C11  0871               	movf	EUSART2_Write@txData,w
 19054     0C12  0081               	movwf	1
 19055     0C13                     l8039:
 19056     0C13  3001               	movlw	1
 19057     0C14  00F2               	movwf	??_EUSART2_Write
 19058     0C15  0872               	movf	??_EUSART2_Write,w
 19059     0C16  07E2               	addwf	_eusart2TxHead,f	;volatile
 19060     0C17                     l8041:
 19061                           
 19062                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 19063     0C17  3008               	movlw	8
 19064     0C18  0262               	subwf	_eusart2TxHead,w	;volatile
 19065     0C19  1C03               	skipc
 19066     0C1A  2C1C               	goto	u4081
 19067     0C1B  2C1D               	goto	u4080
 19068     0C1C                     u4081:
 19069     0C1C  2C1E               	goto	l8045
 19070     0C1D                     u4080:
 19071     0C1D                     l8043:
 19072                           
 19073                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
 19074     0C1D  01E2               	clrf	_eusart2TxHead	;volatile
 19075     0C1E                     l8045:
 19076                           
 19077                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
 19078     0C1E  3001               	movlw	1
 19079     0C1F  02E0               	subwf	_eusart2TxBufferRemaining,f	;volatile
 19080     0C20                     l8047:
 19081                           
 19082                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
 19083     0C20  014E               	movlb	14	; select bank14
 19084     0C21  1719               	bsf	25,6	;volatile
 19085     0C22                     l1076:
 19086     0C22  0008               	return
 19087     0C23                     __end_of_EUSART2_Write:
 19088                           
 19089                           	psect	text80
 19090     07B2                     __ptext80:	
 19091 ;; *************** function _BMA253_GetAccelDataXYZ *****************
 19092 ;; Defined at:
 19093 ;;		line 117 in file "mcc_generated_files/application/BMA253_accel.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;  accelData       1    wreg     PTR struct .
 19096 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 19097 ;; Auto vars:     Size  Location     Type
 19098 ;;  accelData       1   16[BANK0 ] PTR struct .
 19099 ;;		 -> LIGHTBLUE_AccelSensor@accelData(6), 
 19100 ;;  sensorValue     2   17[BANK0 ] short 
 19101 ;; Return value:  Size  Location     Type
 19102 ;;                  1    wreg      void 
 19103 ;; Registers used:
 19104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19105 ;; Tracked objects:
 19106 ;;		On entry : 0/0
 19107 ;;		On exit  : 0/0
 19108 ;;		Unchanged: 0/0
 19109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19111 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19113 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19114 ;;Total ram usage:        3 bytes
 19115 ;; Hardware stack levels used: 1
 19116 ;; Hardware stack levels required when called: 15
 19117 ;; This function calls:
 19118 ;;		_BMA253_GetAccelDataX
 19119 ;;		_BMA253_GetAccelDataY
 19120 ;;		_BMA253_GetAccelDataZ
 19121 ;;		_BMA253_NewAccelDataRdyX
 19122 ;;		_BMA253_NewAccelDataRdyY
 19123 ;;		_BMA253_NewAccelDataRdyZ
 19124 ;; This function is called by:
 19125 ;;		_LIGHTBLUE_AccelSensor
 19126 ;; This function uses a non-reentrant model
 19127 ;;
 19128                           
 19129     07B2                     _BMA253_GetAccelDataXYZ:	
 19130                           ;psect for function _BMA253_GetAccelDataXYZ
 19131                           
 19132                           
 19133                           ;incstack = 0
 19134 ;; hardware stack exceeded
 19135                           ; Regs used in _BMA253_GetAccelDataXYZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19136                           ;BMA253_GetAccelDataXYZ@accelData stored from wreg
 19137     07B2  0140               	movlb	0	; select bank0
 19138     07B3  00B0               	movwf	BMA253_GetAccelDataXYZ@accelData
 19139     07B4                     l8645:
 19140     07B4                     l8647:	
 19141                           ;mcc_generated_files/application/BMA253_accel.c: 117: void BMA253_GetAccelDataXYZ(BMA253
      +                          _ACCEL_DATA_t *accelData);mcc_generated_files/application/BMA253_accel.c: 118: {;mcc_gen
      +                          erated_files/application/BMA253_accel.c: 119:     int16_t sensorValue;;mcc_generated_fil
      +                          es/application/BMA253_accel.c: 120:     while (!BMA253_NewAccelDataRdyX())
 19142                           
 19143                           
 19144                           ;mcc_generated_files/application/BMA253_accel.c: 120:     while (!BMA253_NewAccelDataRdy
      +                          X())
 19145     07B4  3188  20C0  3187   	fcall	_BMA253_NewAccelDataRdyX
 19146     07B7  3A00               	xorlw	0
 19147     07B8  1903               	skipnz
 19148     07B9  2FBB               	goto	u4771
 19149     07BA  2FBC               	goto	u4770
 19150     07BB                     u4771:
 19151     07BB  2FB4               	goto	l8647
 19152     07BC                     u4770:
 19153     07BC                     l8649:
 19154                           
 19155                           ;mcc_generated_files/application/BMA253_accel.c: 125:     BMA253_GetAccelDataX(&sensorVa
      +                          lue);
 19156     07BC  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19157     07BD  318D  2520  3187   	fcall	_BMA253_GetAccelDataX
 19158     07C0                     l8651:
 19159                           
 19160                           ;mcc_generated_files/application/BMA253_accel.c: 126:     accelData->x = sensorValue;
 19161     07C0  0140               	movlb	0	; select bank0
 19162     07C1  0830               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19163     07C2  0086               	movwf	6
 19164     07C3  0187               	clrf	7
 19165     07C4  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19166     07C5  3FC0               	movwi [0]fsr1
 19167     07C6  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19168     07C7  3FC1               	movwi [1]fsr1
 19169     07C8                     l8653:	
 19170                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 19171                           
 19172                           
 19173                           ;mcc_generated_files/application/BMA253_accel.c: 128:     while (!BMA253_NewAccelDataRdy
      +                          Y())
 19174     07C8  3188  20D1  3187   	fcall	_BMA253_NewAccelDataRdyY
 19175     07CB  3A00               	xorlw	0
 19176     07CC  1903               	skipnz
 19177     07CD  2FCF               	goto	u4781
 19178     07CE  2FD0               	goto	u4780
 19179     07CF                     u4781:
 19180     07CF  2FC8               	goto	l8653
 19181     07D0                     u4780:
 19182     07D0                     l8655:
 19183                           
 19184                           ;mcc_generated_files/application/BMA253_accel.c: 133:     BMA253_GetAccelDataY(&sensorVa
      +                          lue);
 19185     07D0  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19186     07D1  318D  254E  3187   	fcall	_BMA253_GetAccelDataY
 19187     07D4                     l8657:
 19188                           
 19189                           ;mcc_generated_files/application/BMA253_accel.c: 134:     accelData->y = sensorValue;
 19190     07D4  0140               	movlb	0	; select bank0
 19191     07D5  0830               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19192     07D6  3E02               	addlw	2
 19193     07D7  0086               	movwf	6
 19194     07D8  0187               	clrf	7
 19195     07D9  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19196     07DA  3FC0               	movwi [0]fsr1
 19197     07DB  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19198     07DC  3FC1               	movwi [1]fsr1
 19199     07DD                     l8659:	
 19200                           ;mcc_generated_files/application/BMA253_accel.c: 136:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 19201                           
 19202                           
 19203                           ;mcc_generated_files/application/BMA253_accel.c: 136:      while (!BMA253_NewAccelDataRd
      +                          yZ())
 19204     07DD  3188  20E2  3187   	fcall	_BMA253_NewAccelDataRdyZ
 19205     07E0  3A00               	xorlw	0
 19206     07E1  1903               	skipnz
 19207     07E2  2FE4               	goto	u4791
 19208     07E3  2FE5               	goto	u4790
 19209     07E4                     u4791:
 19210     07E4  2FDD               	goto	l8659
 19211     07E5                     u4790:
 19212     07E5                     l8661:
 19213                           
 19214                           ;mcc_generated_files/application/BMA253_accel.c: 141:     BMA253_GetAccelDataZ(&sensorVa
      +                          lue);
 19215     07E5  3031               	movlw	(low (BMA253_GetAccelDataXYZ@sensorValue| 0))& (0+255)
 19216     07E6  318D  257C  3187   	fcall	_BMA253_GetAccelDataZ
 19217     07E9                     l8663:
 19218                           
 19219                           ;mcc_generated_files/application/BMA253_accel.c: 142:     accelData->z = sensorValue;
 19220     07E9  0140               	movlb	0	; select bank0
 19221     07EA  0830               	movf	BMA253_GetAccelDataXYZ@accelData,w
 19222     07EB  3E04               	addlw	4
 19223     07EC  0086               	movwf	6
 19224     07ED  0187               	clrf	7
 19225     07EE  0831               	movf	BMA253_GetAccelDataXYZ@sensorValue,w
 19226     07EF  3FC0               	movwi [0]fsr1
 19227     07F0  0832               	movf	BMA253_GetAccelDataXYZ@sensorValue+1,w
 19228     07F1  3FC1               	movwi [1]fsr1
 19229     07F2                     l43:
 19230     07F2  0008               	return
 19231     07F3                     __end_of_BMA253_GetAccelDataXYZ:
 19232                           
 19233                           	psect	text81
 19234     0D7C                     __ptext81:	
 19235 ;; *************** function _BMA253_GetAccelDataZ *****************
 19236 ;; Defined at:
 19237 ;;		line 103 in file "mcc_generated_files/application/BMA253_accel.c"
 19238 ;; Parameters:    Size  Location     Type
 19239 ;;  zAccelData      1    wreg     PTR short 
 19240 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19241 ;; Auto vars:     Size  Location     Type
 19242 ;;  zAccelData      1   13[BANK0 ] PTR short 
 19243 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19244 ;;  msbData         1   15[BANK0 ] unsigned char 
 19245 ;;  lsbData         1   14[BANK0 ] unsigned char 
 19246 ;; Return value:  Size  Location     Type
 19247 ;;                  1    wreg      void 
 19248 ;; Registers used:
 19249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19250 ;; Tracked objects:
 19251 ;;		On entry : 0/0
 19252 ;;		On exit  : 0/0
 19253 ;;		Unchanged: 0/0
 19254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19257 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19258 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19259 ;;Total ram usage:        6 bytes
 19260 ;; Hardware stack levels used: 1
 19261 ;; Hardware stack levels required when called: 14
 19262 ;; This function calls:
 19263 ;;		_BMA253_NewAccelDataRdyZ
 19264 ;;		_i2c_read1ByteRegister
 19265 ;; This function is called by:
 19266 ;;		_BMA253_GetAccelDataXYZ
 19267 ;; This function uses a non-reentrant model
 19268 ;;
 19269                           
 19270     0D7C                     _BMA253_GetAccelDataZ:	
 19271                           ;psect for function _BMA253_GetAccelDataZ
 19272                           
 19273                           
 19274                           ;incstack = 0
 19275 ;; hardware stack exceeded
 19276                           ; Regs used in _BMA253_GetAccelDataZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19277                           ;BMA253_GetAccelDataZ@zAccelData stored from wreg
 19278     0D7C  0140               	movlb	0	; select bank0
 19279     0D7D  00AD               	movwf	BMA253_GetAccelDataZ@zAccelData
 19280     0D7E                     l8535:
 19281     0D7E                     l8537:	
 19282                           ;mcc_generated_files/application/BMA253_accel.c: 103: void BMA253_GetAccelDataZ(int16_t 
      +                          *zAccelData);mcc_generated_files/application/BMA253_accel.c: 104: {;mcc_generated_files/
      +                          application/BMA253_accel.c: 105:     uint8_t lsbData;;mcc_generated_files/application/BM
      +                          A253_accel.c: 106:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 
      +                          107:     while(!BMA253_NewAccelDataRdyZ())
 19283                           
 19284                           
 19285                           ;mcc_generated_files/application/BMA253_accel.c: 107:     while(!BMA253_NewAccelDataRdyZ
      +                          ())
 19286     0D7E  3188  20E2  318D   	fcall	_BMA253_NewAccelDataRdyZ
 19287     0D81  3A00               	xorlw	0
 19288     0D82  1903               	skipnz
 19289     0D83  2D85               	goto	u4691
 19290     0D84  2D86               	goto	u4690
 19291     0D85                     u4691:
 19292     0D85  2D7E               	goto	l8537
 19293     0D86                     u4690:
 19294     0D86                     l8539:
 19295                           
 19296                           ;mcc_generated_files/application/BMA253_accel.c: 112:     lsbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x06));
 19297     0D86  3006               	movlw	6
 19298     0D87  0140               	movlb	0	; select bank0
 19299     0D88  00A4               	movwf	i2c_read1ByteRegister@reg
 19300     0D89  3019               	movlw	25
 19301     0D8A  3186  260C  318D   	fcall	_i2c_read1ByteRegister
 19302     0D8D  0140               	movlb	0	; select bank0
 19303     0D8E  00AE               	movwf	BMA253_GetAccelDataZ@lsbData
 19304                           
 19305                           ;mcc_generated_files/application/BMA253_accel.c: 113:     msbData = i2c_read1ByteRegiste
      +                          r((0x19), (0x07));
 19306     0D8F  3007               	movlw	7
 19307     0D90  00A4               	movwf	i2c_read1ByteRegister@reg
 19308     0D91  3019               	movlw	25
 19309     0D92  3186  260C  318D   	fcall	_i2c_read1ByteRegister
 19310     0D95  0140               	movlb	0	; select bank0
 19311     0D96  00AF               	movwf	BMA253_GetAccelDataZ@msbData
 19312     0D97                     l8541:
 19313                           
 19314                           ;mcc_generated_files/application/BMA253_accel.c: 114:     *zAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 19315     0D97  082F               	movf	BMA253_GetAccelDataZ@msbData,w
 19316     0D98  00AB               	movwf	??_BMA253_GetAccelDataZ+1
 19317     0D99  082E               	movf	BMA253_GetAccelDataZ@lsbData,w
 19318     0D9A  00AA               	movwf	??_BMA253_GetAccelDataZ
 19319     0D9B  3004               	movlw	4
 19320     0D9C  00AC               	movwf	??_BMA253_GetAccelDataZ+2
 19321     0D9D                     u4705:
 19322     0D9D  0D2B               	rlf	??_BMA253_GetAccelDataZ+1,w
 19323     0D9E  0CAB               	rrf	??_BMA253_GetAccelDataZ+1,f
 19324     0D9F  0CAA               	rrf	??_BMA253_GetAccelDataZ,f
 19325     0DA0  0BAC               	decfsz	??_BMA253_GetAccelDataZ+2,f
 19326     0DA1  2D9D               	goto	u4705
 19327     0DA2  082D               	movf	BMA253_GetAccelDataZ@zAccelData,w
 19328     0DA3  0086               	movwf	6
 19329     0DA4  0187               	clrf	7
 19330     0DA5  082A               	movf	??_BMA253_GetAccelDataZ,w
 19331     0DA6  3FC0               	movwi [0]fsr1
 19332     0DA7  082B               	movf	??_BMA253_GetAccelDataZ+1,w
 19333     0DA8  3FC1               	movwi [1]fsr1
 19334     0DA9                     l31:
 19335     0DA9  0008               	return
 19336     0DAA                     __end_of_BMA253_GetAccelDataZ:
 19337                           
 19338                           	psect	text82
 19339     08E2                     __ptext82:	
 19340 ;; *************** function _BMA253_NewAccelDataRdyZ *****************
 19341 ;; Defined at:
 19342 ;;		line 168 in file "mcc_generated_files/application/BMA253_accel.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;		None
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;  zNewData        1   11[COMMON] _Bool 
 19347 ;; Return value:  Size  Location     Type
 19348 ;;                  1    wreg      _Bool 
 19349 ;; Registers used:
 19350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19351 ;; Tracked objects:
 19352 ;;		On entry : 0/0
 19353 ;;		On exit  : 0/0
 19354 ;;		Unchanged: 0/0
 19355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19360 ;;Total ram usage:        1 bytes
 19361 ;; Hardware stack levels used: 1
 19362 ;; Hardware stack levels required when called: 13
 19363 ;; This function calls:
 19364 ;;		_i2c_read1ByteRegister
 19365 ;; This function is called by:
 19366 ;;		_BMA253_GetAccelDataZ
 19367 ;;		_BMA253_GetAccelDataXYZ
 19368 ;; This function uses a non-reentrant model
 19369 ;;
 19370                           
 19371     08E2                     _BMA253_NewAccelDataRdyZ:	
 19372                           ;psect for function _BMA253_NewAccelDataRdyZ
 19373                           
 19374     08E2                     l8463:	
 19375                           ;incstack = 0
 19376                           ; Regs used in _BMA253_NewAccelDataRdyZ: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19377                           
 19378                           
 19379                           ;mcc_generated_files/application/BMA253_accel.c: 170:     _Bool zNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 172:     zNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          06)) & (0x01));
 19380     08E2  3006               	movlw	6
 19381     08E3  0140               	movlb	0	; select bank0
 19382     08E4  00A4               	movwf	i2c_read1ByteRegister@reg
 19383     08E5  3019               	movlw	25
 19384     08E6  3186  260C  3188   	fcall	_i2c_read1ByteRegister
 19385     08E9  3901               	andlw	1
 19386     08EA  1D03               	btfss	3,2
 19387     08EB  28ED               	goto	u4551
 19388     08EC  28EF               	goto	u4550
 19389     08ED                     u4551:
 19390     08ED  3001               	movlw	1
 19391     08EE  28F0               	goto	u4560
 19392     08EF                     u4550:
 19393     08EF  3000               	movlw	0
 19394     08F0                     u4560:
 19395     08F0  00FB               	movwf	BMA253_NewAccelDataRdyZ@zNewData
 19396     08F1                     l8465:
 19397                           
 19398                           ;mcc_generated_files/application/BMA253_accel.c: 174:     return zNewData;
 19399     08F1  087B               	movf	BMA253_NewAccelDataRdyZ@zNewData,w
 19400     08F2                     l55:
 19401     08F2  0008               	return
 19402     08F3                     __end_of_BMA253_NewAccelDataRdyZ:
 19403                           
 19404                           	psect	text83
 19405     0D4E                     __ptext83:	
 19406 ;; *************** function _BMA253_GetAccelDataY *****************
 19407 ;; Defined at:
 19408 ;;		line 89 in file "mcc_generated_files/application/BMA253_accel.c"
 19409 ;; Parameters:    Size  Location     Type
 19410 ;;  yAccelData      1    wreg     PTR short 
 19411 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19412 ;; Auto vars:     Size  Location     Type
 19413 ;;  yAccelData      1   13[BANK0 ] PTR short 
 19414 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19415 ;;  msbData         1   15[BANK0 ] unsigned char 
 19416 ;;  lsbData         1   14[BANK0 ] unsigned char 
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;Total ram usage:        6 bytes
 19431 ;; Hardware stack levels used: 1
 19432 ;; Hardware stack levels required when called: 14
 19433 ;; This function calls:
 19434 ;;		_BMA253_NewAccelDataRdyY
 19435 ;;		_i2c_read1ByteRegister
 19436 ;; This function is called by:
 19437 ;;		_BMA253_GetAccelDataXYZ
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441     0D4E                     _BMA253_GetAccelDataY:	
 19442                           ;psect for function _BMA253_GetAccelDataY
 19443                           
 19444                           
 19445                           ;incstack = 0
 19446 ;; hardware stack exceeded
 19447                           ; Regs used in _BMA253_GetAccelDataY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19448                           ;BMA253_GetAccelDataY@yAccelData stored from wreg
 19449     0D4E  0140               	movlb	0	; select bank0
 19450     0D4F  00AD               	movwf	BMA253_GetAccelDataY@yAccelData
 19451     0D50                     l8527:
 19452     0D50                     l8529:	
 19453                           ;mcc_generated_files/application/BMA253_accel.c: 89: void BMA253_GetAccelDataY(int16_t *
      +                          yAccelData);mcc_generated_files/application/BMA253_accel.c: 90: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 91:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 92:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 93: 
      +                              while(!BMA253_NewAccelDataRdyY())
 19454                           
 19455                           
 19456                           ;mcc_generated_files/application/BMA253_accel.c: 93:     while(!BMA253_NewAccelDataRdyY(
      +                          ))
 19457     0D50  3188  20D1  318D   	fcall	_BMA253_NewAccelDataRdyY
 19458     0D53  3A00               	xorlw	0
 19459     0D54  1903               	skipnz
 19460     0D55  2D57               	goto	u4671
 19461     0D56  2D58               	goto	u4670
 19462     0D57                     u4671:
 19463     0D57  2D50               	goto	l8529
 19464     0D58                     u4670:
 19465     0D58                     l8531:
 19466                           
 19467                           ;mcc_generated_files/application/BMA253_accel.c: 98:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x04));
 19468     0D58  3004               	movlw	4
 19469     0D59  0140               	movlb	0	; select bank0
 19470     0D5A  00A4               	movwf	i2c_read1ByteRegister@reg
 19471     0D5B  3019               	movlw	25
 19472     0D5C  3186  260C  318D   	fcall	_i2c_read1ByteRegister
 19473     0D5F  0140               	movlb	0	; select bank0
 19474     0D60  00AE               	movwf	BMA253_GetAccelDataY@lsbData
 19475                           
 19476                           ;mcc_generated_files/application/BMA253_accel.c: 99:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x05));
 19477     0D61  3005               	movlw	5
 19478     0D62  00A4               	movwf	i2c_read1ByteRegister@reg
 19479     0D63  3019               	movlw	25
 19480     0D64  3186  260C  318D   	fcall	_i2c_read1ByteRegister
 19481     0D67  0140               	movlb	0	; select bank0
 19482     0D68  00AF               	movwf	BMA253_GetAccelDataY@msbData
 19483     0D69                     l8533:
 19484                           
 19485                           ;mcc_generated_files/application/BMA253_accel.c: 100:     *yAccelData = ( (((int16_t)msb
      +                          Data) << 8) | (lsbData) ) >> 4;
 19486     0D69  082F               	movf	BMA253_GetAccelDataY@msbData,w
 19487     0D6A  00AB               	movwf	??_BMA253_GetAccelDataY+1
 19488     0D6B  082E               	movf	BMA253_GetAccelDataY@lsbData,w
 19489     0D6C  00AA               	movwf	??_BMA253_GetAccelDataY
 19490     0D6D  3004               	movlw	4
 19491     0D6E  00AC               	movwf	??_BMA253_GetAccelDataY+2
 19492     0D6F                     u4685:
 19493     0D6F  0D2B               	rlf	??_BMA253_GetAccelDataY+1,w
 19494     0D70  0CAB               	rrf	??_BMA253_GetAccelDataY+1,f
 19495     0D71  0CAA               	rrf	??_BMA253_GetAccelDataY,f
 19496     0D72  0BAC               	decfsz	??_BMA253_GetAccelDataY+2,f
 19497     0D73  2D6F               	goto	u4685
 19498     0D74  082D               	movf	BMA253_GetAccelDataY@yAccelData,w
 19499     0D75  0086               	movwf	6
 19500     0D76  0187               	clrf	7
 19501     0D77  082A               	movf	??_BMA253_GetAccelDataY,w
 19502     0D78  3FC0               	movwi [0]fsr1
 19503     0D79  082B               	movf	??_BMA253_GetAccelDataY+1,w
 19504     0D7A  3FC1               	movwi [1]fsr1
 19505     0D7B                     l25:
 19506     0D7B  0008               	return
 19507     0D7C                     __end_of_BMA253_GetAccelDataY:
 19508                           
 19509                           	psect	text84
 19510     08D1                     __ptext84:	
 19511 ;; *************** function _BMA253_NewAccelDataRdyY *****************
 19512 ;; Defined at:
 19513 ;;		line 159 in file "mcc_generated_files/application/BMA253_accel.c"
 19514 ;; Parameters:    Size  Location     Type
 19515 ;;		None
 19516 ;; Auto vars:     Size  Location     Type
 19517 ;;  yNewData        1   11[COMMON] _Bool 
 19518 ;; Return value:  Size  Location     Type
 19519 ;;                  1    wreg      _Bool 
 19520 ;; Registers used:
 19521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19522 ;; Tracked objects:
 19523 ;;		On entry : 0/0
 19524 ;;		On exit  : 0/0
 19525 ;;		Unchanged: 0/0
 19526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19531 ;;Total ram usage:        1 bytes
 19532 ;; Hardware stack levels used: 1
 19533 ;; Hardware stack levels required when called: 13
 19534 ;; This function calls:
 19535 ;;		_i2c_read1ByteRegister
 19536 ;; This function is called by:
 19537 ;;		_BMA253_GetAccelDataY
 19538 ;;		_BMA253_GetAccelDataXYZ
 19539 ;; This function uses a non-reentrant model
 19540 ;;
 19541                           
 19542     08D1                     _BMA253_NewAccelDataRdyY:	
 19543                           ;psect for function _BMA253_NewAccelDataRdyY
 19544                           
 19545     08D1                     l8457:	
 19546                           ;incstack = 0
 19547                           ; Regs used in _BMA253_NewAccelDataRdyY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19548                           
 19549                           
 19550                           ;mcc_generated_files/application/BMA253_accel.c: 161:     _Bool yNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 163:     yNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          04)) & (0x01));
 19551     08D1  3004               	movlw	4
 19552     08D2  0140               	movlb	0	; select bank0
 19553     08D3  00A4               	movwf	i2c_read1ByteRegister@reg
 19554     08D4  3019               	movlw	25
 19555     08D5  3186  260C  3188   	fcall	_i2c_read1ByteRegister
 19556     08D8  3901               	andlw	1
 19557     08D9  1D03               	btfss	3,2
 19558     08DA  28DC               	goto	u4531
 19559     08DB  28DE               	goto	u4530
 19560     08DC                     u4531:
 19561     08DC  3001               	movlw	1
 19562     08DD  28DF               	goto	u4540
 19563     08DE                     u4530:
 19564     08DE  3000               	movlw	0
 19565     08DF                     u4540:
 19566     08DF  00FB               	movwf	BMA253_NewAccelDataRdyY@yNewData
 19567     08E0                     l8459:
 19568                           
 19569                           ;mcc_generated_files/application/BMA253_accel.c: 165:     return yNewData;
 19570     08E0  087B               	movf	BMA253_NewAccelDataRdyY@yNewData,w
 19571     08E1                     l52:
 19572     08E1  0008               	return
 19573     08E2                     __end_of_BMA253_NewAccelDataRdyY:
 19574                           
 19575                           	psect	text85
 19576     0D20                     __ptext85:	
 19577 ;; *************** function _BMA253_GetAccelDataX *****************
 19578 ;; Defined at:
 19579 ;;		line 75 in file "mcc_generated_files/application/BMA253_accel.c"
 19580 ;; Parameters:    Size  Location     Type
 19581 ;;  xAccelData      1    wreg     PTR short 
 19582 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19583 ;; Auto vars:     Size  Location     Type
 19584 ;;  xAccelData      1   13[BANK0 ] PTR short 
 19585 ;;		 -> BMA253_GetAccelDataXYZ@sensorValue(2), 
 19586 ;;  msbData         1   15[BANK0 ] unsigned char 
 19587 ;;  lsbData         1   14[BANK0 ] unsigned char 
 19588 ;; Return value:  Size  Location     Type
 19589 ;;                  1    wreg      void 
 19590 ;; Registers used:
 19591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19592 ;; Tracked objects:
 19593 ;;		On entry : 0/0
 19594 ;;		On exit  : 0/0
 19595 ;;		Unchanged: 0/0
 19596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19598 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19599 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19600 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19601 ;;Total ram usage:        6 bytes
 19602 ;; Hardware stack levels used: 1
 19603 ;; Hardware stack levels required when called: 14
 19604 ;; This function calls:
 19605 ;;		_BMA253_NewAccelDataRdyX
 19606 ;;		_i2c_read1ByteRegister
 19607 ;; This function is called by:
 19608 ;;		_BMA253_GetAccelDataXYZ
 19609 ;; This function uses a non-reentrant model
 19610 ;;
 19611                           
 19612     0D20                     _BMA253_GetAccelDataX:	
 19613                           ;psect for function _BMA253_GetAccelDataX
 19614                           
 19615                           
 19616                           ;incstack = 0
 19617 ;; hardware stack exceeded
 19618                           ; Regs used in _BMA253_GetAccelDataX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19619                           ;BMA253_GetAccelDataX@xAccelData stored from wreg
 19620     0D20  0140               	movlb	0	; select bank0
 19621     0D21  00AD               	movwf	BMA253_GetAccelDataX@xAccelData
 19622     0D22                     l8519:
 19623     0D22                     l8521:	
 19624                           ;mcc_generated_files/application/BMA253_accel.c: 75: void BMA253_GetAccelDataX(int16_t *
      +                          xAccelData);mcc_generated_files/application/BMA253_accel.c: 76: {;mcc_generated_files/ap
      +                          plication/BMA253_accel.c: 77:     uint8_t lsbData;;mcc_generated_files/application/BMA25
      +                          3_accel.c: 78:     uint8_t msbData;;mcc_generated_files/application/BMA253_accel.c: 79: 
      +                              while(!BMA253_NewAccelDataRdyX())
 19625                           
 19626                           
 19627                           ;mcc_generated_files/application/BMA253_accel.c: 79:     while(!BMA253_NewAccelDataRdyX(
      +                          ))
 19628     0D22  3188  20C0  318D   	fcall	_BMA253_NewAccelDataRdyX
 19629     0D25  3A00               	xorlw	0
 19630     0D26  1903               	skipnz
 19631     0D27  2D29               	goto	u4651
 19632     0D28  2D2A               	goto	u4650
 19633     0D29                     u4651:
 19634     0D29  2D22               	goto	l8521
 19635     0D2A                     u4650:
 19636     0D2A                     l8523:
 19637                           
 19638                           ;mcc_generated_files/application/BMA253_accel.c: 84:     lsbData = i2c_read1ByteRegister
      +                          ((0x19), (0x02));
 19639     0D2A  3002               	movlw	2
 19640     0D2B  0140               	movlb	0	; select bank0
 19641     0D2C  00A4               	movwf	i2c_read1ByteRegister@reg
 19642     0D2D  3019               	movlw	25
 19643     0D2E  3186  260C  318D   	fcall	_i2c_read1ByteRegister
 19644     0D31  0140               	movlb	0	; select bank0
 19645     0D32  00AE               	movwf	BMA253_GetAccelDataX@lsbData
 19646                           
 19647                           ;mcc_generated_files/application/BMA253_accel.c: 85:     msbData = i2c_read1ByteRegister
      +                          ((0x19), (0x03));
 19648     0D33  3003               	movlw	3
 19649     0D34  00A4               	movwf	i2c_read1ByteRegister@reg
 19650     0D35  3019               	movlw	25
 19651     0D36  3186  260C  318D   	fcall	_i2c_read1ByteRegister
 19652     0D39  0140               	movlb	0	; select bank0
 19653     0D3A  00AF               	movwf	BMA253_GetAccelDataX@msbData
 19654     0D3B                     l8525:
 19655                           
 19656                           ;mcc_generated_files/application/BMA253_accel.c: 86:     *xAccelData = ( (((int16_t)msbD
      +                          ata) << 8) | (lsbData) ) >> 4;
 19657     0D3B  082F               	movf	BMA253_GetAccelDataX@msbData,w
 19658     0D3C  00AB               	movwf	??_BMA253_GetAccelDataX+1
 19659     0D3D  082E               	movf	BMA253_GetAccelDataX@lsbData,w
 19660     0D3E  00AA               	movwf	??_BMA253_GetAccelDataX
 19661     0D3F  3004               	movlw	4
 19662     0D40  00AC               	movwf	??_BMA253_GetAccelDataX+2
 19663     0D41                     u4665:
 19664     0D41  0D2B               	rlf	??_BMA253_GetAccelDataX+1,w
 19665     0D42  0CAB               	rrf	??_BMA253_GetAccelDataX+1,f
 19666     0D43  0CAA               	rrf	??_BMA253_GetAccelDataX,f
 19667     0D44  0BAC               	decfsz	??_BMA253_GetAccelDataX+2,f
 19668     0D45  2D41               	goto	u4665
 19669     0D46  082D               	movf	BMA253_GetAccelDataX@xAccelData,w
 19670     0D47  0086               	movwf	6
 19671     0D48  0187               	clrf	7
 19672     0D49  082A               	movf	??_BMA253_GetAccelDataX,w
 19673     0D4A  3FC0               	movwi [0]fsr1
 19674     0D4B  082B               	movf	??_BMA253_GetAccelDataX+1,w
 19675     0D4C  3FC1               	movwi [1]fsr1
 19676     0D4D                     l19:
 19677     0D4D  0008               	return
 19678     0D4E                     __end_of_BMA253_GetAccelDataX:
 19679                           
 19680                           	psect	text86
 19681     08C0                     __ptext86:	
 19682 ;; *************** function _BMA253_NewAccelDataRdyX *****************
 19683 ;; Defined at:
 19684 ;;		line 150 in file "mcc_generated_files/application/BMA253_accel.c"
 19685 ;; Parameters:    Size  Location     Type
 19686 ;;		None
 19687 ;; Auto vars:     Size  Location     Type
 19688 ;;  xNewData        1   11[COMMON] _Bool 
 19689 ;; Return value:  Size  Location     Type
 19690 ;;                  1    wreg      _Bool 
 19691 ;; Registers used:
 19692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19693 ;; Tracked objects:
 19694 ;;		On entry : 0/0
 19695 ;;		On exit  : 0/0
 19696 ;;		Unchanged: 0/0
 19697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19702 ;;Total ram usage:        1 bytes
 19703 ;; Hardware stack levels used: 1
 19704 ;; Hardware stack levels required when called: 13
 19705 ;; This function calls:
 19706 ;;		_i2c_read1ByteRegister
 19707 ;; This function is called by:
 19708 ;;		_BMA253_GetAccelDataX
 19709 ;;		_BMA253_GetAccelDataXYZ
 19710 ;; This function uses a non-reentrant model
 19711 ;;
 19712                           
 19713     08C0                     _BMA253_NewAccelDataRdyX:	
 19714                           ;psect for function _BMA253_NewAccelDataRdyX
 19715                           
 19716     08C0                     l8451:	
 19717                           ;incstack = 0
 19718                           ; Regs used in _BMA253_NewAccelDataRdyX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19719                           
 19720                           
 19721                           ;mcc_generated_files/application/BMA253_accel.c: 152:     _Bool xNewData;;mcc_generated_
      +                          files/application/BMA253_accel.c: 154:     xNewData = (i2c_read1ByteRegister((0x19), (0x
      +                          02)) & (0x01));
 19722     08C0  3002               	movlw	2
 19723     08C1  0140               	movlb	0	; select bank0
 19724     08C2  00A4               	movwf	i2c_read1ByteRegister@reg
 19725     08C3  3019               	movlw	25
 19726     08C4  3186  260C  3188   	fcall	_i2c_read1ByteRegister
 19727     08C7  3901               	andlw	1
 19728     08C8  1D03               	btfss	3,2
 19729     08C9  28CB               	goto	u4511
 19730     08CA  28CD               	goto	u4510
 19731     08CB                     u4511:
 19732     08CB  3001               	movlw	1
 19733     08CC  28CE               	goto	u4520
 19734     08CD                     u4510:
 19735     08CD  3000               	movlw	0
 19736     08CE                     u4520:
 19737     08CE  00FB               	movwf	BMA253_NewAccelDataRdyX@xNewData
 19738     08CF                     l8453:
 19739                           
 19740                           ;mcc_generated_files/application/BMA253_accel.c: 156:     return xNewData;
 19741     08CF  087B               	movf	BMA253_NewAccelDataRdyX@xNewData,w
 19742     08D0                     l49:
 19743     08D0  0008               	return
 19744     08D1                     __end_of_BMA253_NewAccelDataRdyX:
 19745                           
 19746                           	psect	text87
 19747     060C                     __ptext87:	
 19748 ;; *************** function _i2c_read1ByteRegister *****************
 19749 ;; Defined at:
 19750 ;;		line 97 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;  address         1    wreg     unsigned char 
 19753 ;;  reg             1    4[BANK0 ] unsigned char 
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;  address         1    5[BANK0 ] unsigned char 
 19756 ;;  x               2    7[BANK0 ] int 
 19757 ;;  d2              1    9[BANK0 ] unsigned char 
 19758 ;;  e               1    6[BANK0 ] enum E358
 19759 ;; Return value:  Size  Location     Type
 19760 ;;                  1    wreg      unsigned char 
 19761 ;; Registers used:
 19762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/0
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19768 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19769 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19771 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19772 ;;Total ram usage:        6 bytes
 19773 ;; Hardware stack levels used: 1
 19774 ;; Hardware stack levels required when called: 12
 19775 ;; This function calls:
 19776 ;;		_I2C1_Close
 19777 ;;		_I2C1_MasterWrite
 19778 ;;		_I2C1_Open
 19779 ;;		_I2C1_SetAddressNackCallback
 19780 ;;		_I2C1_SetBuffer
 19781 ;;		_I2C1_SetDataCompleteCallback
 19782 ;; This function is called by:
 19783 ;;		_BMA253_GetAccelDataX
 19784 ;;		_BMA253_GetAccelDataY
 19785 ;;		_BMA253_GetAccelDataZ
 19786 ;;		_BMA253_NewAccelDataRdyX
 19787 ;;		_BMA253_NewAccelDataRdyY
 19788 ;;		_BMA253_NewAccelDataRdyZ
 19789 ;;		_BMA253_GetAccelChipId
 19790 ;; This function uses a non-reentrant model
 19791 ;;
 19792                           
 19793     060C                     _i2c_read1ByteRegister:	
 19794                           ;psect for function _i2c_read1ByteRegister
 19795                           
 19796                           
 19797                           ;incstack = 0
 19798                           ; Regs used in _i2c_read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19799                           ;i2c_read1ByteRegister@address stored from wreg
 19800     060C  0140               	movlb	0	; select bank0
 19801     060D  00A5               	movwf	i2c_read1ByteRegister@address
 19802     060E                     l8317:
 19803                           
 19804                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 98: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 99:     uint8_t d2=42;
 19805     060E  302A               	movlw	42
 19806     060F  00A9               	movwf	i2c_read1ByteRegister@d2
 19807                           
 19808                           ;mcc_generated_files/drivers/i2c_simple_master.c: 100:     i2c1_error_t e;;mcc_generated
      +                          _files/drivers/i2c_simple_master.c: 101:     int x;;mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 103:     for(x = 2; x != 0; x--)
 19809     0610  3002               	movlw	2
 19810     0611  00A7               	movwf	i2c_read1ByteRegister@x
 19811     0612  3000               	movlw	0
 19812     0613  00A8               	movwf	i2c_read1ByteRegister@x+1
 19813     0614                     l8323:
 19814     0614  0140               	movlb	0	; select bank0
 19815     0615  0825               	movf	i2c_read1ByteRegister@address,w
 19816     0616  318E  26A0  3186   	fcall	_I2C1_Open
 19817     0619  3A00               	xorlw	0
 19818     061A  1903               	skipnz
 19819     061B  2E1D               	goto	u4381
 19820     061C  2E1E               	goto	u4380
 19821     061D                     u4381:
 19822     061D  2E14               	goto	l8323
 19823     061E                     u4380:
 19824     061E                     l8325:
 19825                           
 19826                           ;mcc_generated_files/drivers/i2c_simple_master.c: 106:         I2C1_SetDataCompleteCallb
      +                          ack(rd1RegCompleteHandler,&d2);
 19827     061E  305A               	movlw	low _rd1RegCompleteHandler
 19828     061F  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 19829     0620  3008               	movlw	high _rd1RegCompleteHandler
 19830     0621  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 19831     0622  3029               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 19832     0623  00F7               	movwf	I2C1_SetDataCompleteCallback@ptr
 19833     0624  3197  2794  3186   	fcall	_I2C1_SetDataCompleteCallback
 19834     0627                     l8327:
 19835                           
 19836                           ;mcc_generated_files/drivers/i2c_simple_master.c: 107:         I2C1_SetBuffer(&reg,1);
 19837     0627  3001               	movlw	1
 19838     0628  00F1               	movwf	I2C1_SetBuffer@bufferSize
 19839     0629  3000               	movlw	0
 19840     062A  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 19841     062B  3024               	movlw	(low (i2c_read1ByteRegister@reg| 0))& (0+255)
 19842     062C  3197  27F2  3186   	fcall	_I2C1_SetBuffer
 19843     062F                     l8329:
 19844                           
 19845                           ;mcc_generated_files/drivers/i2c_simple_master.c: 108:         I2C1_SetAddressNackCallba
      +                          ck(((void*)0),((void*)0));
 19846     062F  3000               	movlw	0
 19847     0630  00F5               	movwf	I2C1_SetAddressNackCallback@cb
 19848     0631  00F6               	movwf	I2C1_SetAddressNackCallback@cb+1
 19849     0632  3000               	movlw	0
 19850     0633  00F7               	movwf	I2C1_SetAddressNackCallback@ptr
 19851     0634  00F8               	movwf	I2C1_SetAddressNackCallback@ptr+1
 19852     0635  3197  279F  3186   	fcall	_I2C1_SetAddressNackCallback
 19853     0638                     l8331:
 19854                           
 19855                           ;mcc_generated_files/drivers/i2c_simple_master.c: 109:         I2C1_MasterWrite();
 19856     0638  3196  26A3  3186   	fcall	_I2C1_MasterWrite
 19857     063B                     l8333:	
 19858                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110:         while(I2C1_BUSY == (e = I
      +                          2C1_Close()));
 19859                           
 19860     063B  3189  219C  3186   	fcall	_I2C1_Close
 19861     063E  0140               	movlb	0	; select bank0
 19862     063F  00A6               	movwf	i2c_read1ByteRegister@e
 19863     0640  0326               	decf	i2c_read1ByteRegister@e,w
 19864     0641  1903               	btfsc	3,2
 19865     0642  2E44               	goto	u4391
 19866     0643  2E45               	goto	u4390
 19867     0644                     u4391:
 19868     0644  2E3B               	goto	l8333
 19869     0645                     u4390:
 19870     0645                     l8335:
 19871                           
 19872                           ;mcc_generated_files/drivers/i2c_simple_master.c: 111:         if(e==I2C1_NOERR) break;
 19873     0645  0826               	movf	i2c_read1ByteRegister@e,w
 19874     0646  1D03               	btfss	3,2
 19875     0647  2E49               	goto	u4401
 19876     0648  2E4A               	goto	u4400
 19877     0649                     u4401:
 19878     0649  2E4B               	goto	l8339
 19879     064A                     u4400:
 19880     064A  2E55               	goto	l8343
 19881     064B                     l8339:
 19882                           
 19883                           ;mcc_generated_files/drivers/i2c_simple_master.c: 112:     }
 19884     064B  30FF               	movlw	255
 19885     064C  07A7               	addwf	i2c_read1ByteRegister@x,f
 19886     064D  30FF               	movlw	255
 19887     064E  3DA8               	addwfc	i2c_read1ByteRegister@x+1,f
 19888     064F                     l8341:
 19889     064F  0827               	movf	i2c_read1ByteRegister@x,w
 19890     0650  0428               	iorwf	i2c_read1ByteRegister@x+1,w
 19891     0651  1D03               	btfss	3,2
 19892     0652  2E54               	goto	u4411
 19893     0653  2E55               	goto	u4410
 19894     0654                     u4411:
 19895     0654  2E14               	goto	l8323
 19896     0655                     u4410:
 19897     0655                     l8343:
 19898                           
 19899                           ;mcc_generated_files/drivers/i2c_simple_master.c: 115:     return d2;
 19900     0655  0829               	movf	i2c_read1ByteRegister@d2,w
 19901     0656                     l531:
 19902     0656  0008               	return
 19903     0657                     __end_of_i2c_read1ByteRegister:
 19904                           
 19905                           	psect	text88
 19906     179F                     __ptext88:	
 19907 ;; *************** function _I2C1_SetAddressNackCallback *****************
 19908 ;; Defined at:
 19909 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 19910 ;; Parameters:    Size  Location     Type
 19911 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19912 ;;		 -> NULL(1), 
 19913 ;;  ptr             2    7[COMMON] PTR void 
 19914 ;;		 -> NULL(0), 
 19915 ;; Auto vars:     Size  Location     Type
 19916 ;;		None
 19917 ;; Return value:  Size  Location     Type
 19918 ;;                  1    wreg      void 
 19919 ;; Registers used:
 19920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19921 ;; Tracked objects:
 19922 ;;		On entry : 0/0
 19923 ;;		On exit  : 0/0
 19924 ;;		Unchanged: 0/0
 19925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19929 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19930 ;;Total ram usage:        4 bytes
 19931 ;; Hardware stack levels used: 1
 19932 ;; Hardware stack levels required when called: 5
 19933 ;; This function calls:
 19934 ;;		_I2C1_SetCallback
 19935 ;; This function is called by:
 19936 ;;		_i2c_read1ByteRegister
 19937 ;;		_i2c_read2ByteRegister
 19938 ;;		_i2c_write1ByteRegister
 19939 ;;		_i2c_writeNBytes
 19940 ;;		_i2c_write2ByteRegister
 19941 ;;		_i2c_readDataBlock
 19942 ;;		_I2C1_Read1ByteRegister
 19943 ;;		_I2C1_Read2ByteRegister
 19944 ;;		_I2C1_Write1ByteRegister
 19945 ;;		_I2C1_Write2ByteRegister
 19946 ;;		_I2C1_WriteNBytes
 19947 ;;		_I2C1_ReadDataBlock
 19948 ;; This function uses a non-reentrant model
 19949 ;;
 19950                           
 19951     179F                     _I2C1_SetAddressNackCallback:	
 19952                           ;psect for function _I2C1_SetAddressNackCallback
 19953                           
 19954     179F                     l8191:	
 19955                           ;incstack = 0
 19956                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19957                           
 19958                           
 19959                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 19960     179F  0876               	movf	I2C1_SetAddressNackCallback@cb+1,w
 19961     17A0  00F2               	movwf	I2C1_SetCallback@cb+1
 19962     17A1  0875               	movf	I2C1_SetAddressNackCallback@cb,w
 19963     17A2  00F1               	movwf	I2C1_SetCallback@cb
 19964     17A3  0877               	movf	I2C1_SetAddressNackCallback@ptr,w
 19965     17A4  00F3               	movwf	I2C1_SetCallback@ptr
 19966     17A5  3002               	movlw	2
 19967     17A6  318B  2341  3197   	fcall	_I2C1_SetCallback
 19968     17A9                     l1775:
 19969     17A9  0008               	return
 19970     17AA                     __end_of_I2C1_SetAddressNackCallback:
 19971                           
 19972                           	psect	text89
 19973     0EA0                     __ptext89:	
 19974 ;; *************** function _I2C1_Open *****************
 19975 ;; Defined at:
 19976 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 19977 ;; Parameters:    Size  Location     Type
 19978 ;;  address         1    wreg     unsigned char 
 19979 ;; Auto vars:     Size  Location     Type
 19980 ;;  address         1    1[COMMON] unsigned char 
 19981 ;;  returnValue     1    2[COMMON] enum E358
 19982 ;; Return value:  Size  Location     Type
 19983 ;;                  1    wreg      enum E358
 19984 ;; Registers used:
 19985 ;;		wreg, status,2, status,0, pclath, cstack
 19986 ;; Tracked objects:
 19987 ;;		On entry : 0/0
 19988 ;;		On exit  : 0/0
 19989 ;;		Unchanged: 0/0
 19990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19995 ;;Total ram usage:        2 bytes
 19996 ;; Hardware stack levels used: 1
 19997 ;; Hardware stack levels required when called: 5
 19998 ;; This function calls:
 19999 ;;		_I2C1_MasterClearIrq
 20000 ;;		_I2C1_MasterOpen
 20001 ;; This function is called by:
 20002 ;;		_i2c_read1ByteRegister
 20003 ;;		_i2c_read2ByteRegister
 20004 ;;		_i2c_write1ByteRegister
 20005 ;;		_i2c_writeNBytes
 20006 ;;		_i2c_write2ByteRegister
 20007 ;;		_i2c_readDataBlock
 20008 ;;		_i2c_readNBytes
 20009 ;;		_I2C1_Read1ByteRegister
 20010 ;;		_I2C1_Read2ByteRegister
 20011 ;;		_I2C1_Write1ByteRegister
 20012 ;;		_I2C1_Write2ByteRegister
 20013 ;;		_I2C1_WriteNBytes
 20014 ;;		_I2C1_ReadNBytes
 20015 ;;		_I2C1_ReadDataBlock
 20016 ;; This function uses a non-reentrant model
 20017 ;;
 20018                           
 20019     0EA0                     _I2C1_Open:	
 20020                           ;psect for function _I2C1_Open
 20021                           
 20022                           
 20023                           ;incstack = 0
 20024                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 20025                           ;I2C1_Open@address stored from wreg
 20026     0EA0  00F1               	movwf	I2C1_Open@address
 20027     0EA1                     l8159:
 20028                           
 20029                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 20030     0EA1  01F2               	clrf	I2C1_Open@returnValue
 20031     0EA2  0AF2               	incf	I2C1_Open@returnValue,f
 20032                           
 20033                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 20034     0EA3  0141               	movlb	1	; select bank1
 20035     0EA4  193C               	btfsc	(_I2C1_Status^(0+128)+28),2
 20036     0EA5  2EA7               	goto	u4191
 20037     0EA6  2EA8               	goto	u4190
 20038     0EA7                     u4191:
 20039     0EA7  2ED4               	goto	l1742
 20040     0EA8                     u4190:
 20041     0EA8                     l8161:
 20042                           
 20043                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 20044     0EA8  0871               	movf	I2C1_Open@address,w
 20045     0EA9  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 20046     0EAA                     l8163:
 20047                           
 20048                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 20049     0EAA  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 20050     0EAB                     l8165:
 20051                           
 20052                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 20053     0EAB  153C               	bsf	(_I2C1_Status^(0+128)+28),2
 20054     0EAC                     l8167:
 20055                           
 20056                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 20057     0EAC  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 20058                           
 20059                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 20060     0EAD  300E               	movlw	14
 20061     0EAE  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 20062                           
 20063                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 20064     0EAF  30F4               	movlw	244
 20065     0EB0  00B4               	movwf	(_I2C1_Status^(0+128)+20)
 20066     0EB1  3001               	movlw	1
 20067     0EB2  00B5               	movwf	(_I2C1_Status^(0+128)+21)
 20068     0EB3                     l8169:
 20069                           
 20070                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 20071     0EB3  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 20072                           
 20073                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 20074     0EB4  302F               	movlw	low _I2C1_CallbackReturnStop
 20075     0EB5  00A0               	movwf	_I2C1_Status^(0+128)
 20076     0EB6  3016               	movlw	high _I2C1_CallbackReturnStop
 20077     0EB7  00A1               	movwf	(_I2C1_Status^(0+128)+1)
 20078     0EB8                     l8171:
 20079                           
 20080                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 20081     0EB8  01AC               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 20082     0EB9                     l8173:
 20083                           
 20084                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 20085     0EB9  302F               	movlw	low _I2C1_CallbackReturnStop
 20086     0EBA  00A2               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 20087     0EBB  3016               	movlw	high _I2C1_CallbackReturnStop
 20088     0EBC  00A3               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 20089                           
 20090                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 20091     0EBD  01AD               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 20092     0EBE                     l8175:
 20093                           
 20094                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20095     0EBE  302F               	movlw	low _I2C1_CallbackReturnStop
 20096     0EBF  00A4               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 20097     0EC0  3016               	movlw	high _I2C1_CallbackReturnStop
 20098     0EC1  00A5               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 20099     0EC2                     l8177:
 20100                           
 20101                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 20102     0EC2  01AE               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 20103                           
 20104                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 20105     0EC3  302F               	movlw	low _I2C1_CallbackReturnStop
 20106     0EC4  00A6               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 20107     0EC5  3016               	movlw	high _I2C1_CallbackReturnStop
 20108     0EC6  00A7               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 20109     0EC7                     l8179:
 20110                           
 20111                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 20112     0EC7  01AF               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 20113     0EC8                     l8181:
 20114                           
 20115                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 20116     0EC8  3031               	movlw	low _I2C1_CallbackReturnReset
 20117     0EC9  00A8               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 20118     0ECA  3016               	movlw	high _I2C1_CallbackReturnReset
 20119     0ECB  00A9               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 20120                           
 20121                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 20122     0ECC  01B0               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 20123     0ECD                     l8183:
 20124                           
 20125                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 20126     0ECD  3196  2633  318E   	fcall	_I2C1_MasterClearIrq
 20127     0ED0                     l8185:
 20128                           
 20129                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 20130     0ED0  3197  27E5  318E   	fcall	_I2C1_MasterOpen
 20131     0ED3                     l8187:
 20132                           
 20133                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 20134     0ED3  01F2               	clrf	I2C1_Open@returnValue
 20135     0ED4                     l1742:	
 20136                           ;mcc_generated_files/i2c1_master.c: 205:     }
 20137                           
 20138                           
 20139                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 20140     0ED4  0872               	movf	I2C1_Open@returnValue,w
 20141     0ED5                     l1743:
 20142     0ED5  0008               	return
 20143     0ED6                     __end_of_I2C1_Open:
 20144                           
 20145                           	psect	text90
 20146     17E5                     __ptext90:	
 20147 ;; *************** function _I2C1_MasterOpen *****************
 20148 ;; Defined at:
 20149 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 20150 ;; Parameters:    Size  Location     Type
 20151 ;;		None
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;		None
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  1    wreg      _Bool 
 20156 ;; Registers used:
 20157 ;;		wreg, status,2
 20158 ;; Tracked objects:
 20159 ;;		On entry : 0/0
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20167 ;;Total ram usage:        0 bytes
 20168 ;; Hardware stack levels used: 1
 20169 ;; Hardware stack levels required when called: 4
 20170 ;; This function calls:
 20171 ;;		Nothing
 20172 ;; This function is called by:
 20173 ;;		_I2C1_Open
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177     17E5                     _I2C1_MasterOpen:	
 20178                           ;psect for function _I2C1_MasterOpen
 20179                           
 20180     17E5                     l8113:	
 20181                           ;incstack = 0
 20182                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 20183                           
 20184                           
 20185                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 20186     17E5  0143               	movlb	3	; select bank3
 20187     17E6  1A90               	btfsc	16,5	;volatile
 20188     17E7  2FE9               	goto	u4151
 20189     17E8  2FEA               	goto	u4150
 20190     17E9                     u4151:
 20191     17E9  2FF1               	goto	l1908
 20192     17EA                     u4150:
 20193     17EA                     l8115:
 20194                           
 20195                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 20196     17EA  018F               	clrf	15	;volatile
 20197     17EB                     l8117:
 20198                           
 20199                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 20200     17EB  3008               	movlw	8
 20201     17EC  0090               	movwf	16	;volatile
 20202     17ED                     l8119:
 20203                           
 20204                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 20205     17ED  0191               	clrf	17	;volatile
 20206                           
 20207                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 20208     17EE  304F               	movlw	79
 20209     17EF  008D               	movwf	13	;volatile
 20210     17F0                     l8121:
 20211                           
 20212                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 20213     17F0  1690               	bsf	16,5	;volatile
 20214     17F1                     l1908:
 20215     17F1  0008               	return
 20216     17F2                     __end_of_I2C1_MasterOpen:
 20217                           
 20218                           	psect	text91
 20219     16A3                     __ptext91:	
 20220 ;; *************** function _I2C1_MasterWrite *****************
 20221 ;; Defined at:
 20222 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 20223 ;; Parameters:    Size  Location     Type
 20224 ;;		None
 20225 ;; Auto vars:     Size  Location     Type
 20226 ;;		None
 20227 ;; Return value:  Size  Location     Type
 20228 ;;                  1    wreg      enum E358
 20229 ;; Registers used:
 20230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20231 ;; Tracked objects:
 20232 ;;		On entry : 0/0
 20233 ;;		On exit  : 0/0
 20234 ;;		Unchanged: 0/0
 20235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20240 ;;Total ram usage:        0 bytes
 20241 ;; Hardware stack levels used: 1
 20242 ;; Hardware stack levels required when called: 11
 20243 ;; This function calls:
 20244 ;;		_I2C1_MasterOperation
 20245 ;; This function is called by:
 20246 ;;		_i2c_read1ByteRegister
 20247 ;;		_i2c_read2ByteRegister
 20248 ;;		_i2c_write1ByteRegister
 20249 ;;		_i2c_writeNBytes
 20250 ;;		_i2c_write2ByteRegister
 20251 ;;		_i2c_readDataBlock
 20252 ;;		_I2C1_Read1ByteRegister
 20253 ;;		_I2C1_Read2ByteRegister
 20254 ;;		_I2C1_Write1ByteRegister
 20255 ;;		_I2C1_Write2ByteRegister
 20256 ;;		_I2C1_WriteNBytes
 20257 ;;		_I2C1_ReadDataBlock
 20258 ;; This function uses a non-reentrant model
 20259 ;;
 20260                           
 20261     16A3                     _I2C1_MasterWrite:	
 20262                           ;psect for function _I2C1_MasterWrite
 20263                           
 20264     16A3                     l8193:	
 20265                           ;incstack = 0
 20266                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20267                           
 20268                           
 20269                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 20270     16A3  3000               	movlw	0
 20271     16A4  318A  22B9  3196   	fcall	_I2C1_MasterOperation
 20272     16A7                     l1759:
 20273     16A7  0008               	return
 20274     16A8                     __end_of_I2C1_MasterWrite:
 20275                           
 20276                           	psect	text92
 20277     0AB9                     __ptext92:	
 20278 ;; *************** function _I2C1_MasterOperation *****************
 20279 ;; Defined at:
 20280 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  read            1    wreg     _Bool 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;  read            1    2[BANK0 ] _Bool 
 20285 ;;  returnValue     1    3[BANK0 ] enum E358
 20286 ;; Return value:  Size  Location     Type
 20287 ;;                  1    wreg      enum E358
 20288 ;; Registers used:
 20289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20290 ;; Tracked objects:
 20291 ;;		On entry : 0/0
 20292 ;;		On exit  : 0/0
 20293 ;;		Unchanged: 0/0
 20294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20298 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20299 ;;Total ram usage:        2 bytes
 20300 ;; Hardware stack levels used: 1
 20301 ;; Hardware stack levels required when called: 10
 20302 ;; This function calls:
 20303 ;;		_I2C1_MasterStart
 20304 ;;		_I2C1_Poller
 20305 ;; This function is called by:
 20306 ;;		_I2C1_MasterWrite
 20307 ;;		_I2C1_MasterRead
 20308 ;; This function uses a non-reentrant model
 20309 ;;
 20310                           
 20311     0AB9                     _I2C1_MasterOperation:	
 20312                           ;psect for function _I2C1_MasterOperation
 20313                           
 20314                           
 20315                           ;incstack = 0
 20316                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20317                           ;I2C1_MasterOperation@read stored from wreg
 20318     0AB9  0140               	movlb	0	; select bank0
 20319     0ABA  00A2               	movwf	I2C1_MasterOperation@read
 20320     0ABB                     l8129:
 20321                           
 20322                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 20323     0ABB  01A3               	clrf	I2C1_MasterOperation@returnValue
 20324     0ABC  0AA3               	incf	I2C1_MasterOperation@returnValue,f
 20325                           
 20326                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 20327     0ABD  0141               	movlb	1	; select bank1
 20328     0ABE  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 20329     0ABF  2AC1               	goto	u4161
 20330     0AC0  2AC2               	goto	u4160
 20331     0AC1                     u4161:
 20332     0AC1  2AD7               	goto	l8145
 20333     0AC2                     u4160:
 20334     0AC2                     l8131:
 20335                           
 20336                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 20337     0AC2  14BC               	bsf	(_I2C1_Status^(0+128)+28),1
 20338     0AC3                     l8133:
 20339                           
 20340                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 20341     0AC3  0140               	movlb	0	; select bank0
 20342     0AC4  01A3               	clrf	I2C1_MasterOperation@returnValue
 20343     0AC5                     l8135:
 20344                           
 20345                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 20346     0AC5  0822               	movf	I2C1_MasterOperation@read,w
 20347     0AC6  1903               	btfsc	3,2
 20348     0AC7  2AC9               	goto	u4171
 20349     0AC8  2ACA               	goto	u4170
 20350     0AC9                     u4171:
 20351     0AC9  2ACE               	goto	l8139
 20352     0ACA                     u4170:
 20353     0ACA                     l8137:
 20354                           
 20355                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 20356     0ACA  0141               	movlb	1	; select bank1
 20357     0ACB  01BA               	clrf	(_I2C1_Status^(0+128)+26)
 20358     0ACC  0ABA               	incf	(_I2C1_Status^(0+128)+26),f
 20359                           
 20360                           ;mcc_generated_files/i2c1_master.c: 235:         }
 20361     0ACD  2AD1               	goto	l8141
 20362     0ACE                     l8139:
 20363                           
 20364                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 20365     0ACE  3002               	movlw	2
 20366     0ACF  0141               	movlb	1	; select bank1
 20367     0AD0  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 20368     0AD1                     l8141:
 20369                           
 20370                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 20371     0AD1  3196  263C  318A   	fcall	_I2C1_MasterStart
 20372     0AD4                     l8143:
 20373                           
 20374                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 20375     0AD4  3197  27D8  318A   	fcall	_I2C1_Poller
 20376     0AD7                     l8145:
 20377                           
 20378                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 20379     0AD7  0140               	movlb	0	; select bank0
 20380     0AD8  0823               	movf	I2C1_MasterOperation@returnValue,w
 20381     0AD9                     l1753:
 20382     0AD9  0008               	return
 20383     0ADA                     __end_of_I2C1_MasterOperation:
 20384                           
 20385                           	psect	text93
 20386     17D8                     __ptext93:	
 20387 ;; *************** function _I2C1_Poller *****************
 20388 ;; Defined at:
 20389 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 20390 ;; Parameters:    Size  Location     Type
 20391 ;;		None
 20392 ;; Auto vars:     Size  Location     Type
 20393 ;;		None
 20394 ;; Return value:  Size  Location     Type
 20395 ;;                  1    wreg      void 
 20396 ;; Registers used:
 20397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20398 ;; Tracked objects:
 20399 ;;		On entry : 0/0
 20400 ;;		On exit  : 0/0
 20401 ;;		Unchanged: 0/0
 20402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;Total ram usage:        0 bytes
 20408 ;; Hardware stack levels used: 1
 20409 ;; Hardware stack levels required when called: 9
 20410 ;; This function calls:
 20411 ;;		_I2C1_MasterFsm
 20412 ;;		_I2C1_MasterWaitForEvent
 20413 ;; This function is called by:
 20414 ;;		_I2C1_MasterOperation
 20415 ;; This function uses a non-reentrant model
 20416 ;;
 20417                           
 20418     17D8                     _I2C1_Poller:	
 20419                           ;psect for function _I2C1_Poller
 20420                           
 20421     17D8                     l8095:	
 20422                           ;incstack = 0
 20423                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20424                           
 20425                           
 20426                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20427     17D8  2FDF               	goto	l8101
 20428     17D9                     l8097:
 20429                           
 20430                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 20431     17D9  3196  26B8  3197   	fcall	_I2C1_MasterWaitForEvent
 20432     17DC                     l8099:
 20433                           
 20434                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 20435     17DC  318C  2472  3197   	fcall	_I2C1_MasterFsm
 20436     17DF                     l8101:
 20437                           
 20438                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 20439     17DF  0141               	movlb	1	; select bank1
 20440     17E0  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 20441     17E1  2FE3               	goto	u4141
 20442     17E2  2FE4               	goto	u4140
 20443     17E3                     u4141:
 20444     17E3  2FD9               	goto	l8097
 20445     17E4                     u4140:
 20446     17E4                     l1792:
 20447     17E4  0008               	return
 20448     17E5                     __end_of_I2C1_Poller:
 20449                           
 20450                           	psect	text94
 20451     16B8                     __ptext94:	
 20452 ;; *************** function _I2C1_MasterWaitForEvent *****************
 20453 ;; Defined at:
 20454 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 20455 ;; Parameters:    Size  Location     Type
 20456 ;;		None
 20457 ;; Auto vars:     Size  Location     Type
 20458 ;;		None
 20459 ;; Return value:  Size  Location     Type
 20460 ;;                  1    wreg      void 
 20461 ;; Registers used:
 20462 ;;		None
 20463 ;; Tracked objects:
 20464 ;;		On entry : 0/0
 20465 ;;		On exit  : 0/0
 20466 ;;		Unchanged: 0/0
 20467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20472 ;;Total ram usage:        0 bytes
 20473 ;; Hardware stack levels used: 1
 20474 ;; Hardware stack levels required when called: 4
 20475 ;; This function calls:
 20476 ;;		Nothing
 20477 ;; This function is called by:
 20478 ;;		_I2C1_Poller
 20479 ;; This function uses a non-reentrant model
 20480 ;;
 20481                           
 20482     16B8                     _I2C1_MasterWaitForEvent:	
 20483                           ;psect for function _I2C1_MasterWaitForEvent
 20484                           
 20485     16B8                     l1965:	
 20486                           ;incstack = 0
 20487                           ; Regs used in _I2C1_MasterWaitForEvent: []
 20488                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 20489                           
 20490                           
 20491                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 20492     16B8  014E               	movlb	14	; select bank14
 20493     16B9  1C0F               	btfss	15,0	;volatile
 20494     16BA  2EBC               	goto	u4011
 20495     16BB  2EBD               	goto	u4010
 20496     16BC                     u4011:
 20497     16BC  2EB8               	goto	l1965
 20498     16BD                     u4010:
 20499     16BD                     l1969:
 20500     16BD  0008               	return
 20501     16BE                     __end_of_I2C1_MasterWaitForEvent:
 20502                           
 20503                           	psect	text95
 20504     0C72                     __ptext95:	
 20505 ;; *************** function _I2C1_MasterFsm *****************
 20506 ;; Defined at:
 20507 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 20508 ;; Parameters:    Size  Location     Type
 20509 ;;		None
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;		None
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  1    wreg      void 
 20514 ;; Registers used:
 20515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20525 ;;Total ram usage:        2 bytes
 20526 ;; Hardware stack levels used: 1
 20527 ;; Hardware stack levels required when called: 8
 20528 ;; This function calls:
 20529 ;;		_I2C1_DO_ADDRESS_NACK
 20530 ;;		_I2C1_DO_IDLE
 20531 ;;		_I2C1_DO_RCEN
 20532 ;;		_I2C1_DO_RESET
 20533 ;;		_I2C1_DO_RX
 20534 ;;		_I2C1_DO_RX_ACK
 20535 ;;		_I2C1_DO_RX_NACK_RESTART
 20536 ;;		_I2C1_DO_RX_NACK_STOP
 20537 ;;		_I2C1_DO_SEND_ADR_READ
 20538 ;;		_I2C1_DO_SEND_ADR_WRITE
 20539 ;;		_I2C1_DO_SEND_RESTART
 20540 ;;		_I2C1_DO_SEND_RESTART_READ
 20541 ;;		_I2C1_DO_SEND_RESTART_WRITE
 20542 ;;		_I2C1_DO_SEND_STOP
 20543 ;;		_I2C1_DO_TX
 20544 ;;		_I2C1_DO_TX_EMPTY
 20545 ;;		_I2C1_MasterClearIrq
 20546 ;;		_I2C1_MasterIsNack
 20547 ;; This function is called by:
 20548 ;;		_I2C1_Poller
 20549 ;; This function uses a non-reentrant model
 20550 ;;
 20551                           
 20552     0C72                     _I2C1_MasterFsm:	
 20553                           ;psect for function _I2C1_MasterFsm
 20554                           
 20555     0C72                     l7995:	
 20556                           ;incstack = 0
 20557                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20558                           
 20559                           
 20560                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 20561     0C72  3196  2633  318C   	fcall	_I2C1_MasterClearIrq
 20562     0C75                     l7997:
 20563                           
 20564                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 20565     0C75  0141               	movlb	1	; select bank1
 20566     0C76  1C3C               	btfss	(_I2C1_Status^(0+128)+28),0
 20567     0C77  2C79               	goto	u4021
 20568     0C78  2C7A               	goto	u4020
 20569     0C79                     u4021:
 20570     0C79  2C85               	goto	l8003
 20571     0C7A                     u4020:
 20572     0C7A                     l7999:
 20573     0C7A  3196  26B2  318C   	fcall	_I2C1_MasterIsNack
 20574     0C7D  3A00               	xorlw	0
 20575     0C7E  1903               	skipnz
 20576     0C7F  2C81               	goto	u4031
 20577     0C80  2C82               	goto	u4030
 20578     0C81                     u4031:
 20579     0C81  2C85               	goto	l8003
 20580     0C82                     u4030:
 20581     0C82                     l8001:
 20582                           
 20583                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 20584     0C82  300F               	movlw	15
 20585     0C83  0141               	movlb	1	; select bank1
 20586     0C84  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 20587     0C85                     l8003:
 20588                           
 20589                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 20590     0C85  0141               	movlb	1	; select bank1
 20591     0C86  083A               	movf	(_I2C1_Status^(0+128)+26),w
 20592     0C87  0140               	movlb	0	; select bank0
 20593     0C88  00A0               	movwf	??_I2C1_MasterFsm
 20594     0C89  01A1               	clrf	??_I2C1_MasterFsm+1
 20595     0C8A  35A0               	lslf	??_I2C1_MasterFsm,f
 20596     0C8B  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 20597     0C8C  3028               	movlw	low _i2c1_fsmStateTable
 20598     0C8D  0720               	addwf	??_I2C1_MasterFsm,w
 20599     0C8E  0084               	movwf	4
 20600     0C8F  3010               	movlw	high _i2c1_fsmStateTable
 20601     0C90  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 20602     0C91  3880               	iorlw	128
 20603     0C92  0085               	movwf	5
 20604     0C93  3F01               	moviw [1]fsr0
 20605     0C94  008A               	movwf	10
 20606     0C95  3F00               	moviw [0]fsr0
 20607     0C96  000A               	callw
 20608     0C97  318C               	pagesel	$
 20609     0C98  0141               	movlb	1	; select bank1
 20610     0C99  00BA               	movwf	(_I2C1_Status^(0+128)+26)
 20611     0C9A                     l1796:
 20612     0C9A  0008               	return
 20613     0C9B                     __end_of_I2C1_MasterFsm:
 20614                           
 20615                           	psect	text96
 20616     0C4A                     __ptext96:	
 20617 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 20618 ;; Defined at:
 20619 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 20620 ;; Parameters:    Size  Location     Type
 20621 ;;		None
 20622 ;; Auto vars:     Size  Location     Type
 20623 ;;		None
 20624 ;; Return value:  Size  Location     Type
 20625 ;;                  1    wreg      enum E12565
 20626 ;; Registers used:
 20627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20628 ;; Tracked objects:
 20629 ;;		On entry : 0/0
 20630 ;;		On exit  : 0/0
 20631 ;;		Unchanged: 0/0
 20632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20637 ;;Total ram usage:        2 bytes
 20638 ;; Hardware stack levels used: 1
 20639 ;; Hardware stack levels required when called: 7
 20640 ;; This function calls:
 20641 ;;		NULL
 20642 ;;		_I2C1_CallbackReturnReset
 20643 ;;		_I2C1_CallbackReturnStop
 20644 ;;		_I2C1_DO_SEND_RESTART
 20645 ;;		_I2C1_DO_SEND_STOP
 20646 ;;		_rd1RegCompleteHandler
 20647 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1193
 20648 ;;		_rd2RegCompleteHandler
 20649 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1204
 20650 ;;		_rdBlkRegCompleteHandler
 20651 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1227
 20652 ;;		_wr1RegCompleteHandler
 20653 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1210
 20654 ;;		_wr2RegCompleteHandler
 20655 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1216
 20656 ;; This function is called by:
 20657 ;;		_I2C1_MasterFsm
 20658 ;; This function uses a non-reentrant model
 20659 ;;
 20660                           
 20661     0C4A                     _I2C1_DO_ADDRESS_NACK:	
 20662                           ;psect for function _I2C1_DO_ADDRESS_NACK
 20663                           
 20664     0C4A                     l7971:	
 20665                           ;incstack = 0
 20666                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20667                           
 20668                           
 20669                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 20670     0C4A  0141               	movlb	1	; select bank1
 20671     0C4B  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 20672     0C4C                     l7973:
 20673                           
 20674                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 20675     0C4C  3002               	movlw	2
 20676     0C4D  00BB               	movwf	(_I2C1_Status^(0+128)+27)
 20677                           
 20678                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 20679     0C4E  2C57               	goto	l7985
 20680     0C4F                     l7975:
 20681                           
 20682                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 20683     0C4F  3196  2685  318C   	fcall	_I2C1_DO_SEND_RESTART
 20684     0C52  2C71               	goto	l1887
 20685     0C53                     l7979:
 20686                           
 20687                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 20688     0C53  3196  268A  318C   	fcall	_I2C1_DO_SEND_STOP
 20689     0C56  2C71               	goto	l1887
 20690     0C57                     l7985:
 20691     0C57  082E               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 20692     0C58  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 20693     0C59  3004               	movlw	4
 20694     0C5A  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 20695     0C5B  0086               	movwf	6
 20696     0C5C  0187               	clrf	7
 20697     0C5D  3F41               	moviw [1]fsr1
 20698     0C5E  008A               	movwf	10
 20699     0C5F  3F40               	moviw [0]fsr1
 20700     0C60  000A               	callw
 20701     0C61  318C               	pagesel	$
 20702     0C62  00F9               	movwf	??_I2C1_DO_ADDRESS_NACK
 20703     0C63  01FA               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 20704                           
 20705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20706                           ; Switch size 1, requested type "simple"
 20707                           ; Number of cases is 1, Range of values is 0 to 0
 20708                           ; switch strategies available:
 20709                           ; Name         Instructions Cycles
 20710                           ; simple_byte            4     3 (average)
 20711                           ; direct_byte            8     6 (fixed)
 20712                           ; jumptable            260     6 (fixed)
 20713                           ;	Chosen strategy is simple_byte
 20714     0C64  087A               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 20715     0C65  3A00               	xorlw	0	; case 0
 20716     0C66  1903               	skipnz
 20717     0C67  2C69               	goto	l9715
 20718     0C68  2C53               	goto	l7979
 20719     0C69                     l9715:
 20720                           
 20721                           ; Switch size 1, requested type "simple"
 20722                           ; Number of cases is 2, Range of values is 2 to 3
 20723                           ; switch strategies available:
 20724                           ; Name         Instructions Cycles
 20725                           ; simple_byte            7     4 (average)
 20726                           ; direct_byte           13     9 (fixed)
 20727                           ; jumptable            263     9 (fixed)
 20728                           ;	Chosen strategy is simple_byte
 20729     0C69  0879               	movf	??_I2C1_DO_ADDRESS_NACK,w
 20730     0C6A  3A02               	xorlw	2	; case 2
 20731     0C6B  1903               	skipnz
 20732     0C6C  2C4F               	goto	l7975
 20733     0C6D  3A01               	xorlw	1	; case 3
 20734     0C6E  1903               	skipnz
 20735     0C6F  2C4F               	goto	l7975
 20736     0C70  2C53               	goto	l7979
 20737     0C71                     l1887:
 20738     0C71  0008               	return
 20739     0C72                     __end_of_I2C1_DO_ADDRESS_NACK:
 20740                           
 20741                           	psect	text97
 20742     169E                     __ptext97:	
 20743 ;; *************** function _I2C1_DO_RESET *****************
 20744 ;; Defined at:
 20745 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 20746 ;; Parameters:    Size  Location     Type
 20747 ;;		None
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;		None
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  1    wreg      enum E12565
 20752 ;; Registers used:
 20753 ;;		wreg, status,2
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20763 ;;Total ram usage:        0 bytes
 20764 ;; Hardware stack levels used: 1
 20765 ;; Hardware stack levels required when called: 4
 20766 ;; This function calls:
 20767 ;;		Nothing
 20768 ;; This function is called by:
 20769 ;;		_I2C1_MasterFsm
 20770 ;; This function uses a non-reentrant model
 20771 ;;
 20772                           
 20773     169E                     _I2C1_DO_RESET:	
 20774                           ;psect for function _I2C1_DO_RESET
 20775                           
 20776     169E                     l7963:	
 20777                           ;incstack = 0
 20778                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 20779                           
 20780                           
 20781                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 20782     169E  0141               	movlb	1	; select bank1
 20783     169F  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 20784     16A0                     l7965:
 20785                           
 20786                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 20787     16A0  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 20788     16A1                     l7967:
 20789                           
 20790                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 20791     16A1  300E               	movlw	14
 20792     16A2                     l1881:
 20793     16A2  0008               	return
 20794     16A3                     __end_of_I2C1_DO_RESET:
 20795                           
 20796                           	psect	text98
 20797     1699                     __ptext98:	
 20798 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 20799 ;; Defined at:
 20800 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 20801 ;; Parameters:    Size  Location     Type
 20802 ;;		None
 20803 ;; Auto vars:     Size  Location     Type
 20804 ;;		None
 20805 ;; Return value:  Size  Location     Type
 20806 ;;                  1    wreg      enum E12565
 20807 ;; Registers used:
 20808 ;;		wreg, status,2, status,0, pclath, cstack
 20809 ;; Tracked objects:
 20810 ;;		On entry : 0/0
 20811 ;;		On exit  : 0/0
 20812 ;;		Unchanged: 0/0
 20813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20818 ;;Total ram usage:        0 bytes
 20819 ;; Hardware stack levels used: 1
 20820 ;; Hardware stack levels required when called: 5
 20821 ;; This function calls:
 20822 ;;		_I2C1_MasterSendNack
 20823 ;; This function is called by:
 20824 ;;		_I2C1_DO_RX
 20825 ;;		_I2C1_MasterFsm
 20826 ;; This function uses a non-reentrant model
 20827 ;;
 20828                           
 20829     1699                     _I2C1_DO_RX_NACK_RESTART:	
 20830                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 20831                           
 20832     1699                     l7801:	
 20833                           ;incstack = 0
 20834                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20835                           
 20836                           
 20837                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 20838     1699  3196  2661  3196   	fcall	_I2C1_MasterSendNack
 20839     169C                     l7803:
 20840                           
 20841                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 20842     169C  3009               	movlw	9
 20843     169D                     l1878:
 20844     169D  0008               	return
 20845     169E                     __end_of_I2C1_DO_RX_NACK_RESTART:
 20846                           
 20847                           	psect	text99
 20848     1694                     __ptext99:	
 20849 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 20850 ;; Defined at:
 20851 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;		None
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      enum E12565
 20858 ;; Registers used:
 20859 ;;		wreg, status,2, status,0, pclath, cstack
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20869 ;;Total ram usage:        0 bytes
 20870 ;; Hardware stack levels used: 1
 20871 ;; Hardware stack levels required when called: 5
 20872 ;; This function calls:
 20873 ;;		_I2C1_MasterSendNack
 20874 ;; This function is called by:
 20875 ;;		_I2C1_DO_RX
 20876 ;;		_I2C1_MasterFsm
 20877 ;; This function uses a non-reentrant model
 20878 ;;
 20879                           
 20880     1694                     _I2C1_DO_RX_NACK_STOP:	
 20881                           ;psect for function _I2C1_DO_RX_NACK_STOP
 20882                           
 20883     1694                     l7807:	
 20884                           ;incstack = 0
 20885                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20886                           
 20887                           
 20888                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 20889     1694  3196  2661  3196   	fcall	_I2C1_MasterSendNack
 20890     1697                     l7809:
 20891                           
 20892                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 20893     1697  300A               	movlw	10
 20894     1698                     l1875:
 20895     1698  0008               	return
 20896     1699                     __end_of_I2C1_DO_RX_NACK_STOP:
 20897                           
 20898                           	psect	text100
 20899     168F                     __ptext100:	
 20900 ;; *************** function _I2C1_DO_RX_ACK *****************
 20901 ;; Defined at:
 20902 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 20903 ;; Parameters:    Size  Location     Type
 20904 ;;		None
 20905 ;; Auto vars:     Size  Location     Type
 20906 ;;		None
 20907 ;; Return value:  Size  Location     Type
 20908 ;;                  1    wreg      enum E12565
 20909 ;; Registers used:
 20910 ;;		wreg, status,2, status,0, pclath, cstack
 20911 ;; Tracked objects:
 20912 ;;		On entry : 0/0
 20913 ;;		On exit  : 0/0
 20914 ;;		Unchanged: 0/0
 20915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20920 ;;Total ram usage:        0 bytes
 20921 ;; Hardware stack levels used: 1
 20922 ;; Hardware stack levels required when called: 5
 20923 ;; This function calls:
 20924 ;;		_I2C1_MasterSendAck
 20925 ;; This function is called by:
 20926 ;;		_I2C1_MasterFsm
 20927 ;; This function uses a non-reentrant model
 20928 ;;
 20929                           
 20930     168F                     _I2C1_DO_RX_ACK:	
 20931                           ;psect for function _I2C1_DO_RX_ACK
 20932                           
 20933     168F                     l7957:	
 20934                           ;incstack = 0
 20935                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 20936                           
 20937                           
 20938                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 20939     168F  3196  2665  3196   	fcall	_I2C1_MasterSendAck
 20940     1692                     l7959:
 20941                           
 20942                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 20943     1692  3005               	movlw	5
 20944     1693                     l1872:
 20945     1693  0008               	return
 20946     1694                     __end_of_I2C1_DO_RX_ACK:
 20947                           
 20948                           	psect	text101
 20949     168A                     __ptext101:	
 20950 ;; *************** function _I2C1_DO_SEND_STOP *****************
 20951 ;; Defined at:
 20952 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 20953 ;; Parameters:    Size  Location     Type
 20954 ;;		None
 20955 ;; Auto vars:     Size  Location     Type
 20956 ;;		None
 20957 ;; Return value:  Size  Location     Type
 20958 ;;                  1    wreg      enum E12565
 20959 ;; Registers used:
 20960 ;;		wreg, status,2, status,0, pclath, cstack
 20961 ;; Tracked objects:
 20962 ;;		On entry : 0/0
 20963 ;;		On exit  : 0/0
 20964 ;;		Unchanged: 0/0
 20965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20970 ;;Total ram usage:        0 bytes
 20971 ;; Hardware stack levels used: 1
 20972 ;; Hardware stack levels required when called: 5
 20973 ;; This function calls:
 20974 ;;		_I2C1_MasterStop
 20975 ;; This function is called by:
 20976 ;;		_I2C1_DO_TX
 20977 ;;		_I2C1_DO_TX_EMPTY
 20978 ;;		_I2C1_DO_ADDRESS_NACK
 20979 ;;		_I2C1_MasterFsm
 20980 ;; This function uses a non-reentrant model
 20981 ;;
 20982                           
 20983     168A                     _I2C1_DO_SEND_STOP:	
 20984                           ;psect for function _I2C1_DO_SEND_STOP
 20985                           
 20986     168A                     l7789:	
 20987                           ;incstack = 0
 20988                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20989                           
 20990                           
 20991                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 20992     168A  3196  2642  3196   	fcall	_I2C1_MasterStop
 20993     168D                     l7791:
 20994                           
 20995                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 20996     168D  3000               	movlw	0
 20997     168E                     l1869:
 20998     168E  0008               	return
 20999     168F                     __end_of_I2C1_DO_SEND_STOP:
 21000                           
 21001                           	psect	text102
 21002     1685                     __ptext102:	
 21003 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 21004 ;; Defined at:
 21005 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 21006 ;; Parameters:    Size  Location     Type
 21007 ;;		None
 21008 ;; Auto vars:     Size  Location     Type
 21009 ;;		None
 21010 ;; Return value:  Size  Location     Type
 21011 ;;                  1    wreg      enum E12565
 21012 ;; Registers used:
 21013 ;;		wreg, status,2, status,0, pclath, cstack
 21014 ;; Tracked objects:
 21015 ;;		On entry : 0/0
 21016 ;;		On exit  : 0/0
 21017 ;;		Unchanged: 0/0
 21018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21023 ;;Total ram usage:        0 bytes
 21024 ;; Hardware stack levels used: 1
 21025 ;; Hardware stack levels required when called: 5
 21026 ;; This function calls:
 21027 ;;		_I2C1_MasterEnableRestart
 21028 ;; This function is called by:
 21029 ;;		_I2C1_DO_TX_EMPTY
 21030 ;;		_I2C1_DO_ADDRESS_NACK
 21031 ;;		_I2C1_MasterFsm
 21032 ;; This function uses a non-reentrant model
 21033 ;;
 21034                           
 21035     1685                     _I2C1_DO_SEND_RESTART:	
 21036                           ;psect for function _I2C1_DO_SEND_RESTART
 21037                           
 21038     1685                     l7815:	
 21039                           ;incstack = 0
 21040                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21041                           
 21042                           
 21043                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 21044     1685  3196  263F  3196   	fcall	_I2C1_MasterEnableRestart
 21045     1688                     l7817:
 21046                           
 21047                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 21048     1688  3001               	movlw	1
 21049     1689                     l1866:
 21050     1689  0008               	return
 21051     168A                     __end_of_I2C1_DO_SEND_RESTART:
 21052                           
 21053                           	psect	text103
 21054     1680                     __ptext103:	
 21055 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 21056 ;; Defined at:
 21057 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;		None
 21060 ;; Auto vars:     Size  Location     Type
 21061 ;;		None
 21062 ;; Return value:  Size  Location     Type
 21063 ;;                  1    wreg      enum E12565
 21064 ;; Registers used:
 21065 ;;		wreg, status,2, status,0, pclath, cstack
 21066 ;; Tracked objects:
 21067 ;;		On entry : 0/0
 21068 ;;		On exit  : 0/0
 21069 ;;		Unchanged: 0/0
 21070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21075 ;;Total ram usage:        0 bytes
 21076 ;; Hardware stack levels used: 1
 21077 ;; Hardware stack levels required when called: 5
 21078 ;; This function calls:
 21079 ;;		_I2C1_MasterEnableRestart
 21080 ;; This function is called by:
 21081 ;;		_I2C1_DO_TX
 21082 ;;		_I2C1_MasterFsm
 21083 ;; This function uses a non-reentrant model
 21084 ;;
 21085                           
 21086     1680                     _I2C1_DO_SEND_RESTART_WRITE:	
 21087                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 21088                           
 21089     1680                     l7783:	
 21090                           ;incstack = 0
 21091                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21092                           
 21093                           
 21094                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 21095     1680  3196  263F  3196   	fcall	_I2C1_MasterEnableRestart
 21096     1683                     l7785:
 21097                           
 21098                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 21099     1683  3002               	movlw	2
 21100     1684                     l1863:
 21101     1684  0008               	return
 21102     1685                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 21103                           
 21104                           	psect	text104
 21105     167B                     __ptext104:	
 21106 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 21107 ;; Defined at:
 21108 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 21109 ;; Parameters:    Size  Location     Type
 21110 ;;		None
 21111 ;; Auto vars:     Size  Location     Type
 21112 ;;		None
 21113 ;; Return value:  Size  Location     Type
 21114 ;;                  1    wreg      enum E12565
 21115 ;; Registers used:
 21116 ;;		wreg, status,2, status,0, pclath, cstack
 21117 ;; Tracked objects:
 21118 ;;		On entry : 0/0
 21119 ;;		On exit  : 0/0
 21120 ;;		Unchanged: 0/0
 21121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21126 ;;Total ram usage:        0 bytes
 21127 ;; Hardware stack levels used: 1
 21128 ;; Hardware stack levels required when called: 5
 21129 ;; This function calls:
 21130 ;;		_I2C1_MasterEnableRestart
 21131 ;; This function is called by:
 21132 ;;		_I2C1_DO_TX
 21133 ;;		_I2C1_MasterFsm
 21134 ;; This function uses a non-reentrant model
 21135 ;;
 21136                           
 21137     167B                     _I2C1_DO_SEND_RESTART_READ:	
 21138                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 21139                           
 21140     167B                     l7777:	
 21141                           ;incstack = 0
 21142                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 21143                           
 21144                           
 21145                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 21146     167B  3196  263F  3196   	fcall	_I2C1_MasterEnableRestart
 21147     167E                     l7779:
 21148                           
 21149                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 21150     167E  3001               	movlw	1
 21151     167F                     l1860:
 21152     167F  0008               	return
 21153     1680                     __end_of_I2C1_DO_SEND_RESTART_READ:
 21154                           
 21155                           	psect	text105
 21156     171E                     __ptext105:	
 21157 ;; *************** function _I2C1_DO_RCEN *****************
 21158 ;; Defined at:
 21159 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 21160 ;; Parameters:    Size  Location     Type
 21161 ;;		None
 21162 ;; Auto vars:     Size  Location     Type
 21163 ;;		None
 21164 ;; Return value:  Size  Location     Type
 21165 ;;                  1    wreg      enum E12565
 21166 ;; Registers used:
 21167 ;;		wreg, status,2, status,0, pclath, cstack
 21168 ;; Tracked objects:
 21169 ;;		On entry : 0/0
 21170 ;;		On exit  : 0/0
 21171 ;;		Unchanged: 0/0
 21172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21177 ;;Total ram usage:        0 bytes
 21178 ;; Hardware stack levels used: 1
 21179 ;; Hardware stack levels required when called: 5
 21180 ;; This function calls:
 21181 ;;		_I2C1_MasterStartRx
 21182 ;; This function is called by:
 21183 ;;		_I2C1_MasterFsm
 21184 ;; This function uses a non-reentrant model
 21185 ;;
 21186                           
 21187     171E                     _I2C1_DO_RCEN:	
 21188                           ;psect for function _I2C1_DO_RCEN
 21189                           
 21190     171E                     l7923:	
 21191                           ;incstack = 0
 21192                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 21193                           
 21194                           
 21195                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 21196     171E  0141               	movlb	1	; select bank1
 21197     171F  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 21198     1720                     l7925:
 21199                           
 21200                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 21201     1720  3196  2645  3197   	fcall	_I2C1_MasterStartRx
 21202     1723                     l7927:
 21203                           
 21204                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 21205     1723  3004               	movlw	4
 21206     1724                     l1836:
 21207     1724  0008               	return
 21208     1725                     __end_of_I2C1_DO_RCEN:
 21209                           
 21210                           	psect	text106
 21211     076F                     __ptext106:	
 21212 ;; *************** function _I2C1_DO_RX *****************
 21213 ;; Defined at:
 21214 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 21215 ;; Parameters:    Size  Location     Type
 21216 ;;		None
 21217 ;; Auto vars:     Size  Location     Type
 21218 ;;		None
 21219 ;; Return value:  Size  Location     Type
 21220 ;;                  1    wreg      enum E12565
 21221 ;; Registers used:
 21222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21223 ;; Tracked objects:
 21224 ;;		On entry : 0/0
 21225 ;;		On exit  : 0/0
 21226 ;;		Unchanged: 0/0
 21227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21231 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21232 ;;Total ram usage:        2 bytes
 21233 ;; Hardware stack levels used: 1
 21234 ;; Hardware stack levels required when called: 7
 21235 ;; This function calls:
 21236 ;;		NULL
 21237 ;;		_I2C1_CallbackReturnReset
 21238 ;;		_I2C1_CallbackReturnStop
 21239 ;;		_I2C1_DO_RX_NACK_RESTART
 21240 ;;		_I2C1_DO_RX_NACK_STOP
 21241 ;;		_I2C1_MasterGetRxData
 21242 ;;		_I2C1_MasterSendAck
 21243 ;;		_rd1RegCompleteHandler
 21244 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1193
 21245 ;;		_rd2RegCompleteHandler
 21246 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1204
 21247 ;;		_rdBlkRegCompleteHandler
 21248 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1227
 21249 ;;		_wr1RegCompleteHandler
 21250 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1210
 21251 ;;		_wr2RegCompleteHandler
 21252 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1216
 21253 ;; This function is called by:
 21254 ;;		_I2C1_MasterFsm
 21255 ;; This function uses a non-reentrant model
 21256 ;;
 21257                           
 21258     076F                     _I2C1_DO_RX:	
 21259                           ;psect for function _I2C1_DO_RX
 21260                           
 21261     076F                     l7891:	
 21262                           ;incstack = 0
 21263                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21264                           
 21265                           
 21266                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 21267     076F  0141               	movlb	1	; select bank1
 21268     0770  0837               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 21269     0771  0086               	movwf	6
 21270     0772  0187               	clrf	7
 21271     0773  3196  2648  3187   	fcall	_I2C1_MasterGetRxData
 21272     0776  0081               	movwf	1
 21273     0777                     l7893:
 21274     0777  3001               	movlw	1
 21275     0778  00F9               	movwf	??_I2C1_DO_RX
 21276     0779  0879               	movf	??_I2C1_DO_RX,w
 21277     077A  0141               	movlb	1	; select bank1
 21278     077B  07B7               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 21279     077C                     l7895:
 21280                           
 21281                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 21282     077C  3001               	movlw	1
 21283     077D  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 21284     077E  3000               	movlw	0
 21285     077F  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 21286     0780  0838               	movf	(_I2C1_Status^(0+128)+24),w
 21287     0781  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 21288     0782  1903               	btfsc	3,2
 21289     0783  2F85               	goto	u4001
 21290     0784  2F86               	goto	u4000
 21291     0785                     u4001:
 21292     0785  2F8B               	goto	l1824
 21293     0786                     u4000:
 21294     0786                     l7897:
 21295                           
 21296                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 21297     0786  3196  2665  3187   	fcall	_I2C1_MasterSendAck
 21298     0789                     l7899:
 21299                           
 21300                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 21301     0789  3005               	movlw	5
 21302     078A  2FB1               	goto	l1825
 21303     078B                     l1824:	
 21304                           ;mcc_generated_files/i2c1_master.c: 386:     else
 21305                           
 21306                           
 21307                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 21308     078B  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 21309                           
 21310                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 21311     078C  2F95               	goto	l7915
 21312     078D                     l7905:
 21313                           
 21314                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 21315     078D  3196  2699  3187   	fcall	_I2C1_DO_RX_NACK_RESTART
 21316     0790  2FB1               	goto	l1825
 21317     0791                     l7909:
 21318                           
 21319                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 21320     0791  3196  2694  3187   	fcall	_I2C1_DO_RX_NACK_STOP
 21321     0794  2FB1               	goto	l1825
 21322     0795                     l7915:
 21323     0795  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 21324     0796  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 21325     0797  0821               	movf	(_I2C1_Status+1)^(0+128),w
 21326     0798  008A               	movwf	10
 21327     0799  0820               	movf	_I2C1_Status^(0+128),w
 21328     079A  000A               	callw
 21329     079B  3187               	pagesel	$
 21330     079C  00F9               	movwf	??_I2C1_DO_RX
 21331     079D  01FA               	clrf	??_I2C1_DO_RX+1
 21332                           
 21333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21334                           ; Switch size 1, requested type "simple"
 21335                           ; Number of cases is 1, Range of values is 0 to 0
 21336                           ; switch strategies available:
 21337                           ; Name         Instructions Cycles
 21338                           ; simple_byte            4     3 (average)
 21339                           ; direct_byte            8     6 (fixed)
 21340                           ; jumptable            260     6 (fixed)
 21341                           ;	Chosen strategy is simple_byte
 21342     079E  087A               	movf	??_I2C1_DO_RX+1,w
 21343     079F  3A00               	xorlw	0	; case 0
 21344     07A0  1903               	skipnz
 21345     07A1  2FA3               	goto	l9717
 21346     07A2  2F91               	goto	l7909
 21347     07A3                     l9717:
 21348                           
 21349                           ; Switch size 1, requested type "simple"
 21350                           ; Number of cases is 4, Range of values is 1 to 4
 21351                           ; switch strategies available:
 21352                           ; Name         Instructions Cycles
 21353                           ; simple_byte           13     7 (average)
 21354                           ; direct_byte           17     9 (fixed)
 21355                           ; jumptable            263     9 (fixed)
 21356                           ;	Chosen strategy is simple_byte
 21357     07A3  0879               	movf	??_I2C1_DO_RX,w
 21358     07A4  3A01               	xorlw	1	; case 1
 21359     07A5  1903               	skipnz
 21360     07A6  2F91               	goto	l7909
 21361     07A7  3A03               	xorlw	3	; case 2
 21362     07A8  1903               	skipnz
 21363     07A9  2F8D               	goto	l7905
 21364     07AA  3A01               	xorlw	1	; case 3
 21365     07AB  1903               	skipnz
 21366     07AC  2F8D               	goto	l7905
 21367     07AD  3A07               	xorlw	7	; case 4
 21368     07AE  1903               	skipnz
 21369     07AF  2F91               	goto	l7909
 21370     07B0  2F91               	goto	l7909
 21371     07B1                     l1825:
 21372     07B1  0008               	return
 21373     07B2                     __end_of_I2C1_DO_RX:
 21374                           
 21375                           	psect	text107
 21376     0519                     __ptext107:	
 21377 ;; *************** function _I2C1_DO_TX *****************
 21378 ;; Defined at:
 21379 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 21380 ;; Parameters:    Size  Location     Type
 21381 ;;		None
 21382 ;; Auto vars:     Size  Location     Type
 21383 ;;		None
 21384 ;; Return value:  Size  Location     Type
 21385 ;;                  1    wreg      enum E12565
 21386 ;; Registers used:
 21387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21388 ;; Tracked objects:
 21389 ;;		On entry : 0/0
 21390 ;;		On exit  : 0/0
 21391 ;;		Unchanged: 0/0
 21392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21397 ;;Total ram usage:        2 bytes
 21398 ;; Hardware stack levels used: 1
 21399 ;; Hardware stack levels required when called: 7
 21400 ;; This function calls:
 21401 ;;		NULL
 21402 ;;		_I2C1_CallbackReturnReset
 21403 ;;		_I2C1_CallbackReturnStop
 21404 ;;		_I2C1_DO_SEND_RESTART_READ
 21405 ;;		_I2C1_DO_SEND_RESTART_WRITE
 21406 ;;		_I2C1_DO_SEND_STOP
 21407 ;;		_I2C1_MasterIsNack
 21408 ;;		_I2C1_MasterSendTxData
 21409 ;;		_rd1RegCompleteHandler
 21410 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1193
 21411 ;;		_rd2RegCompleteHandler
 21412 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1204
 21413 ;;		_rdBlkRegCompleteHandler
 21414 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1227
 21415 ;;		_wr1RegCompleteHandler
 21416 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1210
 21417 ;;		_wr2RegCompleteHandler
 21418 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1216
 21419 ;; This function is called by:
 21420 ;;		_I2C1_MasterFsm
 21421 ;; This function uses a non-reentrant model
 21422 ;;
 21423                           
 21424     0519                     _I2C1_DO_TX:	
 21425                           ;psect for function _I2C1_DO_TX
 21426                           
 21427     0519                     l7857:	
 21428                           ;incstack = 0
 21429                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21430                           
 21431                           
 21432                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 21433     0519  3196  26B2  3185   	fcall	_I2C1_MasterIsNack
 21434     051C  3A00               	xorlw	0
 21435     051D  1903               	skipnz
 21436     051E  2D20               	goto	u3981
 21437     051F  2D21               	goto	u3980
 21438     0520                     u3981:
 21439     0520  2D4F               	goto	l1808
 21440     0521                     u3980:
 21441     0521  2D2E               	goto	l7875
 21442     0522                     l7861:
 21443                           
 21444                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 21445     0522  3196  267B  3185   	fcall	_I2C1_DO_SEND_RESTART_READ
 21446     0525  2D6B               	goto	l1811
 21447     0526                     l7865:
 21448                           
 21449                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 21450     0526  3196  2680  3185   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 21451     0529  2D6B               	goto	l1811
 21452     052A                     l7869:
 21453                           
 21454                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 21455     052A  3196  268A  3185   	fcall	_I2C1_DO_SEND_STOP
 21456     052D  2D6B               	goto	l1811
 21457     052E                     l7875:
 21458     052E  0141               	movlb	1	; select bank1
 21459     052F  082F               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 21460     0530  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 21461     0531  3006               	movlw	6
 21462     0532  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 21463     0533  0086               	movwf	6
 21464     0534  0187               	clrf	7
 21465     0535  3F41               	moviw [1]fsr1
 21466     0536  008A               	movwf	10
 21467     0537  3F40               	moviw [0]fsr1
 21468     0538  000A               	callw
 21469     0539  3185               	pagesel	$
 21470     053A  00F9               	movwf	??_I2C1_DO_TX
 21471     053B  01FA               	clrf	??_I2C1_DO_TX+1
 21472                           
 21473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21474                           ; Switch size 1, requested type "simple"
 21475                           ; Number of cases is 1, Range of values is 0 to 0
 21476                           ; switch strategies available:
 21477                           ; Name         Instructions Cycles
 21478                           ; simple_byte            4     3 (average)
 21479                           ; direct_byte            8     6 (fixed)
 21480                           ; jumptable            260     6 (fixed)
 21481                           ;	Chosen strategy is simple_byte
 21482     053C  087A               	movf	??_I2C1_DO_TX+1,w
 21483     053D  3A00               	xorlw	0	; case 0
 21484     053E  1903               	skipnz
 21485     053F  2D41               	goto	l9719
 21486     0540  2D2A               	goto	l7869
 21487     0541                     l9719:
 21488                           
 21489                           ; Switch size 1, requested type "simple"
 21490                           ; Number of cases is 4, Range of values is 1 to 4
 21491                           ; switch strategies available:
 21492                           ; Name         Instructions Cycles
 21493                           ; simple_byte           13     7 (average)
 21494                           ; direct_byte           17     9 (fixed)
 21495                           ; jumptable            263     9 (fixed)
 21496                           ;	Chosen strategy is simple_byte
 21497     0541  0879               	movf	??_I2C1_DO_TX,w
 21498     0542  3A01               	xorlw	1	; case 1
 21499     0543  1903               	skipnz
 21500     0544  2D2A               	goto	l7869
 21501     0545  3A03               	xorlw	3	; case 2
 21502     0546  1903               	skipnz
 21503     0547  2D22               	goto	l7861
 21504     0548  3A01               	xorlw	1	; case 3
 21505     0549  1903               	skipnz
 21506     054A  2D26               	goto	l7865
 21507     054B  3A07               	xorlw	7	; case 4
 21508     054C  1903               	skipnz
 21509     054D  2D2A               	goto	l7869
 21510     054E  2D2A               	goto	l7869
 21511     054F                     l1808:	
 21512                           ;mcc_generated_files/i2c1_master.c: 370:     else
 21513                           
 21514                           
 21515                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 21516     054F  0141               	movlb	1	; select bank1
 21517     0550  103C               	bcf	(_I2C1_Status^(0+128)+28),0
 21518     0551                     l7877:
 21519                           
 21520                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 21521     0551  3017               	movlw	23
 21522     0552  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 21523     0553  0086               	movwf	6
 21524     0554  0187               	clrf	7
 21525     0555  3F40               	moviw [0]fsr1
 21526     0556  0084               	movwf	4
 21527     0557  0185               	clrf	5
 21528     0558  0A81               	incf	1,f
 21529     0559  0800               	movf	0,w
 21530     055A  3196  2671  3185   	fcall	_I2C1_MasterSendTxData
 21531     055D                     l7879:
 21532                           
 21533                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 21534     055D  3001               	movlw	1
 21535     055E  0141               	movlb	1	; select bank1
 21536     055F  02B8               	subwf	(_I2C1_Status^(0+128)+24),f
 21537     0560  3000               	movlw	0
 21538     0561  3BB9               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 21539     0562  0838               	movf	(_I2C1_Status^(0+128)+24),w
 21540     0563  0439               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 21541     0564  1D03               	btfss	3,2
 21542     0565  2D67               	goto	u3991
 21543     0566  2D68               	goto	u3990
 21544     0567                     u3991:
 21545     0567  2D6A               	goto	l7883
 21546     0568                     u3990:
 21547     0568                     l7881:
 21548     0568  3006               	movlw	6
 21549     0569  2D6B               	goto	l1811
 21550     056A                     l7883:
 21551     056A  3003               	movlw	3
 21552     056B                     l1811:
 21553     056B  0008               	return
 21554     056C                     __end_of_I2C1_DO_TX:
 21555                           
 21556                           	psect	text108
 21557     1725                     __ptext108:	
 21558 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 21559 ;; Defined at:
 21560 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 21561 ;; Parameters:    Size  Location     Type
 21562 ;;		None
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  1    wreg      enum E12565
 21567 ;; Registers used:
 21568 ;;		wreg, status,2, status,0, pclath, cstack
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 0/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21578 ;;Total ram usage:        0 bytes
 21579 ;; Hardware stack levels used: 1
 21580 ;; Hardware stack levels required when called: 5
 21581 ;; This function calls:
 21582 ;;		_I2C1_MasterSendTxData
 21583 ;; This function is called by:
 21584 ;;		_I2C1_MasterFsm
 21585 ;; This function uses a non-reentrant model
 21586 ;;
 21587                           
 21588     1725                     _I2C1_DO_SEND_ADR_WRITE:	
 21589                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 21590                           
 21591     1725                     l7849:	
 21592                           ;incstack = 0
 21593                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21594                           
 21595                           
 21596                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 21597     1725  0141               	movlb	1	; select bank1
 21598     1726  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 21599     1727                     l7851:
 21600                           
 21601                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 21602     1727  3536               	lslf	(_I2C1_Status^(0+128)+22),w
 21603     1728  3196  2671  3197   	fcall	_I2C1_MasterSendTxData
 21604     172B                     l7853:
 21605                           
 21606                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 21607     172B  3003               	movlw	3
 21608     172C                     l1805:
 21609     172C  0008               	return
 21610     172D                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 21611                           
 21612                           	psect	text109
 21613     173E                     __ptext109:	
 21614 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 21615 ;; Defined at:
 21616 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 21617 ;; Parameters:    Size  Location     Type
 21618 ;;		None
 21619 ;; Auto vars:     Size  Location     Type
 21620 ;;		None
 21621 ;; Return value:  Size  Location     Type
 21622 ;;                  1    wreg      enum E12565
 21623 ;; Registers used:
 21624 ;;		wreg, status,2, status,0, pclath, cstack
 21625 ;; Tracked objects:
 21626 ;;		On entry : 0/0
 21627 ;;		On exit  : 0/0
 21628 ;;		Unchanged: 0/0
 21629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21634 ;;Total ram usage:        0 bytes
 21635 ;; Hardware stack levels used: 1
 21636 ;; Hardware stack levels required when called: 5
 21637 ;; This function calls:
 21638 ;;		_I2C1_MasterSendTxData
 21639 ;; This function is called by:
 21640 ;;		_I2C1_MasterFsm
 21641 ;; This function uses a non-reentrant model
 21642 ;;
 21643                           
 21644     173E                     _I2C1_DO_SEND_ADR_READ:	
 21645                           ;psect for function _I2C1_DO_SEND_ADR_READ
 21646                           
 21647     173E                     l7841:	
 21648                           ;incstack = 0
 21649                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 21650                           
 21651                           
 21652                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 21653     173E  0141               	movlb	1	; select bank1
 21654     173F  143C               	bsf	(_I2C1_Status^(0+128)+28),0
 21655     1740                     l7843:
 21656                           
 21657                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 21658     1740  1403               	setc
 21659     1741  0D36               	rlf	(_I2C1_Status^(0+128)+22),w
 21660     1742  3196  2671  3197   	fcall	_I2C1_MasterSendTxData
 21661     1745                     l7845:
 21662                           
 21663                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 21664     1745  3005               	movlw	5
 21665     1746                     l1802:
 21666     1746  0008               	return
 21667     1747                     __end_of_I2C1_DO_SEND_ADR_READ:
 21668                           
 21669                           	psect	text110
 21670     1676                     __ptext110:	
 21671 ;; *************** function _I2C1_DO_IDLE *****************
 21672 ;; Defined at:
 21673 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 21674 ;; Parameters:    Size  Location     Type
 21675 ;;		None
 21676 ;; Auto vars:     Size  Location     Type
 21677 ;;		None
 21678 ;; Return value:  Size  Location     Type
 21679 ;;                  1    wreg      enum E12565
 21680 ;; Registers used:
 21681 ;;		wreg, status,2
 21682 ;; Tracked objects:
 21683 ;;		On entry : 0/0
 21684 ;;		On exit  : 0/0
 21685 ;;		Unchanged: 0/0
 21686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21691 ;;Total ram usage:        0 bytes
 21692 ;; Hardware stack levels used: 1
 21693 ;; Hardware stack levels required when called: 4
 21694 ;; This function calls:
 21695 ;;		Nothing
 21696 ;; This function is called by:
 21697 ;;		_I2C1_MasterFsm
 21698 ;; This function uses a non-reentrant model
 21699 ;;
 21700                           
 21701     1676                     _I2C1_DO_IDLE:	
 21702                           ;psect for function _I2C1_DO_IDLE
 21703                           
 21704     1676                     l7833:	
 21705                           ;incstack = 0
 21706                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 21707                           
 21708                           
 21709                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 21710     1676  0141               	movlb	1	; select bank1
 21711     1677  10BC               	bcf	(_I2C1_Status^(0+128)+28),1
 21712     1678                     l7835:
 21713                           
 21714                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 21715     1678  01BB               	clrf	(_I2C1_Status^(0+128)+27)
 21716     1679                     l7837:
 21717                           
 21718                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 21719     1679  300E               	movlw	14
 21720     167A                     l1799:
 21721     167A  0008               	return
 21722     167B                     __end_of_I2C1_DO_IDLE:
 21723                           
 21724                           	psect	text111
 21725     0CC6                     __ptext111:	
 21726 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 21727 ;; Defined at:
 21728 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 21729 ;; Parameters:    Size  Location     Type
 21730 ;;		None
 21731 ;; Auto vars:     Size  Location     Type
 21732 ;;		None
 21733 ;; Return value:  Size  Location     Type
 21734 ;;                  1    wreg      enum E12565
 21735 ;; Registers used:
 21736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21737 ;; Tracked objects:
 21738 ;;		On entry : 0/0
 21739 ;;		On exit  : 0/0
 21740 ;;		Unchanged: 0/0
 21741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21746 ;;Total ram usage:        2 bytes
 21747 ;; Hardware stack levels used: 1
 21748 ;; Hardware stack levels required when called: 7
 21749 ;; This function calls:
 21750 ;;		NULL
 21751 ;;		_I2C1_CallbackReturnReset
 21752 ;;		_I2C1_CallbackReturnStop
 21753 ;;		_I2C1_DO_SEND_RESTART
 21754 ;;		_I2C1_DO_SEND_STOP
 21755 ;;		_I2C1_MasterSetIrq
 21756 ;;		_rd1RegCompleteHandler
 21757 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1193
 21758 ;;		_rd2RegCompleteHandler
 21759 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1204
 21760 ;;		_rdBlkRegCompleteHandler
 21761 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1227
 21762 ;;		_wr1RegCompleteHandler
 21763 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1210
 21764 ;;		_wr2RegCompleteHandler
 21765 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1216
 21766 ;; This function is called by:
 21767 ;;		_I2C1_MasterFsm
 21768 ;; This function uses a non-reentrant model
 21769 ;;
 21770                           
 21771     0CC6                     _I2C1_DO_TX_EMPTY:	
 21772                           ;psect for function _I2C1_DO_TX_EMPTY
 21773                           
 21774     0CC6                     l7931:	
 21775                           ;incstack = 0
 21776                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21777                           
 21778                           
 21779                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 21780     0CC6  0141               	movlb	1	; select bank1
 21781     0CC7  15BC               	bsf	(_I2C1_Status^(0+128)+28),3
 21782                           
 21783                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 21784     0CC8  2CD6               	goto	l7949
 21785     0CC9                     l7933:
 21786                           
 21787                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 21788     0CC9  3196  2685  318C   	fcall	_I2C1_DO_SEND_RESTART
 21789     0CCC  2CF2               	goto	l1842
 21790     0CCD                     l7937:
 21791                           
 21792                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 21793     0CCD  3196  264B  318C   	fcall	_I2C1_MasterSetIrq
 21794     0CD0                     l7939:
 21795                           
 21796                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 21797     0CD0  3003               	movlw	3
 21798     0CD1  2CF2               	goto	l1842
 21799     0CD2                     l7943:
 21800                           
 21801                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 21802     0CD2  3196  268A  318C   	fcall	_I2C1_DO_SEND_STOP
 21803     0CD5  2CF2               	goto	l1842
 21804     0CD6                     l7949:
 21805     0CD6  082C               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 21806     0CD7  00F8               	movwf	I2C1_CallbackReturnReset@funPtr
 21807     0CD8  0821               	movf	(_I2C1_Status+1)^(0+128),w
 21808     0CD9  008A               	movwf	10
 21809     0CDA  0820               	movf	_I2C1_Status^(0+128),w
 21810     0CDB  000A               	callw
 21811     0CDC  318C               	pagesel	$
 21812     0CDD  00F9               	movwf	??_I2C1_DO_TX_EMPTY
 21813     0CDE  01FA               	clrf	??_I2C1_DO_TX_EMPTY+1
 21814                           
 21815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21816                           ; Switch size 1, requested type "simple"
 21817                           ; Number of cases is 1, Range of values is 0 to 0
 21818                           ; switch strategies available:
 21819                           ; Name         Instructions Cycles
 21820                           ; simple_byte            4     3 (average)
 21821                           ; direct_byte            8     6 (fixed)
 21822                           ; jumptable            260     6 (fixed)
 21823                           ;	Chosen strategy is simple_byte
 21824     0CDF  087A               	movf	??_I2C1_DO_TX_EMPTY+1,w
 21825     0CE0  3A00               	xorlw	0	; case 0
 21826     0CE1  1903               	skipnz
 21827     0CE2  2CE4               	goto	l9721
 21828     0CE3  2CD2               	goto	l7943
 21829     0CE4                     l9721:
 21830                           
 21831                           ; Switch size 1, requested type "simple"
 21832                           ; Number of cases is 4, Range of values is 1 to 4
 21833                           ; switch strategies available:
 21834                           ; Name         Instructions Cycles
 21835                           ; simple_byte           13     7 (average)
 21836                           ; direct_byte           17     9 (fixed)
 21837                           ; jumptable            263     9 (fixed)
 21838                           ;	Chosen strategy is simple_byte
 21839     0CE4  0879               	movf	??_I2C1_DO_TX_EMPTY,w
 21840     0CE5  3A01               	xorlw	1	; case 1
 21841     0CE6  1903               	skipnz
 21842     0CE7  2CD2               	goto	l7943
 21843     0CE8  3A03               	xorlw	3	; case 2
 21844     0CE9  1903               	skipnz
 21845     0CEA  2CC9               	goto	l7933
 21846     0CEB  3A01               	xorlw	1	; case 3
 21847     0CEC  1903               	skipnz
 21848     0CED  2CC9               	goto	l7933
 21849     0CEE  3A07               	xorlw	7	; case 4
 21850     0CEF  1903               	skipnz
 21851     0CF0  2CCD               	goto	l7937
 21852     0CF1  2CD2               	goto	l7943
 21853     0CF2                     l1842:
 21854     0CF2  0008               	return
 21855     0CF3                     __end_of_I2C1_DO_TX_EMPTY:
 21856                           
 21857                           	psect	text112
 21858     164B                     __ptext112:	
 21859 ;; *************** function _I2C1_MasterSetIrq *****************
 21860 ;; Defined at:
 21861 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 21862 ;; Parameters:    Size  Location     Type
 21863 ;;		None
 21864 ;; Auto vars:     Size  Location     Type
 21865 ;;		None
 21866 ;; Return value:  Size  Location     Type
 21867 ;;                  1    wreg      void 
 21868 ;; Registers used:
 21869 ;;		None
 21870 ;; Tracked objects:
 21871 ;;		On entry : 0/0
 21872 ;;		On exit  : 0/0
 21873 ;;		Unchanged: 0/0
 21874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21879 ;;Total ram usage:        0 bytes
 21880 ;; Hardware stack levels used: 1
 21881 ;; Hardware stack levels required when called: 4
 21882 ;; This function calls:
 21883 ;;		Nothing
 21884 ;; This function is called by:
 21885 ;;		_I2C1_DO_TX_EMPTY
 21886 ;; This function uses a non-reentrant model
 21887 ;;
 21888                           
 21889     164B                     _I2C1_MasterSetIrq:	
 21890                           ;psect for function _I2C1_MasterSetIrq
 21891                           
 21892     164B                     l7821:	
 21893                           ;incstack = 0
 21894                           ; Regs used in _I2C1_MasterSetIrq: []
 21895                           
 21896                           
 21897                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 21898     164B  014E               	movlb	14	; select bank14
 21899     164C  140F               	bsf	15,0	;volatile
 21900     164D                     l1962:
 21901     164D  0008               	return
 21902     164E                     __end_of_I2C1_MasterSetIrq:
 21903                           
 21904                           	psect	text113
 21905     16B2                     __ptext113:	
 21906 ;; *************** function _I2C1_MasterIsNack *****************
 21907 ;; Defined at:
 21908 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 21909 ;; Parameters:    Size  Location     Type
 21910 ;;		None
 21911 ;; Auto vars:     Size  Location     Type
 21912 ;;		None
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1    wreg      _Bool 
 21915 ;; Registers used:
 21916 ;;		wreg, status,2, status,0
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21926 ;;Total ram usage:        0 bytes
 21927 ;; Hardware stack levels used: 1
 21928 ;; Hardware stack levels required when called: 4
 21929 ;; This function calls:
 21930 ;;		Nothing
 21931 ;; This function is called by:
 21932 ;;		_I2C1_MasterFsm
 21933 ;;		_I2C1_DO_TX
 21934 ;; This function uses a non-reentrant model
 21935 ;;
 21936                           
 21937     16B2                     _I2C1_MasterIsNack:	
 21938                           ;psect for function _I2C1_MasterIsNack
 21939                           
 21940     16B2                     l7771:	
 21941                           ;incstack = 0
 21942                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 21943                           
 21944                           
 21945                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 21946     16B2  0143               	movlb	3	; select bank3
 21947     16B3  0E11               	swapf	17,w	;volatile
 21948     16B4  0C89               	rrf	9,f
 21949     16B5  0C89               	rrf	9,f
 21950     16B6  3901               	andlw	1
 21951     16B7                     l1935:
 21952     16B7  0008               	return
 21953     16B8                     __end_of_I2C1_MasterIsNack:
 21954                           
 21955                           	psect	text114
 21956     1671                     __ptext114:	
 21957 ;; *************** function _I2C1_MasterSendTxData *****************
 21958 ;; Defined at:
 21959 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 21960 ;; Parameters:    Size  Location     Type
 21961 ;;  data            1    wreg     unsigned char 
 21962 ;; Auto vars:     Size  Location     Type
 21963 ;;  data            1    1[COMMON] unsigned char 
 21964 ;; Return value:  Size  Location     Type
 21965 ;;                  1    wreg      void 
 21966 ;; Registers used:
 21967 ;;		wreg
 21968 ;; Tracked objects:
 21969 ;;		On entry : 0/0
 21970 ;;		On exit  : 0/0
 21971 ;;		Unchanged: 0/0
 21972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21977 ;;Total ram usage:        1 bytes
 21978 ;; Hardware stack levels used: 1
 21979 ;; Hardware stack levels required when called: 4
 21980 ;; This function calls:
 21981 ;;		Nothing
 21982 ;; This function is called by:
 21983 ;;		_I2C1_DO_SEND_ADR_READ
 21984 ;;		_I2C1_DO_SEND_ADR_WRITE
 21985 ;;		_I2C1_DO_TX
 21986 ;; This function uses a non-reentrant model
 21987 ;;
 21988                           
 21989     1671                     _I2C1_MasterSendTxData:	
 21990                           ;psect for function _I2C1_MasterSendTxData
 21991                           
 21992                           
 21993                           ;incstack = 0
 21994                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 21995                           ;I2C1_MasterSendTxData@data stored from wreg
 21996     1671  00F1               	movwf	I2C1_MasterSendTxData@data
 21997     1672                     l7775:
 21998                           
 21999                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 22000     1672  0871               	movf	I2C1_MasterSendTxData@data,w
 22001     1673  0143               	movlb	3	; select bank3
 22002     1674  008C               	movwf	12	;volatile
 22003     1675                     l1917:
 22004     1675  0008               	return
 22005     1676                     __end_of_I2C1_MasterSendTxData:
 22006                           
 22007                           	psect	text115
 22008     1665                     __ptext115:	
 22009 ;; *************** function _I2C1_MasterSendAck *****************
 22010 ;; Defined at:
 22011 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 22012 ;; Parameters:    Size  Location     Type
 22013 ;;		None
 22014 ;; Auto vars:     Size  Location     Type
 22015 ;;		None
 22016 ;; Return value:  Size  Location     Type
 22017 ;;                  1    wreg      void 
 22018 ;; Registers used:
 22019 ;;		None
 22020 ;; Tracked objects:
 22021 ;;		On entry : 0/0
 22022 ;;		On exit  : 0/0
 22023 ;;		Unchanged: 0/0
 22024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22029 ;;Total ram usage:        0 bytes
 22030 ;; Hardware stack levels used: 1
 22031 ;; Hardware stack levels required when called: 4
 22032 ;; This function calls:
 22033 ;;		Nothing
 22034 ;; This function is called by:
 22035 ;;		_I2C1_DO_RX
 22036 ;;		_I2C1_DO_RX_ACK
 22037 ;; This function uses a non-reentrant model
 22038 ;;
 22039                           
 22040     1665                     _I2C1_MasterSendAck:	
 22041                           ;psect for function _I2C1_MasterSendAck
 22042                           
 22043     1665                     l7799:	
 22044                           ;incstack = 0
 22045                           ; Regs used in _I2C1_MasterSendAck: []
 22046                           
 22047                           
 22048                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 22049     1665  0143               	movlb	3	; select bank3
 22050     1666  1291               	bcf	17,5	;volatile
 22051                           
 22052                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 22053     1667  1611               	bsf	17,4	;volatile
 22054     1668                     l1938:
 22055     1668  0008               	return
 22056     1669                     __end_of_I2C1_MasterSendAck:
 22057                           
 22058                           	psect	text116
 22059     1648                     __ptext116:	
 22060 ;; *************** function _I2C1_MasterGetRxData *****************
 22061 ;; Defined at:
 22062 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;		None
 22065 ;; Auto vars:     Size  Location     Type
 22066 ;;		None
 22067 ;; Return value:  Size  Location     Type
 22068 ;;                  1    wreg      unsigned char 
 22069 ;; Registers used:
 22070 ;;		wreg
 22071 ;; Tracked objects:
 22072 ;;		On entry : 0/0
 22073 ;;		On exit  : 0/0
 22074 ;;		Unchanged: 0/0
 22075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22080 ;;Total ram usage:        0 bytes
 22081 ;; Hardware stack levels used: 1
 22082 ;; Hardware stack levels required when called: 4
 22083 ;; This function calls:
 22084 ;;		Nothing
 22085 ;; This function is called by:
 22086 ;;		_I2C1_DO_RX
 22087 ;; This function uses a non-reentrant model
 22088 ;;
 22089                           
 22090     1648                     _I2C1_MasterGetRxData:	
 22091                           ;psect for function _I2C1_MasterGetRxData
 22092                           
 22093     1648                     l7795:	
 22094                           ;incstack = 0
 22095                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 22096                           
 22097                           
 22098                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 22099     1648  0143               	movlb	3	; select bank3
 22100     1649  080C               	movf	12,w	;volatile
 22101     164A                     l1914:
 22102     164A  0008               	return
 22103     164B                     __end_of_I2C1_MasterGetRxData:
 22104                           
 22105                           	psect	text117
 22106     1661                     __ptext117:	
 22107 ;; *************** function _I2C1_MasterSendNack *****************
 22108 ;; Defined at:
 22109 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 22110 ;; Parameters:    Size  Location     Type
 22111 ;;		None
 22112 ;; Auto vars:     Size  Location     Type
 22113 ;;		None
 22114 ;; Return value:  Size  Location     Type
 22115 ;;                  1    wreg      void 
 22116 ;; Registers used:
 22117 ;;		None
 22118 ;; Tracked objects:
 22119 ;;		On entry : 0/0
 22120 ;;		On exit  : 0/0
 22121 ;;		Unchanged: 0/0
 22122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22127 ;;Total ram usage:        0 bytes
 22128 ;; Hardware stack levels used: 1
 22129 ;; Hardware stack levels required when called: 4
 22130 ;; This function calls:
 22131 ;;		Nothing
 22132 ;; This function is called by:
 22133 ;;		_I2C1_DO_RX_NACK_STOP
 22134 ;;		_I2C1_DO_RX_NACK_RESTART
 22135 ;; This function uses a non-reentrant model
 22136 ;;
 22137                           
 22138     1661                     _I2C1_MasterSendNack:	
 22139                           ;psect for function _I2C1_MasterSendNack
 22140                           
 22141     1661                     l7693:	
 22142                           ;incstack = 0
 22143                           ; Regs used in _I2C1_MasterSendNack: []
 22144                           
 22145                           
 22146                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 22147     1661  0143               	movlb	3	; select bank3
 22148     1662  1691               	bsf	17,5	;volatile
 22149                           
 22150                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 22151     1663  1611               	bsf	17,4	;volatile
 22152     1664                     l1941:
 22153     1664  0008               	return
 22154     1665                     __end_of_I2C1_MasterSendNack:
 22155                           
 22156                           	psect	text118
 22157     1645                     __ptext118:	
 22158 ;; *************** function _I2C1_MasterStartRx *****************
 22159 ;; Defined at:
 22160 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 22161 ;; Parameters:    Size  Location     Type
 22162 ;;		None
 22163 ;; Auto vars:     Size  Location     Type
 22164 ;;		None
 22165 ;; Return value:  Size  Location     Type
 22166 ;;                  1    wreg      void 
 22167 ;; Registers used:
 22168 ;;		None
 22169 ;; Tracked objects:
 22170 ;;		On entry : 0/0
 22171 ;;		On exit  : 0/0
 22172 ;;		Unchanged: 0/0
 22173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22178 ;;Total ram usage:        0 bytes
 22179 ;; Hardware stack levels used: 1
 22180 ;; Hardware stack levels required when called: 4
 22181 ;; This function calls:
 22182 ;;		Nothing
 22183 ;; This function is called by:
 22184 ;;		_I2C1_DO_RCEN
 22185 ;; This function uses a non-reentrant model
 22186 ;;
 22187                           
 22188     1645                     _I2C1_MasterStartRx:	
 22189                           ;psect for function _I2C1_MasterStartRx
 22190                           
 22191     1645                     l7813:	
 22192                           ;incstack = 0
 22193                           ; Regs used in _I2C1_MasterStartRx: []
 22194                           
 22195                           
 22196                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 22197     1645  0143               	movlb	3	; select bank3
 22198     1646  1591               	bsf	17,3	;volatile
 22199     1647                     l1926:
 22200     1647  0008               	return
 22201     1648                     __end_of_I2C1_MasterStartRx:
 22202                           
 22203                           	psect	text119
 22204     1631                     __ptext119:	
 22205 ;; *************** function _I2C1_CallbackReturnReset *****************
 22206 ;; Defined at:
 22207 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 22208 ;; Parameters:    Size  Location     Type
 22209 ;;  funPtr          1    8[COMMON] PTR void 
 22210 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22211 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22212 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22213 ;; Auto vars:     Size  Location     Type
 22214 ;;		None
 22215 ;; Return value:  Size  Location     Type
 22216 ;;                  1    wreg      enum E363
 22217 ;; Registers used:
 22218 ;;		wreg
 22219 ;; Tracked objects:
 22220 ;;		On entry : 0/0
 22221 ;;		On exit  : 0/0
 22222 ;;		Unchanged: 0/0
 22223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22224 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22228 ;;Total ram usage:        1 bytes
 22229 ;; Hardware stack levels used: 1
 22230 ;; Hardware stack levels required when called: 4
 22231 ;; This function calls:
 22232 ;;		Nothing
 22233 ;; This function is called by:
 22234 ;;		_I2C1_Open
 22235 ;;		_I2C1_DO_TX
 22236 ;;		_I2C1_DO_RX
 22237 ;;		_I2C1_DO_TX_EMPTY
 22238 ;;		_I2C1_DO_ADDRESS_NACK
 22239 ;;		_I2C1_DO_RX_EMPTY
 22240 ;; This function uses a non-reentrant model
 22241 ;;
 22242                           
 22243     1631                     _I2C1_CallbackReturnReset:	
 22244                           ;psect for function _I2C1_CallbackReturnReset
 22245                           
 22246     1631                     l7827:	
 22247                           ;incstack = 0
 22248                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 22249                           
 22250                           
 22251                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 22252     1631  3005               	movlw	5
 22253     1632                     l1898:
 22254     1632  0008               	return
 22255     1633                     __end_of_I2C1_CallbackReturnReset:
 22256                           
 22257                           	psect	text120
 22258     162F                     __ptext120:	
 22259 ;; *************** function _I2C1_CallbackReturnStop *****************
 22260 ;; Defined at:
 22261 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 22262 ;; Parameters:    Size  Location     Type
 22263 ;;  funPtr          1    8[COMMON] PTR void 
 22264 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22265 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22266 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22267 ;; Auto vars:     Size  Location     Type
 22268 ;;		None
 22269 ;; Return value:  Size  Location     Type
 22270 ;;                  1    wreg      enum E363
 22271 ;; Registers used:
 22272 ;;		wreg
 22273 ;; Tracked objects:
 22274 ;;		On entry : 0/0
 22275 ;;		On exit  : 0/0
 22276 ;;		Unchanged: 0/0
 22277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22278 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22282 ;;Total ram usage:        1 bytes
 22283 ;; Hardware stack levels used: 1
 22284 ;; Hardware stack levels required when called: 4
 22285 ;; This function calls:
 22286 ;;		Nothing
 22287 ;; This function is called by:
 22288 ;;		_I2C1_Open
 22289 ;;		_I2C1_SetCallback
 22290 ;;		_I2C1_DO_TX
 22291 ;;		_I2C1_DO_RX
 22292 ;;		_I2C1_DO_TX_EMPTY
 22293 ;;		_I2C1_DO_ADDRESS_NACK
 22294 ;;		_I2C1_DO_RX_EMPTY
 22295 ;; This function uses a non-reentrant model
 22296 ;;
 22297                           
 22298     162F                     _I2C1_CallbackReturnStop:	
 22299                           ;psect for function _I2C1_CallbackReturnStop
 22300                           
 22301     162F                     l7823:	
 22302                           ;incstack = 0
 22303                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 22304                           
 22305                           
 22306                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 22307     162F  3001               	movlw	1
 22308     1630                     l1895:
 22309     1630  0008               	return
 22310     1631                     __end_of_I2C1_CallbackReturnStop:
 22311                           
 22312                           	psect	text121
 22313     09CC                     __ptext121:	
 22314 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F1227 *****************
 22315 ;; Defined at:
 22316 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22317 ;; Parameters:    Size  Location     Type
 22318 ;;  ptr             1    8[COMMON] PTR void 
 22319 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22320 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22321 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22322 ;; Auto vars:     Size  Location     Type
 22323 ;;		None
 22324 ;; Return value:  Size  Location     Type
 22325 ;;                  1    wreg      enum E363
 22326 ;; Registers used:
 22327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22328 ;; Tracked objects:
 22329 ;;		On entry : 0/0
 22330 ;;		On exit  : 0/0
 22331 ;;		Unchanged: 0/0
 22332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22337 ;;Total ram usage:        1 bytes
 22338 ;; Hardware stack levels used: 1
 22339 ;; Hardware stack levels required when called: 6
 22340 ;; This function calls:
 22341 ;;		_I2C1_SetBuffer
 22342 ;;		_I2C1_SetDataCompleteCallback
 22343 ;; This function is called by:
 22344 ;;		_I2C1_ReadDataBlock
 22345 ;;		_I2C1_DO_TX
 22346 ;;		_I2C1_DO_RX
 22347 ;;		_I2C1_DO_TX_EMPTY
 22348 ;;		_I2C1_DO_ADDRESS_NACK
 22349 ;;		_I2C1_DO_RX_EMPTY
 22350 ;; This function uses a non-reentrant model
 22351 ;;
 22352                           
 22353     09CC                     _rdBlkRegCompleteHandler@i2c1_master_example$F1227:	
 22354                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F1227
 22355                           
 22356     09CC                     l7765:	
 22357                           ;incstack = 0
 22358                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F1227: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
 22359                           
 22360                           
 22361                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 22362     09CC  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1227@ptr,w
 22363     09CD  0086               	movwf	6
 22364     09CE  0187               	clrf	7
 22365     09CF  3F40               	moviw [0]fsr1
 22366     09D0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22367     09D1  3F41               	moviw [1]fsr1
 22368     09D2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22369     09D3  0878               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F1227@ptr,w
 22370     09D4  3E02               	addlw	2
 22371     09D5  0086               	movwf	6
 22372     09D6  0187               	clrf	7
 22373     09D7  0801               	movf	1,w
 22374     09D8  3197  27F2  3189   	fcall	_I2C1_SetBuffer
 22375                           
 22376                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22377     09DB  3000               	movlw	0
 22378     09DC  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22379     09DD  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22380     09DE  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22381     09DF  3197  2794  3189   	fcall	_I2C1_SetDataCompleteCallback
 22382     09E2                     l7767:
 22383                           
 22384                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 22385     09E2  3002               	movlw	2
 22386     09E3                     l739:
 22387     09E3  0008               	return
 22388     09E4                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1227:
 22389                           
 22390                           	psect	text122
 22391     08AF                     __ptext122:	
 22392 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F1210 *****************
 22393 ;; Defined at:
 22394 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22395 ;; Parameters:    Size  Location     Type
 22396 ;;  ptr             1    8[COMMON] PTR void 
 22397 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22398 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22399 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22400 ;; Auto vars:     Size  Location     Type
 22401 ;;		None
 22402 ;; Return value:  Size  Location     Type
 22403 ;;                  1    wreg      enum E363
 22404 ;; Registers used:
 22405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22406 ;; Tracked objects:
 22407 ;;		On entry : 0/0
 22408 ;;		On exit  : 0/0
 22409 ;;		Unchanged: 0/0
 22410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22415 ;;Total ram usage:        1 bytes
 22416 ;; Hardware stack levels used: 1
 22417 ;; Hardware stack levels required when called: 6
 22418 ;; This function calls:
 22419 ;;		_I2C1_SetBuffer
 22420 ;;		_I2C1_SetDataCompleteCallback
 22421 ;; This function is called by:
 22422 ;;		_I2C1_Write1ByteRegister
 22423 ;;		_I2C1_DO_TX
 22424 ;;		_I2C1_DO_RX
 22425 ;;		_I2C1_DO_TX_EMPTY
 22426 ;;		_I2C1_DO_ADDRESS_NACK
 22427 ;;		_I2C1_DO_RX_EMPTY
 22428 ;; This function uses a non-reentrant model
 22429 ;;
 22430                           
 22431     08AF                     _wr1RegCompleteHandler@i2c1_master_example$F1210:	
 22432                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F1210
 22433                           
 22434     08AF                     l7749:	
 22435                           ;incstack = 0
 22436                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F1210: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 22437                           
 22438                           
 22439                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 22440     08AF  3001               	movlw	1
 22441     08B0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22442     08B1  3000               	movlw	0
 22443     08B2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22444     08B3  0878               	movf	wr1RegCompleteHandler@i2c1_master_example$F1210@ptr,w
 22445     08B4  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22446     08B7                     l7751:
 22447                           
 22448                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22449     08B7  3000               	movlw	0
 22450     08B8  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22451     08B9  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22452     08BA  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22453     08BB  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22454     08BE                     l7753:
 22455                           
 22456                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 22457     08BE  3004               	movlw	4
 22458     08BF                     l733:
 22459     08BF  0008               	return
 22460     08C0                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F1210:
 22461                           
 22462                           	psect	text123
 22463     089E                     __ptext123:	
 22464 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F1204 *****************
 22465 ;; Defined at:
 22466 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22467 ;; Parameters:    Size  Location     Type
 22468 ;;  ptr             1    8[COMMON] PTR void 
 22469 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22470 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22471 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22472 ;; Auto vars:     Size  Location     Type
 22473 ;;		None
 22474 ;; Return value:  Size  Location     Type
 22475 ;;                  1    wreg      enum E363
 22476 ;; Registers used:
 22477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22478 ;; Tracked objects:
 22479 ;;		On entry : 0/0
 22480 ;;		On exit  : 0/0
 22481 ;;		Unchanged: 0/0
 22482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22483 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22487 ;;Total ram usage:        1 bytes
 22488 ;; Hardware stack levels used: 1
 22489 ;; Hardware stack levels required when called: 6
 22490 ;; This function calls:
 22491 ;;		_I2C1_SetBuffer
 22492 ;;		_I2C1_SetDataCompleteCallback
 22493 ;; This function is called by:
 22494 ;;		_I2C1_Read2ByteRegister
 22495 ;;		_I2C1_DO_TX
 22496 ;;		_I2C1_DO_RX
 22497 ;;		_I2C1_DO_TX_EMPTY
 22498 ;;		_I2C1_DO_ADDRESS_NACK
 22499 ;;		_I2C1_DO_RX_EMPTY
 22500 ;; This function uses a non-reentrant model
 22501 ;;
 22502                           
 22503     089E                     _rd2RegCompleteHandler@i2c1_master_example$F1204:	
 22504                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F1204
 22505                           
 22506     089E                     l7741:	
 22507                           ;incstack = 0
 22508                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F1204: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 22509                           
 22510                           
 22511                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 22512     089E  3002               	movlw	2
 22513     089F  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22514     08A0  3000               	movlw	0
 22515     08A1  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22516     08A2  0878               	movf	rd2RegCompleteHandler@i2c1_master_example$F1204@ptr,w
 22517     08A3  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22518     08A6                     l7743:
 22519                           
 22520                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22521     08A6  3000               	movlw	0
 22522     08A7  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22523     08A8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22524     08A9  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22525     08AA  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22526     08AD                     l7745:
 22527                           
 22528                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 22529     08AD  3002               	movlw	2
 22530     08AE                     l730:
 22531     08AE  0008               	return
 22532     08AF                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F1204:
 22533                           
 22534                           	psect	text124
 22535     088D                     __ptext124:	
 22536 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F1193 *****************
 22537 ;; Defined at:
 22538 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;  ptr             1    8[COMMON] PTR void 
 22541 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22542 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22543 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22544 ;; Auto vars:     Size  Location     Type
 22545 ;;		None
 22546 ;; Return value:  Size  Location     Type
 22547 ;;                  1    wreg      enum E363
 22548 ;; Registers used:
 22549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22550 ;; Tracked objects:
 22551 ;;		On entry : 0/0
 22552 ;;		On exit  : 0/0
 22553 ;;		Unchanged: 0/0
 22554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22559 ;;Total ram usage:        1 bytes
 22560 ;; Hardware stack levels used: 1
 22561 ;; Hardware stack levels required when called: 6
 22562 ;; This function calls:
 22563 ;;		_I2C1_SetBuffer
 22564 ;;		_I2C1_SetDataCompleteCallback
 22565 ;; This function is called by:
 22566 ;;		_I2C1_Read1ByteRegister
 22567 ;;		_I2C1_DO_TX
 22568 ;;		_I2C1_DO_RX
 22569 ;;		_I2C1_DO_TX_EMPTY
 22570 ;;		_I2C1_DO_ADDRESS_NACK
 22571 ;;		_I2C1_DO_RX_EMPTY
 22572 ;; This function uses a non-reentrant model
 22573 ;;
 22574                           
 22575     088D                     _rd1RegCompleteHandler@i2c1_master_example$F1193:	
 22576                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F1193
 22577                           
 22578     088D                     l7733:	
 22579                           ;incstack = 0
 22580                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F1193: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 22581                           
 22582                           
 22583                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 22584     088D  3001               	movlw	1
 22585     088E  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22586     088F  3000               	movlw	0
 22587     0890  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22588     0891  0878               	movf	rd1RegCompleteHandler@i2c1_master_example$F1193@ptr,w
 22589     0892  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22590     0895                     l7735:
 22591                           
 22592                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 22593     0895  3000               	movlw	0
 22594     0896  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22595     0897  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22596     0898  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22597     0899  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22598     089C                     l7737:
 22599                           
 22600                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 22601     089C  3002               	movlw	2
 22602     089D                     l727:
 22603     089D  0008               	return
 22604     089E                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F1193:
 22605                           
 22606                           	psect	text125
 22607     09B4                     __ptext125:	
 22608 ;; *************** function _rdBlkRegCompleteHandler *****************
 22609 ;; Defined at:
 22610 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22611 ;; Parameters:    Size  Location     Type
 22612 ;;  p               1    8[COMMON] PTR void 
 22613 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22614 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22615 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22616 ;; Auto vars:     Size  Location     Type
 22617 ;;		None
 22618 ;; Return value:  Size  Location     Type
 22619 ;;                  1    wreg      enum E363
 22620 ;; Registers used:
 22621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22622 ;; Tracked objects:
 22623 ;;		On entry : 0/0
 22624 ;;		On exit  : 0/0
 22625 ;;		Unchanged: 0/0
 22626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22627 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22631 ;;Total ram usage:        1 bytes
 22632 ;; Hardware stack levels used: 1
 22633 ;; Hardware stack levels required when called: 6
 22634 ;; This function calls:
 22635 ;;		_I2C1_SetBuffer
 22636 ;;		_I2C1_SetDataCompleteCallback
 22637 ;; This function is called by:
 22638 ;;		_i2c_readDataBlock
 22639 ;;		_I2C1_DO_TX
 22640 ;;		_I2C1_DO_RX
 22641 ;;		_I2C1_DO_TX_EMPTY
 22642 ;;		_I2C1_DO_ADDRESS_NACK
 22643 ;;		_I2C1_DO_RX_EMPTY
 22644 ;; This function uses a non-reentrant model
 22645 ;;
 22646                           
 22647     09B4                     _rdBlkRegCompleteHandler:	
 22648                           ;psect for function _rdBlkRegCompleteHandler
 22649                           
 22650     09B4                     l7727:	
 22651                           ;incstack = 0
 22652                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22653                           
 22654                           
 22655                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 22656     09B4  0878               	movf	rdBlkRegCompleteHandler@p,w
 22657     09B5  0086               	movwf	6
 22658     09B6  0187               	clrf	7
 22659     09B7  3F40               	moviw [0]fsr1
 22660     09B8  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22661     09B9  3F41               	moviw [1]fsr1
 22662     09BA  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22663     09BB  0878               	movf	rdBlkRegCompleteHandler@p,w
 22664     09BC  3E02               	addlw	2
 22665     09BD  0086               	movwf	6
 22666     09BE  0187               	clrf	7
 22667     09BF  0801               	movf	1,w
 22668     09C0  3197  27F2  3189   	fcall	_I2C1_SetBuffer
 22669                           
 22670                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 22671     09C3  3000               	movlw	0
 22672     09C4  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22673     09C5  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22674     09C6  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22675     09C7  3197  2794  3189   	fcall	_I2C1_SetDataCompleteCallback
 22676     09CA                     l7729:
 22677                           
 22678                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 22679     09CA  3002               	movlw	2
 22680     09CB                     l558:
 22681     09CB  0008               	return
 22682     09CC                     __end_of_rdBlkRegCompleteHandler:
 22683                           
 22684                           	psect	text126
 22685     087C                     __ptext126:	
 22686 ;; *************** function _wr2RegCompleteHandler *****************
 22687 ;; Defined at:
 22688 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22689 ;; Parameters:    Size  Location     Type
 22690 ;;  p               1    8[COMMON] PTR void 
 22691 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22692 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22693 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22694 ;; Auto vars:     Size  Location     Type
 22695 ;;		None
 22696 ;; Return value:  Size  Location     Type
 22697 ;;                  1    wreg      enum E363
 22698 ;; Registers used:
 22699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22700 ;; Tracked objects:
 22701 ;;		On entry : 0/0
 22702 ;;		On exit  : 0/0
 22703 ;;		Unchanged: 0/0
 22704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22705 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22709 ;;Total ram usage:        1 bytes
 22710 ;; Hardware stack levels used: 1
 22711 ;; Hardware stack levels required when called: 6
 22712 ;; This function calls:
 22713 ;;		_I2C1_SetBuffer
 22714 ;;		_I2C1_SetDataCompleteCallback
 22715 ;; This function is called by:
 22716 ;;		_i2c_write2ByteRegister
 22717 ;;		_I2C1_DO_TX
 22718 ;;		_I2C1_DO_RX
 22719 ;;		_I2C1_DO_TX_EMPTY
 22720 ;;		_I2C1_DO_ADDRESS_NACK
 22721 ;;		_I2C1_DO_RX_EMPTY
 22722 ;; This function uses a non-reentrant model
 22723 ;;
 22724                           
 22725     087C                     _wr2RegCompleteHandler:	
 22726                           ;psect for function _wr2RegCompleteHandler
 22727                           
 22728     087C                     l7719:	
 22729                           ;incstack = 0
 22730                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22731                           
 22732                           
 22733                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 22734     087C  3002               	movlw	2
 22735     087D  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22736     087E  3000               	movlw	0
 22737     087F  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22738     0880  0878               	movf	wr2RegCompleteHandler@p,w
 22739     0881  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22740     0884                     l7721:
 22741                           
 22742                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 22743     0884  3000               	movlw	0
 22744     0885  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22745     0886  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22746     0887  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22747     0888  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22748     088B                     l7723:
 22749                           
 22750                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 22751     088B  3004               	movlw	4
 22752     088C                     l546:
 22753     088C  0008               	return
 22754     088D                     __end_of_wr2RegCompleteHandler:
 22755                           
 22756                           	psect	text127
 22757     086B                     __ptext127:	
 22758 ;; *************** function _rd2RegCompleteHandler *****************
 22759 ;; Defined at:
 22760 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;  p               1    8[COMMON] PTR void 
 22763 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22764 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22765 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22766 ;; Auto vars:     Size  Location     Type
 22767 ;;		None
 22768 ;; Return value:  Size  Location     Type
 22769 ;;                  1    wreg      enum E363
 22770 ;; Registers used:
 22771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22772 ;; Tracked objects:
 22773 ;;		On entry : 0/0
 22774 ;;		On exit  : 0/0
 22775 ;;		Unchanged: 0/0
 22776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22777 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22781 ;;Total ram usage:        1 bytes
 22782 ;; Hardware stack levels used: 1
 22783 ;; Hardware stack levels required when called: 6
 22784 ;; This function calls:
 22785 ;;		_I2C1_SetBuffer
 22786 ;;		_I2C1_SetDataCompleteCallback
 22787 ;; This function is called by:
 22788 ;;		_i2c_read2ByteRegister
 22789 ;;		_I2C1_DO_TX
 22790 ;;		_I2C1_DO_RX
 22791 ;;		_I2C1_DO_TX_EMPTY
 22792 ;;		_I2C1_DO_ADDRESS_NACK
 22793 ;;		_I2C1_DO_RX_EMPTY
 22794 ;; This function uses a non-reentrant model
 22795 ;;
 22796                           
 22797     086B                     _rd2RegCompleteHandler:	
 22798                           ;psect for function _rd2RegCompleteHandler
 22799                           
 22800     086B                     l7711:	
 22801                           ;incstack = 0
 22802                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22803                           
 22804                           
 22805                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 22806     086B  3002               	movlw	2
 22807     086C  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22808     086D  3000               	movlw	0
 22809     086E  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22810     086F  0878               	movf	rd2RegCompleteHandler@p,w
 22811     0870  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22812     0873                     l7713:
 22813                           
 22814                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 22815     0873  3000               	movlw	0
 22816     0874  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22817     0875  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22818     0876  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22819     0877  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22820     087A                     l7715:
 22821                           
 22822                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 22823     087A  3002               	movlw	2
 22824     087B                     l534:
 22825     087B  0008               	return
 22826     087C                     __end_of_rd2RegCompleteHandler:
 22827                           
 22828                           	psect	text128
 22829     085A                     __ptext128:	
 22830 ;; *************** function _rd1RegCompleteHandler *****************
 22831 ;; Defined at:
 22832 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22833 ;; Parameters:    Size  Location     Type
 22834 ;;  p               1    8[COMMON] PTR void 
 22835 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22836 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22837 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22838 ;; Auto vars:     Size  Location     Type
 22839 ;;		None
 22840 ;; Return value:  Size  Location     Type
 22841 ;;                  1    wreg      enum E363
 22842 ;; Registers used:
 22843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22844 ;; Tracked objects:
 22845 ;;		On entry : 0/0
 22846 ;;		On exit  : 0/0
 22847 ;;		Unchanged: 0/0
 22848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22849 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22853 ;;Total ram usage:        1 bytes
 22854 ;; Hardware stack levels used: 1
 22855 ;; Hardware stack levels required when called: 6
 22856 ;; This function calls:
 22857 ;;		_I2C1_SetBuffer
 22858 ;;		_I2C1_SetDataCompleteCallback
 22859 ;; This function is called by:
 22860 ;;		_i2c_read1ByteRegister
 22861 ;;		_I2C1_DO_TX
 22862 ;;		_I2C1_DO_RX
 22863 ;;		_I2C1_DO_TX_EMPTY
 22864 ;;		_I2C1_DO_ADDRESS_NACK
 22865 ;;		_I2C1_DO_RX_EMPTY
 22866 ;; This function uses a non-reentrant model
 22867 ;;
 22868                           
 22869     085A                     _rd1RegCompleteHandler:	
 22870                           ;psect for function _rd1RegCompleteHandler
 22871                           
 22872     085A                     l7703:	
 22873                           ;incstack = 0
 22874                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22875                           
 22876                           
 22877                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 22878     085A  3001               	movlw	1
 22879     085B  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22880     085C  3000               	movlw	0
 22881     085D  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22882     085E  0878               	movf	rd1RegCompleteHandler@p,w
 22883     085F  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22884     0862                     l7705:
 22885                           
 22886                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 22887     0862  3000               	movlw	0
 22888     0863  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22889     0864  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22890     0865  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22891     0866  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22892     0869                     l7707:
 22893                           
 22894                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 22895     0869  3002               	movlw	2
 22896     086A                     l519:
 22897     086A  0008               	return
 22898     086B                     __end_of_rd1RegCompleteHandler:
 22899                           
 22900                           	psect	text129
 22901     0849                     __ptext129:	
 22902 ;; *************** function _wr1RegCompleteHandler *****************
 22903 ;; Defined at:
 22904 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22905 ;; Parameters:    Size  Location     Type
 22906 ;;  p               1    8[COMMON] PTR void 
 22907 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22908 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22909 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22910 ;; Auto vars:     Size  Location     Type
 22911 ;;		None
 22912 ;; Return value:  Size  Location     Type
 22913 ;;                  1    wreg      enum E363
 22914 ;; Registers used:
 22915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22916 ;; Tracked objects:
 22917 ;;		On entry : 0/0
 22918 ;;		On exit  : 0/0
 22919 ;;		Unchanged: 0/0
 22920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22921 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22925 ;;Total ram usage:        1 bytes
 22926 ;; Hardware stack levels used: 1
 22927 ;; Hardware stack levels required when called: 6
 22928 ;; This function calls:
 22929 ;;		_I2C1_SetBuffer
 22930 ;;		_I2C1_SetDataCompleteCallback
 22931 ;; This function is called by:
 22932 ;;		_i2c_write1ByteRegister
 22933 ;;		_I2C1_DO_TX
 22934 ;;		_I2C1_DO_RX
 22935 ;;		_I2C1_DO_TX_EMPTY
 22936 ;;		_I2C1_DO_ADDRESS_NACK
 22937 ;;		_I2C1_DO_RX_EMPTY
 22938 ;; This function uses a non-reentrant model
 22939 ;;
 22940                           
 22941     0849                     _wr1RegCompleteHandler:	
 22942                           ;psect for function _wr1RegCompleteHandler
 22943                           
 22944     0849                     l7695:	
 22945                           ;incstack = 0
 22946                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22947                           
 22948                           
 22949                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 22950     0849  3001               	movlw	1
 22951     084A  00F1               	movwf	I2C1_SetBuffer@bufferSize
 22952     084B  3000               	movlw	0
 22953     084C  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 22954     084D  0878               	movf	wr1RegCompleteHandler@p,w
 22955     084E  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 22956     0851                     l7697:
 22957                           
 22958                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 22959     0851  3000               	movlw	0
 22960     0852  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 22961     0853  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 22962     0854  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 22963     0855  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 22964     0858                     l7699:
 22965                           
 22966                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 22967     0858  3004               	movlw	4
 22968     0859                     l498:
 22969     0859  0008               	return
 22970     085A                     __end_of_wr1RegCompleteHandler:
 22971                           
 22972                           	psect	text130
 22973     0838                     __ptext130:	
 22974 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F1216 *****************
 22975 ;; Defined at:
 22976 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 22977 ;; Parameters:    Size  Location     Type
 22978 ;;  ptr             1    8[COMMON] PTR void 
 22979 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 22980 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 22981 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22982 ;; Auto vars:     Size  Location     Type
 22983 ;;		None
 22984 ;; Return value:  Size  Location     Type
 22985 ;;                  1    wreg      enum E363
 22986 ;; Registers used:
 22987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22988 ;; Tracked objects:
 22989 ;;		On entry : 0/0
 22990 ;;		On exit  : 0/0
 22991 ;;		Unchanged: 0/0
 22992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22993 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22997 ;;Total ram usage:        1 bytes
 22998 ;; Hardware stack levels used: 1
 22999 ;; Hardware stack levels required when called: 6
 23000 ;; This function calls:
 23001 ;;		_I2C1_SetBuffer
 23002 ;;		_I2C1_SetDataCompleteCallback
 23003 ;; This function is called by:
 23004 ;;		_I2C1_Write2ByteRegister
 23005 ;;		_I2C1_DO_TX
 23006 ;;		_I2C1_DO_RX
 23007 ;;		_I2C1_DO_TX_EMPTY
 23008 ;;		_I2C1_DO_ADDRESS_NACK
 23009 ;;		_I2C1_DO_RX_EMPTY
 23010 ;; This function uses a non-reentrant model
 23011 ;;
 23012                           
 23013     0838                     _wr2RegCompleteHandler@i2c1_master_example$F1216:	
 23014                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F1216
 23015                           
 23016     0838                     l7757:	
 23017                           ;incstack = 0
 23018                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F1216: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
 23019                           
 23020                           
 23021                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 23022     0838  3002               	movlw	2
 23023     0839  00F1               	movwf	I2C1_SetBuffer@bufferSize
 23024     083A  3000               	movlw	0
 23025     083B  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 23026     083C  0878               	movf	wr2RegCompleteHandler@i2c1_master_example$F1216@ptr,w
 23027     083D  3197  27F2  3188   	fcall	_I2C1_SetBuffer
 23028     0840                     l7759:
 23029                           
 23030                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 23031     0840  3000               	movlw	0
 23032     0841  00F5               	movwf	I2C1_SetDataCompleteCallback@cb
 23033     0842  00F6               	movwf	I2C1_SetDataCompleteCallback@cb+1
 23034     0843  01F7               	clrf	I2C1_SetDataCompleteCallback@ptr
 23035     0844  3197  2794  3188   	fcall	_I2C1_SetDataCompleteCallback
 23036     0847                     l7761:
 23037                           
 23038                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 23039     0847  3004               	movlw	4
 23040     0848                     l736:
 23041     0848  0008               	return
 23042     0849                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F1216:
 23043                           
 23044                           	psect	text131
 23045     1794                     __ptext131:	
 23046 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 23047 ;; Defined at:
 23048 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 23049 ;; Parameters:    Size  Location     Type
 23050 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 23051 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1227(1), wr2RegCompleteHandler@i2c1_master_example$F1216(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1210(1), rd2RegCompleteHandler@i2c1_master_example$F1204(1), 
 23052 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1193(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 23053 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 23054 ;;  ptr             1    7[COMMON] PTR void 
 23055 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23056 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23057 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23058 ;; Auto vars:     Size  Location     Type
 23059 ;;		None
 23060 ;; Return value:  Size  Location     Type
 23061 ;;                  1    wreg      void 
 23062 ;; Registers used:
 23063 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23064 ;; Tracked objects:
 23065 ;;		On entry : 0/0
 23066 ;;		On exit  : 0/0
 23067 ;;		Unchanged: 0/0
 23068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23072 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23073 ;;Total ram usage:        3 bytes
 23074 ;; Hardware stack levels used: 1
 23075 ;; Hardware stack levels required when called: 5
 23076 ;; This function calls:
 23077 ;;		_I2C1_SetCallback
 23078 ;; This function is called by:
 23079 ;;		_wr1RegCompleteHandler
 23080 ;;		_rd1RegCompleteHandler
 23081 ;;		_i2c_read1ByteRegister
 23082 ;;		_rd2RegCompleteHandler
 23083 ;;		_i2c_read2ByteRegister
 23084 ;;		_wr2RegCompleteHandler
 23085 ;;		_rdBlkRegCompleteHandler
 23086 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1193
 23087 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1204
 23088 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1210
 23089 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1216
 23090 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1227
 23091 ;;		_i2c_write1ByteRegister
 23092 ;;		_i2c_write2ByteRegister
 23093 ;;		_i2c_readDataBlock
 23094 ;;		_I2C1_Read1ByteRegister
 23095 ;;		_I2C1_Read2ByteRegister
 23096 ;;		_I2C1_Write1ByteRegister
 23097 ;;		_I2C1_Write2ByteRegister
 23098 ;;		_I2C1_ReadDataBlock
 23099 ;; This function uses a non-reentrant model
 23100 ;;
 23101                           
 23102     1794                     _I2C1_SetDataCompleteCallback:	
 23103                           ;psect for function _I2C1_SetDataCompleteCallback
 23104                           
 23105     1794                     l7687:	
 23106                           ;incstack = 0
 23107                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 23108                           
 23109                           
 23110                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 23111     1794  0876               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 23112     1795  00F2               	movwf	I2C1_SetCallback@cb+1
 23113     1796  0875               	movf	I2C1_SetDataCompleteCallback@cb,w
 23114     1797  00F1               	movwf	I2C1_SetCallback@cb
 23115     1798  0877               	movf	I2C1_SetDataCompleteCallback@ptr,w
 23116     1799  00F3               	movwf	I2C1_SetCallback@ptr
 23117     179A  3000               	movlw	0
 23118     179B  318B  2341  3197   	fcall	_I2C1_SetCallback
 23119     179E                     l1769:
 23120     179E  0008               	return
 23121     179F                     __end_of_I2C1_SetDataCompleteCallback:
 23122                           
 23123                           	psect	text132
 23124     0B41                     __ptext132:	
 23125 ;; *************** function _I2C1_SetCallback *****************
 23126 ;; Defined at:
 23127 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 23128 ;; Parameters:    Size  Location     Type
 23129 ;;  idx             1    wreg     enum E12583
 23130 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 23131 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F1227(1), wr2RegCompleteHandler@i2c1_master_example$F1216(1), wr1Reg
      +CompleteHandler@i2c1_master_example$F1210(1), rd2RegCompleteHandler@i2c1_master_example$F1204(1), 
 23132 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F1193(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2Reg
      +CompleteHandler(1), 
 23133 ;;		 -> rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), NULL(1), 
 23134 ;;  ptr             1    3[COMMON] PTR void 
 23135 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 23136 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 23137 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23138 ;; Auto vars:     Size  Location     Type
 23139 ;;  idx             1    4[COMMON] enum E12583
 23140 ;; Return value:  Size  Location     Type
 23141 ;;                  1    wreg      void 
 23142 ;; Registers used:
 23143 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23144 ;; Tracked objects:
 23145 ;;		On entry : 0/0
 23146 ;;		On exit  : 0/0
 23147 ;;		Unchanged: 0/0
 23148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23149 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23153 ;;Total ram usage:        4 bytes
 23154 ;; Hardware stack levels used: 1
 23155 ;; Hardware stack levels required when called: 4
 23156 ;; This function calls:
 23157 ;;		Nothing
 23158 ;; This function is called by:
 23159 ;;		_I2C1_SetDataCompleteCallback
 23160 ;;		_I2C1_SetAddressNackCallback
 23161 ;;		_I2C1_SetWriteCollisionCallback
 23162 ;;		_I2C1_SetDataNackCallback
 23163 ;;		_I2C1_SetTimeoutCallback
 23164 ;; This function uses a non-reentrant model
 23165 ;;
 23166                           
 23167     0B41                     _I2C1_SetCallback:	
 23168                           ;psect for function _I2C1_SetCallback
 23169                           
 23170                           
 23171                           ;incstack = 0
 23172                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 23173                           ;I2C1_SetCallback@idx stored from wreg
 23174     0B41  00F4               	movwf	I2C1_SetCallback@idx
 23175     0B42                     l7675:
 23176                           
 23177                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 23178     0B42  0871               	movf	I2C1_SetCallback@cb,w
 23179     0B43  0472               	iorwf	I2C1_SetCallback@cb+1,w
 23180     0B44  1903               	btfsc	3,2
 23181     0B45  2B47               	goto	u3961
 23182     0B46  2B48               	goto	u3960
 23183     0B47                     u3961:
 23184     0B47  2B57               	goto	l7679
 23185     0B48                     u3960:
 23186     0B48                     l7677:
 23187                           
 23188                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 23189     0B48  3574               	lslf	I2C1_SetCallback@idx,w
 23190     0B49  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 23191     0B4A  0086               	movwf	6
 23192     0B4B  0187               	clrf	7
 23193     0B4C  0871               	movf	I2C1_SetCallback@cb,w
 23194     0B4D  3FC0               	movwi [0]fsr1
 23195     0B4E  0872               	movf	I2C1_SetCallback@cb+1,w
 23196     0B4F  3FC1               	movwi [1]fsr1
 23197                           
 23198                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 23199     0B50  0874               	movf	I2C1_SetCallback@idx,w
 23200     0B51  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 23201     0B52  0086               	movwf	6
 23202     0B53  0187               	clrf	7
 23203     0B54  0873               	movf	I2C1_SetCallback@ptr,w
 23204     0B55  0081               	movwf	1
 23205                           
 23206                           ;mcc_generated_files/i2c1_master.c: 304:     }
 23207     0B56  2B64               	goto	l1786
 23208     0B57                     l7679:
 23209                           
 23210                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 23211     0B57  3574               	lslf	I2C1_SetCallback@idx,w
 23212     0B58  3EA0               	addlw	(low (_I2C1_Status| 0))& (0+255)
 23213     0B59  0086               	movwf	6
 23214     0B5A  0187               	clrf	7
 23215     0B5B  302F               	movlw	low _I2C1_CallbackReturnStop
 23216     0B5C  3FC0               	movwi [0]fsr1
 23217     0B5D  3016               	movlw	high _I2C1_CallbackReturnStop
 23218     0B5E  3FC1               	movwi [1]fsr1
 23219                           
 23220                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 23221     0B5F  0874               	movf	I2C1_SetCallback@idx,w
 23222     0B60  3EAC               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 23223     0B61  0086               	movwf	6
 23224     0B62  0187               	clrf	7
 23225     0B63  0181               	clrf	1
 23226     0B64                     l1786:
 23227     0B64  0008               	return
 23228     0B65                     __end_of_I2C1_SetCallback:
 23229                           
 23230                           	psect	text133
 23231     17F2                     __ptext133:	
 23232 ;; *************** function _I2C1_SetBuffer *****************
 23233 ;; Defined at:
 23234 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 23235 ;; Parameters:    Size  Location     Type
 23236 ;;  buffer          1    wreg     PTR void 
 23237 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 23238 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 23239 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1
      +), 
 23240 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 23241 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(1), 
 23242 ;;		 -> i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), 
 23243 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 23244 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23245 ;;  bufferSize      2    1[COMMON] unsigned int 
 23246 ;; Auto vars:     Size  Location     Type
 23247 ;;  buffer          1    3[COMMON] PTR void 
 23248 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 23249 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 23250 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1
      +), 
 23251 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 23252 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(1), 
 23253 ;;		 -> i2c_readDataBlock@d(4), d$data(2), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), 
 23254 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 23255 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23256 ;; Return value:  Size  Location     Type
 23257 ;;                  1    wreg      void 
 23258 ;; Registers used:
 23259 ;;		wreg
 23260 ;; Tracked objects:
 23261 ;;		On entry : 0/0
 23262 ;;		On exit  : 0/0
 23263 ;;		Unchanged: 0/0
 23264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23268 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23269 ;;Total ram usage:        3 bytes
 23270 ;; Hardware stack levels used: 1
 23271 ;; Hardware stack levels required when called: 4
 23272 ;; This function calls:
 23273 ;;		Nothing
 23274 ;; This function is called by:
 23275 ;;		_wr1RegCompleteHandler
 23276 ;;		_rd1RegCompleteHandler
 23277 ;;		_i2c_read1ByteRegister
 23278 ;;		_rd2RegCompleteHandler
 23279 ;;		_i2c_read2ByteRegister
 23280 ;;		_wr2RegCompleteHandler
 23281 ;;		_rdBlkRegCompleteHandler
 23282 ;;		_rd1RegCompleteHandler@i2c1_master_example$F1193
 23283 ;;		_rd2RegCompleteHandler@i2c1_master_example$F1204
 23284 ;;		_wr1RegCompleteHandler@i2c1_master_example$F1210
 23285 ;;		_wr2RegCompleteHandler@i2c1_master_example$F1216
 23286 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F1227
 23287 ;;		_i2c_write1ByteRegister
 23288 ;;		_i2c_writeNBytes
 23289 ;;		_i2c_write2ByteRegister
 23290 ;;		_i2c_readDataBlock
 23291 ;;		_i2c_readNBytes
 23292 ;;		_I2C1_Read1ByteRegister
 23293 ;;		_I2C1_Read2ByteRegister
 23294 ;;		_I2C1_Write1ByteRegister
 23295 ;;		_I2C1_Write2ByteRegister
 23296 ;;		_I2C1_WriteNBytes
 23297 ;;		_I2C1_ReadNBytes
 23298 ;;		_I2C1_ReadDataBlock
 23299 ;; This function uses a non-reentrant model
 23300 ;;
 23301                           
 23302     17F2                     _I2C1_SetBuffer:	
 23303                           ;psect for function _I2C1_SetBuffer
 23304                           
 23305                           
 23306                           ;incstack = 0
 23307                           ; Regs used in _I2C1_SetBuffer: [wreg]
 23308                           ;I2C1_SetBuffer@buffer stored from wreg
 23309     17F2  00F3               	movwf	I2C1_SetBuffer@buffer
 23310     17F3                     l7681:
 23311                           
 23312                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 23313     17F3  0141               	movlb	1	; select bank1
 23314     17F4  1DBC               	btfss	(_I2C1_Status^(0+128)+28),3
 23315     17F5  2FF7               	goto	u3971
 23316     17F6  2FF8               	goto	u3970
 23317     17F7                     u3971:
 23318     17F7  2FFF               	goto	l1766
 23319     17F8                     u3970:
 23320     17F8                     l7683:
 23321                           
 23322                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 23323     17F8  0873               	movf	I2C1_SetBuffer@buffer,w
 23324     17F9  00B7               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 23325                           
 23326                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 23327     17FA  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 23328     17FB  00B9               	movwf	((_I2C1_Status+1)^(0+128)+24)
 23329     17FC  0871               	movf	I2C1_SetBuffer@bufferSize,w
 23330     17FD  00B8               	movwf	(_I2C1_Status^(0+128)+24)
 23331     17FE                     l7685:
 23332                           
 23333                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 23334     17FE  11BC               	bcf	(_I2C1_Status^(0+128)+28),3
 23335     17FF                     l1766:
 23336     17FF  0008               	return
 23337     1800                     __end_of_I2C1_SetBuffer:
 23338                           
 23339                           	psect	text134
 23340     1642                     __ptext134:	
 23341 ;; *************** function _I2C1_MasterStop *****************
 23342 ;; Defined at:
 23343 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;		None
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;		None
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  1    wreg      void 
 23350 ;; Registers used:
 23351 ;;		None
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/0
 23354 ;;		On exit  : 0/0
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23361 ;;Total ram usage:        0 bytes
 23362 ;; Hardware stack levels used: 1
 23363 ;; Hardware stack levels required when called: 4
 23364 ;; This function calls:
 23365 ;;		Nothing
 23366 ;; This function is called by:
 23367 ;;		_I2C1_DO_SEND_STOP
 23368 ;; This function uses a non-reentrant model
 23369 ;;
 23370                           
 23371     1642                     _I2C1_MasterStop:	
 23372                           ;psect for function _I2C1_MasterStop
 23373                           
 23374     1642                     l7691:	
 23375                           ;incstack = 0
 23376                           ; Regs used in _I2C1_MasterStop: []
 23377                           
 23378                           
 23379                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 23380     1642  0143               	movlb	3	; select bank3
 23381     1643  1511               	bsf	17,2	;volatile
 23382     1644                     l1932:
 23383     1644  0008               	return
 23384     1645                     __end_of_I2C1_MasterStop:
 23385                           
 23386                           	psect	text135
 23387     163F                     __ptext135:	
 23388 ;; *************** function _I2C1_MasterEnableRestart *****************
 23389 ;; Defined at:
 23390 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 23391 ;; Parameters:    Size  Location     Type
 23392 ;;		None
 23393 ;; Auto vars:     Size  Location     Type
 23394 ;;		None
 23395 ;; Return value:  Size  Location     Type
 23396 ;;                  1    wreg      void 
 23397 ;; Registers used:
 23398 ;;		None
 23399 ;; Tracked objects:
 23400 ;;		On entry : 0/0
 23401 ;;		On exit  : 0/0
 23402 ;;		Unchanged: 0/0
 23403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23408 ;;Total ram usage:        0 bytes
 23409 ;; Hardware stack levels used: 1
 23410 ;; Hardware stack levels required when called: 4
 23411 ;; This function calls:
 23412 ;;		Nothing
 23413 ;; This function is called by:
 23414 ;;		_I2C1_DO_SEND_RESTART_READ
 23415 ;;		_I2C1_DO_SEND_RESTART_WRITE
 23416 ;;		_I2C1_DO_SEND_RESTART
 23417 ;;		_I2C1_DO_RX_EMPTY
 23418 ;; This function uses a non-reentrant model
 23419 ;;
 23420                           
 23421     163F                     _I2C1_MasterEnableRestart:	
 23422                           ;psect for function _I2C1_MasterEnableRestart
 23423                           
 23424     163F                     l7689:	
 23425                           ;incstack = 0
 23426                           ; Regs used in _I2C1_MasterEnableRestart: []
 23427                           
 23428                           
 23429                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 23430     163F  0143               	movlb	3	; select bank3
 23431     1640  1491               	bsf	17,1	;volatile
 23432     1641                     l1920:
 23433     1641  0008               	return
 23434     1642                     __end_of_I2C1_MasterEnableRestart:
 23435                           
 23436                           	psect	text136
 23437     163C                     __ptext136:	
 23438 ;; *************** function _I2C1_MasterStart *****************
 23439 ;; Defined at:
 23440 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 23441 ;; Parameters:    Size  Location     Type
 23442 ;;		None
 23443 ;; Auto vars:     Size  Location     Type
 23444 ;;		None
 23445 ;; Return value:  Size  Location     Type
 23446 ;;                  1    wreg      void 
 23447 ;; Registers used:
 23448 ;;		None
 23449 ;; Tracked objects:
 23450 ;;		On entry : 0/0
 23451 ;;		On exit  : 0/0
 23452 ;;		Unchanged: 0/0
 23453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23458 ;;Total ram usage:        0 bytes
 23459 ;; Hardware stack levels used: 1
 23460 ;; Hardware stack levels required when called: 4
 23461 ;; This function calls:
 23462 ;;		Nothing
 23463 ;; This function is called by:
 23464 ;;		_I2C1_MasterOperation
 23465 ;; This function uses a non-reentrant model
 23466 ;;
 23467                           
 23468     163C                     _I2C1_MasterStart:	
 23469                           ;psect for function _I2C1_MasterStart
 23470                           
 23471     163C                     l8093:	
 23472                           ;incstack = 0
 23473                           ; Regs used in _I2C1_MasterStart: []
 23474                           
 23475                           
 23476                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 23477     163C  0143               	movlb	3	; select bank3
 23478     163D  1411               	bsf	17,0	;volatile
 23479     163E                     l1929:
 23480     163E  0008               	return
 23481     163F                     __end_of_I2C1_MasterStart:
 23482                           
 23483                           	psect	text137
 23484     099C                     __ptext137:	
 23485 ;; *************** function _I2C1_Close *****************
 23486 ;; Defined at:
 23487 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 23488 ;; Parameters:    Size  Location     Type
 23489 ;;		None
 23490 ;; Auto vars:     Size  Location     Type
 23491 ;;  returnValue     1    1[COMMON] enum E358
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  1    wreg      enum E358
 23494 ;; Registers used:
 23495 ;;		wreg, status,2, status,0, pclath, cstack
 23496 ;; Tracked objects:
 23497 ;;		On entry : 0/0
 23498 ;;		On exit  : 0/0
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23505 ;;Total ram usage:        1 bytes
 23506 ;; Hardware stack levels used: 1
 23507 ;; Hardware stack levels required when called: 5
 23508 ;; This function calls:
 23509 ;;		_I2C1_MasterClearIrq
 23510 ;;		_I2C1_MasterClose
 23511 ;;		_I2C1_MasterDisableIrq
 23512 ;; This function is called by:
 23513 ;;		_i2c_read1ByteRegister
 23514 ;;		_i2c_read2ByteRegister
 23515 ;;		_i2c_write1ByteRegister
 23516 ;;		_i2c_writeNBytes
 23517 ;;		_i2c_write2ByteRegister
 23518 ;;		_i2c_readDataBlock
 23519 ;;		_i2c_readNBytes
 23520 ;;		_I2C1_Read1ByteRegister
 23521 ;;		_I2C1_Read2ByteRegister
 23522 ;;		_I2C1_Write1ByteRegister
 23523 ;;		_I2C1_Write2ByteRegister
 23524 ;;		_I2C1_WriteNBytes
 23525 ;;		_I2C1_ReadNBytes
 23526 ;;		_I2C1_ReadDataBlock
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530     099C                     _I2C1_Close:	
 23531                           ;psect for function _I2C1_Close
 23532                           
 23533     099C                     l8197:	
 23534                           ;incstack = 0
 23535                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 23536                           
 23537                           
 23538                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 23539     099C  01F1               	clrf	I2C1_Close@returnValue
 23540     099D  0AF1               	incf	I2C1_Close@returnValue,f
 23541                           
 23542                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 23543     099E  0141               	movlb	1	; select bank1
 23544     099F  18BC               	btfsc	(_I2C1_Status^(0+128)+28),1
 23545     09A0  29A2               	goto	u4201
 23546     09A1  29A3               	goto	u4200
 23547     09A2                     u4201:
 23548     09A2  29B2               	goto	l8211
 23549     09A3                     u4200:
 23550     09A3                     l8199:
 23551                           
 23552                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 23553     09A3  113C               	bcf	(_I2C1_Status^(0+128)+28),2
 23554     09A4                     l8201:
 23555                           
 23556                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 23557     09A4  30FF               	movlw	255
 23558     09A5  00B6               	movwf	(_I2C1_Status^(0+128)+22)
 23559     09A6                     l8203:
 23560                           
 23561                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 23562     09A6  3196  2633  3189   	fcall	_I2C1_MasterClearIrq
 23563     09A9                     l8205:
 23564                           
 23565                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 23566     09A9  3196  2639  3189   	fcall	_I2C1_MasterDisableIrq
 23567     09AC                     l8207:
 23568                           
 23569                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 23570     09AC  3196  2636  3189   	fcall	_I2C1_MasterClose
 23571     09AF                     l8209:
 23572                           
 23573                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 23574     09AF  0141               	movlb	1	; select bank1
 23575     09B0  083B               	movf	(_I2C1_Status^(0+128)+27),w
 23576     09B1  00F1               	movwf	I2C1_Close@returnValue
 23577     09B2                     l8211:
 23578                           
 23579                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 23580     09B2  0871               	movf	I2C1_Close@returnValue,w
 23581     09B3                     l1747:
 23582     09B3  0008               	return
 23583     09B4                     __end_of_I2C1_Close:
 23584                           
 23585                           	psect	text138
 23586     1639                     __ptext138:	
 23587 ;; *************** function _I2C1_MasterDisableIrq *****************
 23588 ;; Defined at:
 23589 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 23590 ;; Parameters:    Size  Location     Type
 23591 ;;		None
 23592 ;; Auto vars:     Size  Location     Type
 23593 ;;		None
 23594 ;; Return value:  Size  Location     Type
 23595 ;;                  1    wreg      void 
 23596 ;; Registers used:
 23597 ;;		None
 23598 ;; Tracked objects:
 23599 ;;		On entry : 0/0
 23600 ;;		On exit  : 0/0
 23601 ;;		Unchanged: 0/0
 23602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23607 ;;Total ram usage:        0 bytes
 23608 ;; Hardware stack levels used: 1
 23609 ;; Hardware stack levels required when called: 4
 23610 ;; This function calls:
 23611 ;;		Nothing
 23612 ;; This function is called by:
 23613 ;;		_I2C1_Close
 23614 ;;		_I2C1_SetTimeOut
 23615 ;; This function uses a non-reentrant model
 23616 ;;
 23617                           
 23618     1639                     _I2C1_MasterDisableIrq:	
 23619                           ;psect for function _I2C1_MasterDisableIrq
 23620                           
 23621     1639                     l8125:	
 23622                           ;incstack = 0
 23623                           ; Regs used in _I2C1_MasterDisableIrq: []
 23624                           
 23625                           
 23626                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 23627     1639  014E               	movlb	14	; select bank14
 23628     163A  1019               	bcf	25,0	;volatile
 23629     163B                     l1956:
 23630     163B  0008               	return
 23631     163C                     __end_of_I2C1_MasterDisableIrq:
 23632                           
 23633                           	psect	text139
 23634     1636                     __ptext139:	
 23635 ;; *************** function _I2C1_MasterClose *****************
 23636 ;; Defined at:
 23637 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 23638 ;; Parameters:    Size  Location     Type
 23639 ;;		None
 23640 ;; Auto vars:     Size  Location     Type
 23641 ;;		None
 23642 ;; Return value:  Size  Location     Type
 23643 ;;                  1    wreg      void 
 23644 ;; Registers used:
 23645 ;;		None
 23646 ;; Tracked objects:
 23647 ;;		On entry : 0/0
 23648 ;;		On exit  : 0/0
 23649 ;;		Unchanged: 0/0
 23650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23655 ;;Total ram usage:        0 bytes
 23656 ;; Hardware stack levels used: 1
 23657 ;; Hardware stack levels required when called: 4
 23658 ;; This function calls:
 23659 ;;		Nothing
 23660 ;; This function is called by:
 23661 ;;		_I2C1_Close
 23662 ;; This function uses a non-reentrant model
 23663 ;;
 23664                           
 23665     1636                     _I2C1_MasterClose:	
 23666                           ;psect for function _I2C1_MasterClose
 23667                           
 23668     1636                     l8127:	
 23669                           ;incstack = 0
 23670                           ; Regs used in _I2C1_MasterClose: []
 23671                           
 23672                           
 23673                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 23674     1636  0143               	movlb	3	; select bank3
 23675     1637  1290               	bcf	16,5	;volatile
 23676     1638                     l1911:
 23677     1638  0008               	return
 23678     1639                     __end_of_I2C1_MasterClose:
 23679                           
 23680                           	psect	text140
 23681     1633                     __ptext140:	
 23682 ;; *************** function _I2C1_MasterClearIrq *****************
 23683 ;; Defined at:
 23684 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 23685 ;; Parameters:    Size  Location     Type
 23686 ;;		None
 23687 ;; Auto vars:     Size  Location     Type
 23688 ;;		None
 23689 ;; Return value:  Size  Location     Type
 23690 ;;                  1    wreg      void 
 23691 ;; Registers used:
 23692 ;;		None
 23693 ;; Tracked objects:
 23694 ;;		On entry : 0/0
 23695 ;;		On exit  : 0/0
 23696 ;;		Unchanged: 0/0
 23697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23702 ;;Total ram usage:        0 bytes
 23703 ;; Hardware stack levels used: 1
 23704 ;; Hardware stack levels required when called: 4
 23705 ;; This function calls:
 23706 ;;		Nothing
 23707 ;; This function is called by:
 23708 ;;		_I2C1_Open
 23709 ;;		_I2C1_Close
 23710 ;;		_I2C1_MasterFsm
 23711 ;; This function uses a non-reentrant model
 23712 ;;
 23713                           
 23714     1633                     _I2C1_MasterClearIrq:	
 23715                           ;psect for function _I2C1_MasterClearIrq
 23716                           
 23717     1633                     l7831:	
 23718                           ;incstack = 0
 23719                           ; Regs used in _I2C1_MasterClearIrq: []
 23720                           
 23721                           
 23722                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 23723     1633  014E               	movlb	14	; select bank14
 23724     1634  100F               	bcf	15,0	;volatile
 23725     1635                     l1959:
 23726     1635  0008               	return
 23727     1636                     __end_of_I2C1_MasterClearIrq:
 23728                           
 23729                           	psect	intentry
 23730     0004                     __pintentry:	
 23731 ;; *************** function _INTERRUPT_InterruptManager *****************
 23732 ;; Defined at:
 23733 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23734 ;; Parameters:    Size  Location     Type
 23735 ;;		None
 23736 ;; Auto vars:     Size  Location     Type
 23737 ;;		None
 23738 ;; Return value:  Size  Location     Type
 23739 ;;                  1    wreg      void 
 23740 ;; Registers used:
 23741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23742 ;; Tracked objects:
 23743 ;;		On entry : 0/0
 23744 ;;		On exit  : 0/0
 23745 ;;		Unchanged: 0/0
 23746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23751 ;;Total ram usage:        0 bytes
 23752 ;; Hardware stack levels used: 1
 23753 ;; Hardware stack levels required when called: 3
 23754 ;; This function calls:
 23755 ;;		NULL
 23756 ;;		_EUSART1_Receive_ISR
 23757 ;;		_EUSART1_Transmit_ISR
 23758 ;;		_EUSART2_Receive_ISR
 23759 ;;		_EUSART2_Transmit_ISR
 23760 ;;		_PIN_MANAGER_IOC
 23761 ;; This function is called by:
 23762 ;;		Interrupt level 1
 23763 ;; This function uses a non-reentrant model
 23764 ;;
 23765                           
 23766     0004                     _INTERRUPT_InterruptManager:
 23767                           
 23768                           ;incstack = 0
 23769 ;; hardware stack exceeded
 23770     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 23771                           
 23772                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 23773     0005  3180               	pagesel	$
 23774     0006                     i1l9467:
 23775                           
 23776                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 23777     0006  014E               	movlb	14	; select bank14
 23778     0007  1E16               	btfss	22,4	;volatile
 23779     0008  280A               	goto	u555_21
 23780     0009  280B               	goto	u555_20
 23781     000A                     u555_21:
 23782     000A  2813               	goto	i1l1292
 23783     000B                     u555_20:
 23784     000B                     i1l9469:
 23785     000B  1E0C               	btfss	12,4	;volatile
 23786     000C  280E               	goto	u556_21
 23787     000D  280F               	goto	u556_20
 23788     000E                     u556_21:
 23789     000E  2813               	goto	i1l1292
 23790     000F                     u556_20:
 23791     000F                     i1l9471:
 23792                           
 23793                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 23794     000F  3197  2735  3180   	fcall	_PIN_MANAGER_IOC
 23795                           
 23796                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 23797     0012  2853               	goto	i1l1304
 23798     0013                     i1l1292:	
 23799                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 23800                           
 23801     0013  1F0B               	btfss	11,6	;volatile
 23802     0014  2816               	goto	u557_21
 23803     0015  2817               	goto	u557_20
 23804     0016                     u557_21:
 23805     0016  2853               	goto	i1l1304
 23806     0017                     u557_20:
 23807     0017                     i1l9473:
 23808                           
 23809                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 23810     0017  1F19               	btfss	25,6	;volatile
 23811     0018  281A               	goto	u558_21
 23812     0019  281B               	goto	u558_20
 23813     001A                     u558_21:
 23814     001A  2826               	goto	i1l1295
 23815     001B                     u558_20:
 23816     001B                     i1l9475:
 23817     001B  1F0F               	btfss	15,6	;volatile
 23818     001C  281E               	goto	u559_21
 23819     001D  281F               	goto	u559_20
 23820     001E                     u559_21:
 23821     001E  2826               	goto	i1l1295
 23822     001F                     u559_20:
 23823     001F                     i1l9477:
 23824                           
 23825                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART2_TxDefaultInterruptHandler();
 23826     001F  0141               	movlb	1	; select bank1
 23827     0020  086E               	movf	(_EUSART2_TxDefaultInterruptHandler+1)^(0+128),w
 23828     0021  008A               	movwf	10
 23829     0022  086D               	movf	_EUSART2_TxDefaultInterruptHandler^(0+128),w
 23830     0023  000A               	callw
 23831     0024  3180               	pagesel	$
 23832                           
 23833                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 23834     0025  2853               	goto	i1l1304
 23835     0026                     i1l1295:	
 23836                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.RC2IE == 1 && PIR
      +                          3bits.RC2IF == 1)
 23837                           
 23838     0026  1F99               	btfss	25,7	;volatile
 23839     0027  2829               	goto	u560_21
 23840     0028  282A               	goto	u560_20
 23841     0029                     u560_21:
 23842     0029  2835               	goto	i1l1297
 23843     002A                     u560_20:
 23844     002A                     i1l9479:
 23845     002A  1F8F               	btfss	15,7	;volatile
 23846     002B  282D               	goto	u561_21
 23847     002C  282E               	goto	u561_20
 23848     002D                     u561_21:
 23849     002D  2835               	goto	i1l1297
 23850     002E                     u561_20:
 23851     002E                     i1l9481:
 23852                           
 23853                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART2_RxDefaultInterruptHandler();
 23854     002E  0142               	movlb	2	; select bank2
 23855     002F  0855               	movf	(_EUSART2_RxDefaultInterruptHandler+1)^(0+256),w
 23856     0030  008A               	movwf	10
 23857     0031  0854               	movf	_EUSART2_RxDefaultInterruptHandler^(0+256),w
 23858     0032  000A               	callw
 23859     0033  3180               	pagesel	$
 23860                           
 23861                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 23862     0034  2853               	goto	i1l1304
 23863     0035                     i1l1297:	
 23864                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 23865                           
 23866     0035  1E19               	btfss	25,4	;volatile
 23867     0036  2838               	goto	u562_21
 23868     0037  2839               	goto	u562_20
 23869     0038                     u562_21:
 23870     0038  2844               	goto	i1l1299
 23871     0039                     u562_20:
 23872     0039                     i1l9483:
 23873     0039  1E0F               	btfss	15,4	;volatile
 23874     003A  283C               	goto	u563_21
 23875     003B  283D               	goto	u563_20
 23876     003C                     u563_21:
 23877     003C  2844               	goto	i1l1299
 23878     003D                     u563_20:
 23879     003D                     i1l9485:
 23880                           
 23881                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 23882     003D  0142               	movlb	2	; select bank2
 23883     003E  084D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 23884     003F  008A               	movwf	10
 23885     0040  084C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 23886     0041  000A               	callw
 23887     0042  3180               	pagesel	$
 23888                           
 23889                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 23890     0043  2853               	goto	i1l1304
 23891     0044                     i1l1299:	
 23892                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 23893                           
 23894     0044  1E99               	btfss	25,5	;volatile
 23895     0045  2847               	goto	u564_21
 23896     0046  2848               	goto	u564_20
 23897     0047                     u564_21:
 23898     0047  2853               	goto	i1l1298
 23899     0048                     u564_20:
 23900     0048                     i1l9487:
 23901     0048  1E8F               	btfss	15,5	;volatile
 23902     0049  284B               	goto	u565_21
 23903     004A  284C               	goto	u565_20
 23904     004B                     u565_21:
 23905     004B  2853               	goto	i1l1298
 23906     004C                     u565_20:
 23907     004C                     i1l9489:
 23908                           
 23909                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 23910     004C  0142               	movlb	2	; select bank2
 23911     004D  084B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 23912     004E  008A               	movwf	10
 23913     004F  084A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 23914     0050  000A               	callw
 23915     0051  3180               	pagesel	$
 23916                           
 23917                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 23918     0052  2853               	goto	i1l1304
 23919     0053                     i1l1298:
 23920     0053                     i1l1304:
 23921     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 23922     0054  0009               	retfie
 23923     0055                     __end_of_INTERRUPT_InterruptManager:
 23924                           
 23925                           	psect	text142
 23926     1735                     __ptext142:	
 23927 ;; *************** function _PIN_MANAGER_IOC *****************
 23928 ;; Defined at:
 23929 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 23930 ;; Parameters:    Size  Location     Type
 23931 ;;		None
 23932 ;; Auto vars:     Size  Location     Type
 23933 ;;		None
 23934 ;; Return value:  Size  Location     Type
 23935 ;;                  1    wreg      void 
 23936 ;; Registers used:
 23937 ;;		wreg, status,2, status,0, pclath, cstack
 23938 ;; Tracked objects:
 23939 ;;		On entry : 0/0
 23940 ;;		On exit  : 0/0
 23941 ;;		Unchanged: 0/0
 23942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23947 ;;Total ram usage:        0 bytes
 23948 ;; Hardware stack levels used: 1
 23949 ;; Hardware stack levels required when called: 2
 23950 ;; This function calls:
 23951 ;;		_IOCAF6_ISR
 23952 ;; This function is called by:
 23953 ;;		_INTERRUPT_InterruptManager
 23954 ;; This function uses a non-reentrant model
 23955 ;;
 23956                           
 23957     1735                     _PIN_MANAGER_IOC:	
 23958                           ;psect for function _PIN_MANAGER_IOC
 23959                           
 23960     1735                     i1l9151:	
 23961                           ;incstack = 0
 23962 ;; hardware stack exceeded
 23963                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 23964                           
 23965                           
 23966                           ;mcc_generated_files/pin_manager.c: 145:     if(IOCAFbits.IOCAF6 == 1)
 23967     1735  017E               	movlb	62	; select bank62
 23968     1736  1F3F               	btfss	63,6	;volatile
 23969     1737  2F39               	goto	u519_21
 23970     1738  2F3A               	goto	u519_20
 23971     1739                     u519_21:
 23972     1739  2F3D               	goto	i1l1444
 23973     173A                     u519_20:
 23974     173A                     i1l9153:
 23975                           
 23976                           ;mcc_generated_files/pin_manager.c: 146:     {;mcc_generated_files/pin_manager.c: 147:  
      +                                 IOCAF6_ISR();
 23977     173A  3188  201A  3197   	fcall	_IOCAF6_ISR
 23978     173D                     i1l1444:
 23979     173D  0008               	return
 23980     173E                     __end_of_PIN_MANAGER_IOC:
 23981                           
 23982                           	psect	text143
 23983     081A                     __ptext143:	
 23984 ;; *************** function _IOCAF6_ISR *****************
 23985 ;; Defined at:
 23986 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
 23987 ;; Parameters:    Size  Location     Type
 23988 ;;		None
 23989 ;; Auto vars:     Size  Location     Type
 23990 ;;		None
 23991 ;; Return value:  Size  Location     Type
 23992 ;;                  1    wreg      void 
 23993 ;; Registers used:
 23994 ;;		wreg, status,2, status,0, pclath, cstack
 23995 ;; Tracked objects:
 23996 ;;		On entry : 0/0
 23997 ;;		On exit  : 0/0
 23998 ;;		Unchanged: 0/0
 23999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24004 ;;Total ram usage:        0 bytes
 24005 ;; Hardware stack levels used: 1
 24006 ;; Hardware stack levels required when called: 1
 24007 ;; This function calls:
 24008 ;;		NULL
 24009 ;;		_IOCAF6_DefaultInterruptHandler
 24010 ;; This function is called by:
 24011 ;;		_PIN_MANAGER_IOC
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015     081A                     _IOCAF6_ISR:	
 24016                           ;psect for function _IOCAF6_ISR
 24017                           
 24018     081A                     i1l8897:	
 24019                           ;incstack = 0
 24020 ;; hardware stack exceeded
 24021                           ; Regs used in _IOCAF6_ISR: [wreg+status,2+status,0+pclath+cstack]
 24022                           
 24023                           
 24024                           ;mcc_generated_files/pin_manager.c: 159:     if(IOCAF6_InterruptHandler)
 24025     081A  0140               	movlb	0	; select bank0
 24026     081B  086C               	movf	_IOCAF6_InterruptHandler,w
 24027     081C  046D               	iorwf	_IOCAF6_InterruptHandler+1,w
 24028     081D  1903               	btfsc	3,2
 24029     081E  2820               	goto	u492_21
 24030     081F  2821               	goto	u492_20
 24031     0820                     u492_21:
 24032     0820  2826               	goto	i1l8901
 24033     0821                     u492_20:
 24034     0821                     i1l8899:
 24035                           
 24036                           ;mcc_generated_files/pin_manager.c: 160:     {;mcc_generated_files/pin_manager.c: 161:  
      +                                 IOCAF6_InterruptHandler();
 24037     0821  086D               	movf	_IOCAF6_InterruptHandler+1,w
 24038     0822  008A               	movwf	10
 24039     0823  086C               	movf	_IOCAF6_InterruptHandler,w
 24040     0824  000A               	callw
 24041     0825  3188               	pagesel	$
 24042     0826                     i1l8901:
 24043                           
 24044                           ;mcc_generated_files/pin_manager.c: 163:     IOCAFbits.IOCAF6 = 0;
 24045     0826  017E               	movlb	62	; select bank62
 24046     0827  133F               	bcf	63,6	;volatile
 24047     0828                     i1l1448:
 24048     0828  0008               	return
 24049     0829                     __end_of_IOCAF6_ISR:
 24050                           
 24051                           	psect	text144
 24052     162E                     __ptext144:	
 24053 ;; *************** function _IOCAF6_DefaultInterruptHandler *****************
 24054 ;; Defined at:
 24055 ;;		line 176 in file "mcc_generated_files/pin_manager.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;		None
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;		None
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      void 
 24062 ;; Registers used:
 24063 ;;		None
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        0 bytes
 24074 ;; Hardware stack levels used: 1
 24075 ;; This function calls:
 24076 ;;		Nothing
 24077 ;; This function is called by:
 24078 ;;		_PIN_MANAGER_Initialize
 24079 ;;		_IOCAF6_ISR
 24080 ;; This function uses a non-reentrant model
 24081 ;;
 24082                           
 24083     162E                     _IOCAF6_DefaultInterruptHandler:	
 24084                           ;psect for function _IOCAF6_DefaultInterruptHandler
 24085                           
 24086     162E                     i1l1454:	
 24087                           ;incstack = 0
 24088 ;; hardware stack exceeded
 24089                           ; Regs used in _IOCAF6_DefaultInterruptHandler: []
 24090                           
 24091     162E  0008               	return
 24092     162F                     __end_of_IOCAF6_DefaultInterruptHandler:
 24093                           
 24094                           	psect	text145
 24095     0AFC                     __ptext145:	
 24096 ;; *************** function _EUSART1_Transmit_ISR *****************
 24097 ;; Defined at:
 24098 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 24099 ;; Parameters:    Size  Location     Type
 24100 ;;		None
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;		None
 24103 ;; Return value:  Size  Location     Type
 24104 ;;                  1    wreg      void 
 24105 ;; Registers used:
 24106 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 0/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24116 ;;Total ram usage:        1 bytes
 24117 ;; Hardware stack levels used: 1
 24118 ;; This function calls:
 24119 ;;		Nothing
 24120 ;; This function is called by:
 24121 ;;		_EUSART1_Initialize
 24122 ;;		_INTERRUPT_InterruptManager
 24123 ;; This function uses a non-reentrant model
 24124 ;;
 24125                           
 24126     0AFC                     _EUSART1_Transmit_ISR:	
 24127                           ;psect for function _EUSART1_Transmit_ISR
 24128                           
 24129     0AFC                     i1l9119:	
 24130                           ;incstack = 0
 24131                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24132                           
 24133                           
 24134                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 24135     0AFC  3008               	movlw	8
 24136     0AFD  0140               	movlb	0	; select bank0
 24137     0AFE  025A               	subwf	_eusart1TxBufferRemaining,w	;volatile
 24138     0AFF  1803               	skipnc
 24139     0B00  2B02               	goto	u514_21
 24140     0B01  2B03               	goto	u514_20
 24141     0B02                     u514_21:
 24142     0B02  2B1B               	goto	i1l1229
 24143     0B03                     u514_20:
 24144     0B03                     i1l9121:
 24145                           
 24146                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 24147     0B03  085B               	movf	_eusart1TxTail,w
 24148     0B04  3ECD               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 24149     0B05  0086               	movwf	6
 24150     0B06  0187               	clrf	7
 24151     0B07  0801               	movf	1,w
 24152     0B08  0142               	movlb	2	; select bank2
 24153     0B09  009A               	movwf	26	;volatile
 24154     0B0A                     i1l9123:
 24155     0B0A  3001               	movlw	1
 24156     0B0B  00F0               	movwf	??_EUSART1_Transmit_ISR
 24157     0B0C  0870               	movf	??_EUSART1_Transmit_ISR,w
 24158     0B0D  0140               	movlb	0	; select bank0
 24159     0B0E  07DB               	addwf	_eusart1TxTail,f	;volatile
 24160     0B0F                     i1l9125:
 24161                           
 24162                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 24163     0B0F  3008               	movlw	8
 24164     0B10  025B               	subwf	_eusart1TxTail,w	;volatile
 24165     0B11  1C03               	skipc
 24166     0B12  2B14               	goto	u515_21
 24167     0B13  2B15               	goto	u515_20
 24168     0B14                     u515_21:
 24169     0B14  2B16               	goto	i1l9129
 24170     0B15                     u515_20:
 24171     0B15                     i1l9127:
 24172                           
 24173                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 24174     0B15  01DB               	clrf	_eusart1TxTail	;volatile
 24175     0B16                     i1l9129:
 24176                           
 24177                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 24178     0B16  3001               	movlw	1
 24179     0B17  00F0               	movwf	??_EUSART1_Transmit_ISR
 24180     0B18  0870               	movf	??_EUSART1_Transmit_ISR,w
 24181     0B19  07DA               	addwf	_eusart1TxBufferRemaining,f	;volatile
 24182                           
 24183                           ;mcc_generated_files/eusart1.c: 218:     }
 24184     0B1A  2B1D               	goto	i1l1232
 24185     0B1B                     i1l1229:	
 24186                           ;mcc_generated_files/eusart1.c: 219:     else
 24187                           
 24188                           
 24189                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
 24190     0B1B  014E               	movlb	14	; select bank14
 24191     0B1C  1219               	bcf	25,4	;volatile
 24192     0B1D                     i1l1232:
 24193     0B1D  0008               	return
 24194     0B1E                     __end_of_EUSART1_Transmit_ISR:
 24195                           
 24196                           	psect	text146
 24197     0ADA                     __ptext146:	
 24198 ;; *************** function _EUSART2_Transmit_ISR *****************
 24199 ;; Defined at:
 24200 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 24201 ;; Parameters:    Size  Location     Type
 24202 ;;		None
 24203 ;; Auto vars:     Size  Location     Type
 24204 ;;		None
 24205 ;; Return value:  Size  Location     Type
 24206 ;;                  1    wreg      void 
 24207 ;; Registers used:
 24208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24209 ;; Tracked objects:
 24210 ;;		On entry : 0/0
 24211 ;;		On exit  : 0/0
 24212 ;;		Unchanged: 0/0
 24213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24218 ;;Total ram usage:        1 bytes
 24219 ;; Hardware stack levels used: 1
 24220 ;; This function calls:
 24221 ;;		Nothing
 24222 ;; This function is called by:
 24223 ;;		_EUSART2_Initialize
 24224 ;;		_INTERRUPT_InterruptManager
 24225 ;; This function uses a non-reentrant model
 24226 ;;
 24227                           
 24228     0ADA                     _EUSART2_Transmit_ISR:	
 24229                           ;psect for function _EUSART2_Transmit_ISR
 24230                           
 24231     0ADA                     i1l9087:	
 24232                           ;incstack = 0
 24233                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24234                           
 24235                           
 24236                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 24237     0ADA  3008               	movlw	8
 24238     0ADB  0140               	movlb	0	; select bank0
 24239     0ADC  0260               	subwf	_eusart2TxBufferRemaining,w	;volatile
 24240     0ADD  1803               	skipnc
 24241     0ADE  2AE0               	goto	u509_21
 24242     0ADF  2AE1               	goto	u509_20
 24243     0AE0                     u509_21:
 24244     0AE0  2AF9               	goto	i1l1079
 24245     0AE1                     u509_20:
 24246     0AE1                     i1l9089:
 24247                           
 24248                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 24249     0AE1  0861               	movf	_eusart2TxTail,w
 24250     0AE2  3EE5               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
 24251     0AE3  0086               	movwf	6
 24252     0AE4  0187               	clrf	7
 24253     0AE5  0801               	movf	1,w
 24254     0AE6  0154               	movlb	20	; select bank20
 24255     0AE7  009A               	movwf	26	;volatile
 24256     0AE8                     i1l9091:
 24257     0AE8  3001               	movlw	1
 24258     0AE9  00F0               	movwf	??_EUSART2_Transmit_ISR
 24259     0AEA  0870               	movf	??_EUSART2_Transmit_ISR,w
 24260     0AEB  0140               	movlb	0	; select bank0
 24261     0AEC  07E1               	addwf	_eusart2TxTail,f	;volatile
 24262     0AED                     i1l9093:
 24263                           
 24264                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 24265     0AED  3008               	movlw	8
 24266     0AEE  0261               	subwf	_eusart2TxTail,w	;volatile
 24267     0AEF  1C03               	skipc
 24268     0AF0  2AF2               	goto	u510_21
 24269     0AF1  2AF3               	goto	u510_20
 24270     0AF2                     u510_21:
 24271     0AF2  2AF4               	goto	i1l9097
 24272     0AF3                     u510_20:
 24273     0AF3                     i1l9095:
 24274                           
 24275                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 24276     0AF3  01E1               	clrf	_eusart2TxTail	;volatile
 24277     0AF4                     i1l9097:
 24278                           
 24279                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 24280     0AF4  3001               	movlw	1
 24281     0AF5  00F0               	movwf	??_EUSART2_Transmit_ISR
 24282     0AF6  0870               	movf	??_EUSART2_Transmit_ISR,w
 24283     0AF7  07E0               	addwf	_eusart2TxBufferRemaining,f	;volatile
 24284                           
 24285                           ;mcc_generated_files/eusart2.c: 209:     }
 24286     0AF8  2AFB               	goto	i1l1082
 24287     0AF9                     i1l1079:	
 24288                           ;mcc_generated_files/eusart2.c: 210:     else
 24289                           
 24290                           
 24291                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 24292     0AF9  014E               	movlb	14	; select bank14
 24293     0AFA  1319               	bcf	25,6	;volatile
 24294     0AFB                     i1l1082:
 24295     0AFB  0008               	return
 24296     0AFC                     __end_of_EUSART2_Transmit_ISR:
 24297                           
 24298                           	psect	text147
 24299     0F47                     __ptext147:	
 24300 ;; *************** function _EUSART1_Receive_ISR *****************
 24301 ;; Defined at:
 24302 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 24303 ;; Parameters:    Size  Location     Type
 24304 ;;		None
 24305 ;; Auto vars:     Size  Location     Type
 24306 ;;		None
 24307 ;; Return value:  Size  Location     Type
 24308 ;;                  1    wreg      void 
 24309 ;; Registers used:
 24310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24311 ;; Tracked objects:
 24312 ;;		On entry : 0/0
 24313 ;;		On exit  : 0/0
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24320 ;;Total ram usage:        0 bytes
 24321 ;; Hardware stack levels used: 1
 24322 ;; Hardware stack levels required when called: 2
 24323 ;; This function calls:
 24324 ;;		NULL
 24325 ;;		_EUSART1_DefaultErrorHandler
 24326 ;;		_EUSART1_DefaultFramingErrorHandler
 24327 ;;		_EUSART1_DefaultOverrunErrorHandler
 24328 ;;		_EUSART1_RxDataHandler
 24329 ;; This function is called by:
 24330 ;;		_EUSART1_Initialize
 24331 ;;		_INTERRUPT_InterruptManager
 24332 ;; This function uses a non-reentrant model
 24333 ;;
 24334                           
 24335     0F47                     _EUSART1_Receive_ISR:	
 24336                           ;psect for function _EUSART1_Receive_ISR
 24337                           
 24338     0F47                     i1l9131:	
 24339                           ;incstack = 0
 24340 ;; hardware stack exceeded
 24341                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24342                           
 24343                           
 24344                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24345     0F47  0140               	movlb	0	; select bank0
 24346     0F48  0859               	movf	_eusart1RxHead,w	;volatile
 24347     0F49  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24348     0F4A  0086               	movwf	6
 24349     0F4B  0187               	clrf	7
 24350     0F4C  0181               	clrf	1
 24351     0F4D                     i1l9133:
 24352                           
 24353                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
 24354     0F4D  0142               	movlb	2	; select bank2
 24355     0F4E  1D1D               	btfss	29,2	;volatile
 24356     0F4F  2F51               	goto	u516_21
 24357     0F50  2F52               	goto	u516_20
 24358     0F51                     u516_21:
 24359     0F51  2F5E               	goto	i1l9139
 24360     0F52                     u516_20:
 24361     0F52                     i1l9135:
 24362                           
 24363                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24364     0F52  0140               	movlb	0	; select bank0
 24365     0F53  0859               	movf	_eusart1RxHead,w	;volatile
 24366     0F54  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24367     0F55  0086               	movwf	6
 24368     0F56  0187               	clrf	7
 24369     0F57  1481               	bsf	1,1
 24370     0F58                     i1l9137:
 24371                           
 24372                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 24373     0F58  0142               	movlb	2	; select bank2
 24374     0F59  0849               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 24375     0F5A  008A               	movwf	10
 24376     0F5B  0848               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 24377     0F5C  000A               	callw
 24378     0F5D  318F               	pagesel	$
 24379     0F5E                     i1l9139:
 24380                           
 24381                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
 24382     0F5E  0142               	movlb	2	; select bank2
 24383     0F5F  1C9D               	btfss	29,1	;volatile
 24384     0F60  2F62               	goto	u517_21
 24385     0F61  2F63               	goto	u517_20
 24386     0F62                     u517_21:
 24387     0F62  2F6F               	goto	i1l9145
 24388     0F63                     u517_20:
 24389     0F63                     i1l9141:
 24390                           
 24391                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24392     0F63  0140               	movlb	0	; select bank0
 24393     0F64  0859               	movf	_eusart1RxHead,w	;volatile
 24394     0F65  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24395     0F66  0086               	movwf	6
 24396     0F67  0187               	clrf	7
 24397     0F68  1501               	bsf	1,2
 24398     0F69                     i1l9143:
 24399                           
 24400                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 24401     0F69  0142               	movlb	2	; select bank2
 24402     0F6A  0847               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 24403     0F6B  008A               	movwf	10
 24404     0F6C  0846               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 24405     0F6D  000A               	callw
 24406     0F6E  318F               	pagesel	$
 24407     0F6F                     i1l9145:
 24408                           
 24409                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24410     0F6F  0140               	movlb	0	; select bank0
 24411     0F70  0859               	movf	_eusart1RxHead,w	;volatile
 24412     0F71  3EBD               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 24413     0F72  0086               	movwf	6
 24414     0F73  0187               	clrf	7
 24415     0F74  0801               	movf	1,w
 24416     0F75  1903               	btfsc	3,2
 24417     0F76  2F78               	goto	u518_21
 24418     0F77  2F79               	goto	u518_20
 24419     0F78                     u518_21:
 24420     0F78  2F80               	goto	i1l9149
 24421     0F79                     u518_20:
 24422     0F79                     i1l9147:
 24423                           
 24424                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 24425     0F79  0142               	movlb	2	; select bank2
 24426     0F7A  0845               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 24427     0F7B  008A               	movwf	10
 24428     0F7C  0844               	movf	_EUSART1_ErrorHandler^(0+256),w
 24429     0F7D  000A               	callw
 24430     0F7E  318F               	pagesel	$
 24431                           
 24432                           ;mcc_generated_files/eusart1.c: 242:     } else {
 24433     0F7F  2F83               	goto	i1l1239
 24434     0F80                     i1l9149:
 24435                           
 24436                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 24437     0F80  3189  21FC  318F   	fcall	_EUSART1_RxDataHandler
 24438     0F83                     i1l1239:
 24439     0F83  0008               	return
 24440     0F84                     __end_of_EUSART1_Receive_ISR:
 24441                           
 24442                           	psect	text148
 24443     0F0E                     __ptext148:	
 24444 ;; *************** function _EUSART2_Receive_ISR *****************
 24445 ;; Defined at:
 24446 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 24447 ;; Parameters:    Size  Location     Type
 24448 ;;		None
 24449 ;; Auto vars:     Size  Location     Type
 24450 ;;		None
 24451 ;; Return value:  Size  Location     Type
 24452 ;;                  1    wreg      void 
 24453 ;; Registers used:
 24454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24455 ;; Tracked objects:
 24456 ;;		On entry : 0/0
 24457 ;;		On exit  : 0/0
 24458 ;;		Unchanged: 0/0
 24459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24464 ;;Total ram usage:        0 bytes
 24465 ;; Hardware stack levels used: 1
 24466 ;; Hardware stack levels required when called: 2
 24467 ;; This function calls:
 24468 ;;		NULL
 24469 ;;		_EUSART2_DefaultErrorHandler
 24470 ;;		_EUSART2_DefaultFramingErrorHandler
 24471 ;;		_EUSART2_DefaultOverrunErrorHandler
 24472 ;;		_EUSART2_RxDataHandler
 24473 ;; This function is called by:
 24474 ;;		_EUSART2_Initialize
 24475 ;;		_INTERRUPT_InterruptManager
 24476 ;; This function uses a non-reentrant model
 24477 ;;
 24478                           
 24479     0F0E                     _EUSART2_Receive_ISR:	
 24480                           ;psect for function _EUSART2_Receive_ISR
 24481                           
 24482     0F0E                     i1l9099:	
 24483                           ;incstack = 0
 24484 ;; hardware stack exceeded
 24485                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24486                           
 24487                           
 24488                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 24489     0F0E  087C               	movf	_eusart2RxHead,w	;volatile
 24490     0F0F  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24491     0F10  0086               	movwf	6
 24492     0F11  0187               	clrf	7
 24493     0F12  0181               	clrf	1
 24494     0F13                     i1l9101:
 24495                           
 24496                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
 24497     0F13  0154               	movlb	20	; select bank20
 24498     0F14  1D1D               	btfss	29,2	;volatile
 24499     0F15  2F17               	goto	u511_21
 24500     0F16  2F18               	goto	u511_20
 24501     0F17                     u511_21:
 24502     0F17  2F23               	goto	i1l9107
 24503     0F18                     u511_20:
 24504     0F18                     i1l9103:
 24505                           
 24506                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 24507     0F18  087C               	movf	_eusart2RxHead,w	;volatile
 24508     0F19  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24509     0F1A  0086               	movwf	6
 24510     0F1B  0187               	clrf	7
 24511     0F1C  1481               	bsf	1,1
 24512     0F1D                     i1l9105:
 24513                           
 24514                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 24515     0F1D  0142               	movlb	2	; select bank2
 24516     0F1E  0853               	movf	(_EUSART2_FramingErrorHandler+1)^(0+256),w
 24517     0F1F  008A               	movwf	10
 24518     0F20  0852               	movf	_EUSART2_FramingErrorHandler^(0+256),w
 24519     0F21  000A               	callw
 24520     0F22  318F               	pagesel	$
 24521     0F23                     i1l9107:
 24522                           
 24523                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
 24524     0F23  0154               	movlb	20	; select bank20
 24525     0F24  1C9D               	btfss	29,1	;volatile
 24526     0F25  2F27               	goto	u512_21
 24527     0F26  2F28               	goto	u512_20
 24528     0F27                     u512_21:
 24529     0F27  2F33               	goto	i1l9113
 24530     0F28                     u512_20:
 24531     0F28                     i1l9109:
 24532                           
 24533                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 24534     0F28  087C               	movf	_eusart2RxHead,w	;volatile
 24535     0F29  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24536     0F2A  0086               	movwf	6
 24537     0F2B  0187               	clrf	7
 24538     0F2C  1501               	bsf	1,2
 24539     0F2D                     i1l9111:
 24540                           
 24541                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 24542     0F2D  0142               	movlb	2	; select bank2
 24543     0F2E  0851               	movf	(_EUSART2_OverrunErrorHandler+1)^(0+256),w
 24544     0F2F  008A               	movwf	10
 24545     0F30  0850               	movf	_EUSART2_OverrunErrorHandler^(0+256),w
 24546     0F31  000A               	callw
 24547     0F32  318F               	pagesel	$
 24548     0F33                     i1l9113:
 24549                           
 24550                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 24551     0F33  087C               	movf	_eusart2RxHead,w	;volatile
 24552     0F34  3ED5               	addlw	(low (_eusart2RxStatusBuffer| 0))& (0+255)
 24553     0F35  0086               	movwf	6
 24554     0F36  0187               	clrf	7
 24555     0F37  0801               	movf	1,w
 24556     0F38  1903               	btfsc	3,2
 24557     0F39  2F3B               	goto	u513_21
 24558     0F3A  2F3C               	goto	u513_20
 24559     0F3B                     u513_21:
 24560     0F3B  2F43               	goto	i1l9117
 24561     0F3C                     u513_20:
 24562     0F3C                     i1l9115:
 24563                           
 24564                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 24565     0F3C  0142               	movlb	2	; select bank2
 24566     0F3D  084F               	movf	(_EUSART2_ErrorHandler+1)^(0+256),w
 24567     0F3E  008A               	movwf	10
 24568     0F3F  084E               	movf	_EUSART2_ErrorHandler^(0+256),w
 24569     0F40  000A               	callw
 24570     0F41  318F               	pagesel	$
 24571                           
 24572                           ;mcc_generated_files/eusart2.c: 233:     } else {
 24573     0F42  2F46               	goto	i1l1089
 24574     0F43                     i1l9117:
 24575                           
 24576                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 24577     0F43  3189  2184  318F   	fcall	_EUSART2_RxDataHandler
 24578     0F46                     i1l1089:
 24579     0F46  0008               	return
 24580     0F47                     __end_of_EUSART2_Receive_ISR:
 24581                           
 24582                           	psect	text149
 24583     165D                     __ptext149:	
 24584 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 24585 ;; Defined at:
 24586 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;		None
 24589 ;; Auto vars:     Size  Location     Type
 24590 ;;		None
 24591 ;; Return value:  Size  Location     Type
 24592 ;;                  1    wreg      void 
 24593 ;; Registers used:
 24594 ;;		None
 24595 ;; Tracked objects:
 24596 ;;		On entry : 0/0
 24597 ;;		On exit  : 0/0
 24598 ;;		Unchanged: 0/0
 24599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24604 ;;Total ram usage:        0 bytes
 24605 ;; Hardware stack levels used: 1
 24606 ;; This function calls:
 24607 ;;		Nothing
 24608 ;; This function is called by:
 24609 ;;		_EUSART2_Initialize
 24610 ;;		_EUSART2_Receive_ISR
 24611 ;; This function uses a non-reentrant model
 24612 ;;
 24613                           
 24614     165D                     _EUSART2_DefaultOverrunErrorHandler:	
 24615                           ;psect for function _EUSART2_DefaultOverrunErrorHandler
 24616                           
 24617     165D                     i1l8767:	
 24618                           ;incstack = 0
 24619                           ; Regs used in _EUSART2_DefaultOverrunErrorHandler: []
 24620                           
 24621                           
 24622                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
 24623     165D  0154               	movlb	20	; select bank20
 24624     165E  121D               	bcf	29,4	;volatile
 24625                           
 24626                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
 24627     165F  161D               	bsf	29,4	;volatile
 24628     1660                     i1l1099:
 24629     1660  0008               	return
 24630     1661                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 24631                           
 24632                           	psect	text150
 24633     162D                     __ptext150:	
 24634 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 24635 ;; Defined at:
 24636 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;		None
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;		None
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  1    wreg      void 
 24643 ;; Registers used:
 24644 ;;		None
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/0
 24647 ;;		On exit  : 0/0
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24654 ;;Total ram usage:        0 bytes
 24655 ;; Hardware stack levels used: 1
 24656 ;; This function calls:
 24657 ;;		Nothing
 24658 ;; This function is called by:
 24659 ;;		_EUSART2_Initialize
 24660 ;;		_EUSART2_Receive_ISR
 24661 ;; This function uses a non-reentrant model
 24662 ;;
 24663                           
 24664     162D                     _EUSART2_DefaultFramingErrorHandler:	
 24665                           ;psect for function _EUSART2_DefaultFramingErrorHandler
 24666                           
 24667     162D                     i1l1096:	
 24668                           ;incstack = 0
 24669                           ; Regs used in _EUSART2_DefaultFramingErrorHandler: []
 24670                           
 24671     162D  0008               	return
 24672     162E                     __end_of_EUSART2_DefaultFramingErrorHandler:
 24673                           
 24674                           	psect	text151
 24675     1659                     __ptext151:	
 24676 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 24677 ;; Defined at:
 24678 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 24679 ;; Parameters:    Size  Location     Type
 24680 ;;		None
 24681 ;; Auto vars:     Size  Location     Type
 24682 ;;		None
 24683 ;; Return value:  Size  Location     Type
 24684 ;;                  1    wreg      void 
 24685 ;; Registers used:
 24686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24687 ;; Tracked objects:
 24688 ;;		On entry : 0/0
 24689 ;;		On exit  : 0/0
 24690 ;;		Unchanged: 0/0
 24691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24696 ;;Total ram usage:        0 bytes
 24697 ;; Hardware stack levels used: 1
 24698 ;; Hardware stack levels required when called: 1
 24699 ;; This function calls:
 24700 ;;		_EUSART2_RxDataHandler
 24701 ;; This function is called by:
 24702 ;;		_EUSART2_Initialize
 24703 ;;		_EUSART2_Receive_ISR
 24704 ;; This function uses a non-reentrant model
 24705 ;;
 24706                           
 24707     1659                     _EUSART2_DefaultErrorHandler:	
 24708                           ;psect for function _EUSART2_DefaultErrorHandler
 24709                           
 24710     1659                     i1l8769:	
 24711                           ;incstack = 0
 24712 ;; hardware stack exceeded
 24713                           ; Regs used in _EUSART2_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24714                           
 24715                           
 24716                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 24717     1659  3189  2184  3196   	fcall	_EUSART2_RxDataHandler
 24718     165C                     i1l1102:
 24719     165C  0008               	return
 24720     165D                     __end_of_EUSART2_DefaultErrorHandler:
 24721                           
 24722                           	psect	text152
 24723     0984                     __ptext152:	
 24724 ;; *************** function _EUSART2_RxDataHandler *****************
 24725 ;; Defined at:
 24726 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 24727 ;; Parameters:    Size  Location     Type
 24728 ;;		None
 24729 ;; Auto vars:     Size  Location     Type
 24730 ;;		None
 24731 ;; Return value:  Size  Location     Type
 24732 ;;                  1    wreg      void 
 24733 ;; Registers used:
 24734 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24735 ;; Tracked objects:
 24736 ;;		On entry : 0/0
 24737 ;;		On exit  : 0/0
 24738 ;;		Unchanged: 0/0
 24739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24744 ;;Total ram usage:        1 bytes
 24745 ;; Hardware stack levels used: 1
 24746 ;; This function calls:
 24747 ;;		Nothing
 24748 ;; This function is called by:
 24749 ;;		_EUSART2_Receive_ISR
 24750 ;;		_EUSART2_DefaultErrorHandler
 24751 ;; This function uses a non-reentrant model
 24752 ;;
 24753                           
 24754     0984                     _EUSART2_RxDataHandler:	
 24755                           ;psect for function _EUSART2_RxDataHandler
 24756                           
 24757     0984                     i1l8613:	
 24758                           ;incstack = 0
 24759                           ; Regs used in _EUSART2_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24760                           
 24761                           
 24762                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 24763     0984  087C               	movf	_eusart2RxHead,w
 24764     0985  3EDD               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
 24765     0986  0086               	movwf	6
 24766     0987  0187               	clrf	7
 24767     0988  0154               	movlb	20	; select bank20
 24768     0989  0819               	movf	25,w	;volatile
 24769     098A  0081               	movwf	1
 24770     098B                     i1l8615:
 24771     098B  3001               	movlw	1
 24772     098C  00F0               	movwf	??_EUSART2_RxDataHandler
 24773     098D  0870               	movf	??_EUSART2_RxDataHandler,w
 24774     098E  07FC               	addwf	_eusart2RxHead,f	;volatile
 24775     098F                     i1l8617:
 24776                           
 24777                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 24778     098F  3008               	movlw	8
 24779     0990  027C               	subwf	_eusart2RxHead,w	;volatile
 24780     0991  1C03               	skipc
 24781     0992  2994               	goto	u475_21
 24782     0993  2995               	goto	u475_20
 24783     0994                     u475_21:
 24784     0994  2996               	goto	i1l8621
 24785     0995                     u475_20:
 24786     0995                     i1l8619:
 24787                           
 24788                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 24789     0995  01FC               	clrf	_eusart2RxHead	;volatile
 24790     0996                     i1l8621:
 24791                           
 24792                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 24793     0996  3001               	movlw	1
 24794     0997  00F0               	movwf	??_EUSART2_RxDataHandler
 24795     0998  0870               	movf	??_EUSART2_RxDataHandler,w
 24796     0999  0140               	movlb	0	; select bank0
 24797     099A  07DE               	addwf	_eusart2RxCount,f	;volatile
 24798     099B                     i1l1093:
 24799     099B  0008               	return
 24800     099C                     __end_of_EUSART2_RxDataHandler:
 24801                           
 24802                           	psect	text153
 24803     1655                     __ptext153:	
 24804 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24805 ;; Defined at:
 24806 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 24807 ;; Parameters:    Size  Location     Type
 24808 ;;		None
 24809 ;; Auto vars:     Size  Location     Type
 24810 ;;		None
 24811 ;; Return value:  Size  Location     Type
 24812 ;;                  1    wreg      void 
 24813 ;; Registers used:
 24814 ;;		None
 24815 ;; Tracked objects:
 24816 ;;		On entry : 0/0
 24817 ;;		On exit  : 0/0
 24818 ;;		Unchanged: 0/0
 24819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24824 ;;Total ram usage:        0 bytes
 24825 ;; Hardware stack levels used: 1
 24826 ;; This function calls:
 24827 ;;		Nothing
 24828 ;; This function is called by:
 24829 ;;		_EUSART1_Initialize
 24830 ;;		_EUSART1_Receive_ISR
 24831 ;; This function uses a non-reentrant model
 24832 ;;
 24833                           
 24834     1655                     _EUSART1_DefaultOverrunErrorHandler:	
 24835                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 24836                           
 24837     1655                     i1l8803:	
 24838                           ;incstack = 0
 24839                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 24840                           
 24841                           
 24842                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
 24843     1655  0142               	movlb	2	; select bank2
 24844     1656  121D               	bcf	29,4	;volatile
 24845                           
 24846                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
 24847     1657  161D               	bsf	29,4	;volatile
 24848     1658                     i1l1249:
 24849     1658  0008               	return
 24850     1659                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 24851                           
 24852                           	psect	text154
 24853     162C                     __ptext154:	
 24854 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 24855 ;; Defined at:
 24856 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 24857 ;; Parameters:    Size  Location     Type
 24858 ;;		None
 24859 ;; Auto vars:     Size  Location     Type
 24860 ;;		None
 24861 ;; Return value:  Size  Location     Type
 24862 ;;                  1    wreg      void 
 24863 ;; Registers used:
 24864 ;;		None
 24865 ;; Tracked objects:
 24866 ;;		On entry : 0/0
 24867 ;;		On exit  : 0/0
 24868 ;;		Unchanged: 0/0
 24869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24874 ;;Total ram usage:        0 bytes
 24875 ;; Hardware stack levels used: 1
 24876 ;; This function calls:
 24877 ;;		Nothing
 24878 ;; This function is called by:
 24879 ;;		_EUSART1_Initialize
 24880 ;;		_EUSART1_Receive_ISR
 24881 ;; This function uses a non-reentrant model
 24882 ;;
 24883                           
 24884     162C                     _EUSART1_DefaultFramingErrorHandler:	
 24885                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 24886                           
 24887     162C                     i1l1246:	
 24888                           ;incstack = 0
 24889                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 24890                           
 24891     162C  0008               	return
 24892     162D                     __end_of_EUSART1_DefaultFramingErrorHandler:
 24893                           
 24894                           	psect	text155
 24895     1651                     __ptext155:	
 24896 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 24897 ;; Defined at:
 24898 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 24899 ;; Parameters:    Size  Location     Type
 24900 ;;		None
 24901 ;; Auto vars:     Size  Location     Type
 24902 ;;		None
 24903 ;; Return value:  Size  Location     Type
 24904 ;;                  1    wreg      void 
 24905 ;; Registers used:
 24906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24907 ;; Tracked objects:
 24908 ;;		On entry : 0/0
 24909 ;;		On exit  : 0/0
 24910 ;;		Unchanged: 0/0
 24911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24916 ;;Total ram usage:        0 bytes
 24917 ;; Hardware stack levels used: 1
 24918 ;; Hardware stack levels required when called: 1
 24919 ;; This function calls:
 24920 ;;		_EUSART1_RxDataHandler
 24921 ;; This function is called by:
 24922 ;;		_EUSART1_Initialize
 24923 ;;		_EUSART1_Receive_ISR
 24924 ;; This function uses a non-reentrant model
 24925 ;;
 24926                           
 24927     1651                     _EUSART1_DefaultErrorHandler:	
 24928                           ;psect for function _EUSART1_DefaultErrorHandler
 24929                           
 24930     1651                     i1l8805:	
 24931                           ;incstack = 0
 24932 ;; hardware stack exceeded
 24933                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24934                           
 24935                           
 24936                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 24937     1651  3189  21FC  3196   	fcall	_EUSART1_RxDataHandler
 24938     1654                     i1l1252:
 24939     1654  0008               	return
 24940     1655                     __end_of_EUSART1_DefaultErrorHandler:
 24941                           
 24942                           	psect	text156
 24943     09FC                     __ptext156:	
 24944 ;; *************** function _EUSART1_RxDataHandler *****************
 24945 ;; Defined at:
 24946 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 24947 ;; Parameters:    Size  Location     Type
 24948 ;;		None
 24949 ;; Auto vars:     Size  Location     Type
 24950 ;;		None
 24951 ;; Return value:  Size  Location     Type
 24952 ;;                  1    wreg      void 
 24953 ;; Registers used:
 24954 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24955 ;; Tracked objects:
 24956 ;;		On entry : 0/0
 24957 ;;		On exit  : 0/0
 24958 ;;		Unchanged: 0/0
 24959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24964 ;;Total ram usage:        1 bytes
 24965 ;; Hardware stack levels used: 1
 24966 ;; This function calls:
 24967 ;;		Nothing
 24968 ;; This function is called by:
 24969 ;;		_EUSART1_Receive_ISR
 24970 ;;		_EUSART1_DefaultErrorHandler
 24971 ;; This function uses a non-reentrant model
 24972 ;;
 24973                           
 24974     09FC                     _EUSART1_RxDataHandler:	
 24975                           ;psect for function _EUSART1_RxDataHandler
 24976                           
 24977     09FC                     i1l8633:	
 24978                           ;incstack = 0
 24979                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24980                           
 24981                           
 24982                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 24983     09FC  0140               	movlb	0	; select bank0
 24984     09FD  0859               	movf	_eusart1RxHead,w
 24985     09FE  3EC5               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 24986     09FF  0086               	movwf	6
 24987     0A00  0187               	clrf	7
 24988     0A01  0142               	movlb	2	; select bank2
 24989     0A02  0819               	movf	25,w	;volatile
 24990     0A03  0081               	movwf	1
 24991     0A04                     i1l8635:
 24992     0A04  3001               	movlw	1
 24993     0A05  00F0               	movwf	??_EUSART1_RxDataHandler
 24994     0A06  0870               	movf	??_EUSART1_RxDataHandler,w
 24995     0A07  0140               	movlb	0	; select bank0
 24996     0A08  07D9               	addwf	_eusart1RxHead,f	;volatile
 24997     0A09                     i1l8637:
 24998                           
 24999                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 25000     0A09  3008               	movlw	8
 25001     0A0A  0259               	subwf	_eusart1RxHead,w	;volatile
 25002     0A0B  1C03               	skipc
 25003     0A0C  2A0E               	goto	u476_21
 25004     0A0D  2A0F               	goto	u476_20
 25005     0A0E                     u476_21:
 25006     0A0E  2A10               	goto	i1l8641
 25007     0A0F                     u476_20:
 25008     0A0F                     i1l8639:
 25009                           
 25010                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 25011     0A0F  01D9               	clrf	_eusart1RxHead	;volatile
 25012     0A10                     i1l8641:
 25013                           
 25014                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 25015     0A10  3001               	movlw	1
 25016     0A11  00F0               	movwf	??_EUSART1_RxDataHandler
 25017     0A12  0870               	movf	??_EUSART1_RxDataHandler,w
 25018     0A13  07D7               	addwf	_eusart1RxCount,f	;volatile
 25019     0A14                     i1l1243:
 25020     0A14  0008               	return
 25021     0A15                     __end_of_EUSART1_RxDataHandler:
 25022     007E                     btemp	set	126	;btemp
 25023     007E                     int$flags	set	126
 25024     007E                     wtemp0	set	126
 25025                           
 25026                           	psect	idloc
 25027                           
 25028                           ;Config register IDLOC0 @ 0x8000
 25029                           ;	unspecified, using default values
 25030     8000                     	org	32768
 25031     8000  3FFF               	dw	16383
 25032                           
 25033                           ;Config register IDLOC1 @ 0x8001
 25034                           ;	unspecified, using default values
 25035     8001                     	org	32769
 25036     8001  3FFF               	dw	16383
 25037                           
 25038                           ;Config register IDLOC2 @ 0x8002
 25039                           ;	unspecified, using default values
 25040     8002                     	org	32770
 25041     8002  3FFF               	dw	16383
 25042                           
 25043                           ;Config register IDLOC3 @ 0x8003
 25044                           ;	unspecified, using default values
 25045     8003                     	org	32771
 25046     8003  3FFF               	dw	16383
 25047                           
 25048                           	psect	config
 25049                           
 25050                           ;Config register CONFIG1 @ 0x8007
 25051                           ;	External Oscillator mode selection bits
 25052                           ;	FEXTOSC = OFF, Oscillator not enabled
 25053                           ;	Power-up default value for COSC bits
 25054                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 25055                           ;	Clock Out Enable bit
 25056                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 25057                           ;	Clock Switch Enable bit
 25058                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 25059                           ;	Fail-Safe Clock Monitor Enable bit
 25060                           ;	FCMEN = ON, FSCM timer enabled
 25061     8007                     	org	32775
 25062     8007  3FEC               	dw	16364
 25063                           
 25064                           ;Config register CONFIG2 @ 0x8008
 25065                           ;	Master Clear Enable bit
 25066                           ;	MCLRE = ON, MCLR pin is Master Clear function
 25067                           ;	Power-up Timer Enable bit
 25068                           ;	PWRTS = OFF, PWRT disabled
 25069                           ;	Low-Power BOR enable bit
 25070                           ;	LPBOREN = OFF, ULPBOR disabled
 25071                           ;	Brown-out reset enable bits
 25072                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 25073                           ;	Brown-out Reset Voltage Selection
 25074                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 25075                           ;	Zero-cross detect disable
 25076                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 25077                           ;	Peripheral Pin Select one-way control
 25078                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 25079                           ;	Stack Overflow/Underflow Reset Enable bit
 25080                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 25081     8008                     	org	32776
 25082     8008  3FFF               	dw	16383
 25083                           
 25084                           ;Config register CONFIG3 @ 0x8009
 25085                           ;	WDT Period Select bits
 25086                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 25087                           ;	WDT operating mode
 25088                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 25089                           ;	WDT Window Select bits
 25090                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 25091                           ;	WDT input clock selector
 25092                           ;	WDTCCS = SC, Software Control
 25093     8009                     	org	32777
 25094     8009  3F9F               	dw	16287
 25095                           
 25096                           ;Config register CONFIG4 @ 0x800A
 25097                           ;	Boot Block Size Selection bits
 25098                           ;	BBSIZE = BB512, 512 words boot block size
 25099                           ;	Boot Block Enable bit
 25100                           ;	BBEN = OFF, Boot Block disabled
 25101                           ;	SAF Enable bit
 25102                           ;	SAFEN = OFF, SAF disabled
 25103                           ;	Application Block Write Protection bit
 25104                           ;	WRTAPP = OFF, Application Block not write protected
 25105                           ;	Boot Block Write Protection bit
 25106                           ;	WRTB = OFF, Boot Block not write protected
 25107                           ;	Configuration Register Write Protection bit
 25108                           ;	WRTC = OFF, Configuration Register not write protected
 25109                           ;	Data EEPROM write protection bit
 25110                           ;	WRTD = OFF, Data EEPROM NOT write protected
 25111                           ;	Storage Area Flash Write Protection bit
 25112                           ;	WRTSAF = OFF, SAF not write protected
 25113                           ;	Low Voltage Programming Enable bit
 25114                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 25115     800A                     	org	32778
 25116     800A  3FFF               	dw	16383
 25117                           
 25118                           ;Config register CONFIG5 @ 0x800B
 25119                           ;	UserNVM Program memory code protection bit
 25120                           ;	CP = OFF, UserNVM code protection disabled
 25121     800B                     	org	32779
 25122     800B  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    147
    Data        19
    BSS         455
    Persistent  54
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     39      80
    BANK1            80      1      80
    BANK2            80      4      75
    BANK3            80      0      64
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    asyncBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    BMA253_GetAccelDataX@xAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataXYZ@accelData	PTR struct . size(1) Largest target is 6
		 -> LIGHTBLUE_AccelSensor@accelData(BANK0[6]), 

    BMA253_GetAccelDataY@yAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    BMA253_GetAccelDataZ@zAccelData	PTR short  size(1) Largest target is 2
		 -> BMA253_GetAccelDataXYZ@sensorValue(BANK0[2]), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), NULL(), 

    fsmStateTable	const PTR FTN()enum E12652[16] size(2) Largest target is 1
		 -> do_I2C_DO_ACK(), do_I2C_DO_ADDRESS_NACK(), do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), 
		 -> do_I2C_IDLE(), do_I2C_RCEN(), do_I2C_RESET(), do_I2C_RX(), 
		 -> do_I2C_SEND_ADR_READ(), do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_RESTART(), do_I2C_SEND_RESTART_READ(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_STOP(), do_I2C_TX(), do_I2C_TX_EMPTY(), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$4707	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1193(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1204(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1227(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1210(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1216(), 
		 -> NULL(), 

    I2C1_DO_TX$4707$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$4712	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), NULL(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), NULL(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12565[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$4706	const PTR FTN()enum E12565 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1193(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1204(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1227(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1210(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1216(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1193(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1204(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1227(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1210(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1216(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1193(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1204(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1227(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1210(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1216(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@result(BANK0[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_status$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_status$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    i2c_status$data_ptr	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    IOCAF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), NULL(), 

    IOCAF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF6_DefaultInterruptHandler(), 

    LIGHTBLUE_SendPacket@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SendSerialData@serialData	PTR unsigned char  size(1) Largest target is 80
		 -> lightBlueSerial(BANK4[80]), 

    LIGHTBLUE_SplitByte@payload	PTR unsigned char  size(1) Largest target is 19
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    LIGHTBLUE_SplitWord@payload	PTR unsigned char  size(1) Largest target is 13
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), 

    MCP9844_GetTemperatureValue@temperature	PTR short  size(1) Largest target is 2
		 -> LIGHTBLUE_TemperatureSensor@temperature(BANK0[2]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    pHead	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    protocol_version_number	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    rd1RegCompleteHandler@i2c1_master_example$F1193@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F1204@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1227@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F1227@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    RN487X$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    RN487X$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    RN487X$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    RN487X$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    RN487X$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1335(), 

    RN487X$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    RN487X$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    RN487X$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    RN487X$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    rn487x_driver_version	const PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), 

    RN487X_MessageHandler@message	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    rn487x_PrintMessage@passedMessage	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    RN487X_ReadMsg@expectedMsg	PTR const unsigned char  size(2) Largest target is 11
		 -> RN487X_EnterCmdMode@cmdPrompt(CODE[5]), RN487X_EnterDataMode@cmdPrompt(CODE[5]), RN487X_GetInputsValues@ioValue(COMMON[2]), RN487X_RebootCmd@reboot(CODE[11]), 

    RN487X_SendCmd@cmd	PTR const unsigned char  size(1) Largest target is 64
		 -> cmdBuf(BANK3[64]), 

    RN487X_SetAsyncMessageHandler@pBuffer	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), 

    S186$8$0	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    S186$AsyncHandler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_MessageHandler(), 

    S186$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_rx_ready(), 

    S186$DelayMs	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> RN487X_Delay(), 

    S186$IndicateRx	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_IndicateRx(), 

    S186$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> RN487X_Read@rn487x_interface$F1335(), 

    S186$ResetModule	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> RN487X_Reset(), 

    S186$SetSystemMode	PTR FTN(enum E271,)void  size(2) Largest target is 1
		 -> RN487X_SetSystemMode(), 

    S186$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> RN487X_is_tx_done(), 

    S186$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RN487X_Write(), 

    S3102$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3102$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S3102$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F1193(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F1204(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F1227(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F1210(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F1216(), 
		 -> NULL(), 

    S3102$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read1ByteRegister@reg(BANK0[1]), 
		 -> i2c_read2ByteRegister@reg(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S315$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S315$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S315$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    S315$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    S315$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    S315$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    S315$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    S315$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    S315$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    S315$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    S315$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    S315$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    S628$11$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S628$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S628$callbackTable	PTR FTN(PTR void ,)enum E12498[6] size(2) Largest target is 1
		 -> returnReset(), returnStop(), 

    S628$data_ptr	PTR unsigned char  size(2) Largest target is 0

    S974$data	PTR unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 32
		 -> rn487x_PrintMessage@printCharacter(BANK0[32]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> LIGHTBLUE_AccelSensor@payload(BANK0[13]), LIGHTBLUE_LedState@payload(BANK0[3]), LIGHTBLUE_PushButton@payload(BANK0[3]), LIGHTBLUE_SendProtocolVersion@payload(BANK0[19]), 
		 -> LIGHTBLUE_TemperatureSensor@payload(BANK0[5]), lightBlueSerial(BANK4[80]), statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), 
		 -> STR_1(CODE[6]), STR_3(CODE[11]), STR_5(CODE[12]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> statusBuffer(BANK5[80]), statusBuffer@main$F3732(BANK6[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[11]), STR_5(CODE[12]), 

    uart$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_rx_ready(), EUSART2_is_rx_ready(), 

    uart$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), EUSART2_Initialize(), 

    uart$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), EUSART2_Read(), 

    uart$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), EUSART2_Receive_ISR(), 

    uart$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetRxInterruptHandler(), EUSART2_SetRxInterruptHandler(), 

    uart$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_SetTxInterruptHandler(), EUSART2_SetTxInterruptHandler(), 

    uart$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_done(), EUSART2_is_tx_done(), 

    uart$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_is_tx_ready(), EUSART2_is_tx_ready(), 

    uart$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), EUSART2_Transmit_ISR(), 

    uart$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), EUSART2_Write(), 

    wr1RegCompleteHandler@i2c1_master_example$F1210@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F1216@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_read2ByteRegister@result(BANK0[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_IOCAF6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RN487X_MessageHandler->_strstr
    _strstr->_strncmp
    _rn487x_PrintMessageStart->_EUSART1_Write
    _rn487x_PrintMessageStart->_EUSART2_Write
    _rn487x_PrintMessageEnd->_EUSART1_Write
    _rn487x_PrintMessageEnd->_EUSART2_Write
    _rn487x_PrintMessage->_strcpy
    _rn487x_PrintIndicatorCharacters->_EUSART1_Write
    _rn487x_PrintIndicatorCharacters->_EUSART2_Write
    _RN487X_Init->_RN487X_Delay
    _LIGHTBLUE_TemperatureSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_TemperatureSensor->_MCP9844_GetTemperatureValue
    _LIGHTBLUE_SendSerialData->_RN487X_Write
    _LIGHTBLUE_SendProtocolVersion->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PushButton->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _RN487X_SetOutputs->_RN487X_SendCmd
    _RN487X_EnterDataMode->_RN487X_SendCmd
    _RN487X_EnterCmdMode->_RN487X_SendCmd
    _RN487X_SendCmd->_RN487X_Write
    _RN487X_Read@rn487x_interface$F1335->_EUSART1_Read
    _RN487X_Read@rn487x_interface$F1335->_EUSART2_Read
    _RN487X_Delay->_DELAY_milliseconds
    _LIGHTBLUE_LedState->_LIGHTBLUE_SendPacket
    _LIGHTBLUE_AccelSensor->_LIGHTBLUE_SplitWord
    _LIGHTBLUE_SplitWord->_LIGHTBLUE_SplitByte
    _LIGHTBLUE_SplitByte->_strlen
    _LIGHTBLUE_SendPacket->_RN487X_Write
    _RN487X_Write->_strlen
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyX
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataXYZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataZ->_BMA253_NewAccelDataRdyZ
    _BMA253_GetAccelDataY->_BMA253_NewAccelDataRdyY
    _BMA253_GetAccelDataX->_BMA253_NewAccelDataRdyX
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F1193
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F1204
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F1227
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F1210
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F1216
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F1193
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F1204
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F1227
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F1210
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F1216
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F1193
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F1204
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F1227
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F1210
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F1216
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F1193
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F1204
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F1227
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F1210
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F1216
    _wr2RegCompleteHandler@i2c1_master_example$F1216->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F1210->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F1227->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F1204->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F1193->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR
    _EUSART2_Receive_ISR->_EUSART2_RxDataHandler
    _EUSART2_DefaultErrorHandler->_EUSART2_RxDataHandler
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIGHTBLUE_AccelSensor
    _RN487X_DataReady->_RN487X_FilterData
    _RN487X_FilterData->_RN487X_MessageHandler
    _RN487X_MessageHandler->_rn487x_PrintMessage
    _MCP9844_GetTemperatureValue->_MCP9844_CalcTemperature
    _MCP9844_CalcTemperature->_i2c_read2ByteRegister
    _LIGHTBLUE_ParseIncomingPacket->_LIGHTBLUE_PerformAction
    _LIGHTBLUE_PerformAction->_LIGHTBLUE_SetErrorLedValue
    _LIGHTBLUE_UpdateErrorLed->_RN487X_SetOutputs
    _LIGHTBLUE_AccelSensor->_BMA253_GetAccelDataXYZ
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataX
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataY
    _BMA253_GetAccelDataXYZ->_BMA253_GetAccelDataZ
    _BMA253_GetAccelDataZ->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyZ->_i2c_read1ByteRegister
    _BMA253_GetAccelDataY->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyY->_i2c_read1ByteRegister
    _BMA253_GetAccelDataX->_i2c_read1ByteRegister
    _BMA253_NewAccelDataRdyX->_i2c_read1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _RN487X_DataReady->_RN487X_FilterData

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 3852965
                                             38 BANK0      1     1      0
                                              0 BANK1      1     1      0
                       _EUSART1_Read *
                      _EUSART1_Write *
                _EUSART1_is_rx_ready *
                       _EUSART2_Read *
                      _EUSART2_Write *
                _EUSART2_is_rx_ready *
              _LIGHTBLUE_AccelSensor
               _LIGHTBLUE_Initialize
                 _LIGHTBLUE_LedState
      _LIGHTBLUE_ParseIncomingPacket
               _LIGHTBLUE_PushButton
      _LIGHTBLUE_SendProtocolVersion
           _LIGHTBLUE_SendSerialData
        _LIGHTBLUE_TemperatureSensor
                   _RN487X_DataReady
                        _RN487X_Init
                 _RN487X_IsConnected
                        _RN487X_Read
      _RN487X_SetAsyncMessageHandler
                       _RN487X_Write *
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1485
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     135
         _IOCAF6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF6_SetInterruptHandler                           2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     675
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     675
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     135
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_SetAsyncMessageHandler                        3     0      3     418
                                              1 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _RN487X_Read                                          0     0      0   10887
                   _RN487X_DataReady
 ---------------------------------------------------------------------------------
 (2) _RN487X_DataReady                                     0     0      0   10887
                  _RN487X_FilterData
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_FilterData                                    5     5      0   10887
                                             36 BANK0      1     1      0
                                              0 BANK2      4     4      0
              _RN487X_MessageHandler *
 _RN487X_Read@rn487x_interface$F1335 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_MessageHandler                                3     1      2   10686
                                             33 BANK0      3     1      2
    _rn487x_PrintIndicatorCharacters
                _rn487x_PrintMessage
             _rn487x_PrintMessageEnd
           _rn487x_PrintMessageStart
                             _strstr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               8     4      4    2291
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     519
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     282
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageStart                             0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessageEnd                               0     0      0    1691
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintMessage                                 37    35      2    3050
                                              7 COMMON     4     2      2
                                              0 BANK0     33    33      0
                      _EUSART1_Write *
                      _EUSART2_Write *
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     4      2     246
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _rn487x_PrintIndicatorCharacters                      1     1      0    1753
                                              3 COMMON     1     1      0
                      _EUSART1_Write *
                      _EUSART2_Write *
 ---------------------------------------------------------------------------------
 (1) _RN487X_IsConnected                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RN487X_Init                                          0     0      0     872
                       _RN487X_Delay *
                  _RN487X_IndicateRx *
 _RN487X_Read@rn487x_interface$F1335 *
                       _RN487X_Reset *
               _RN487X_SetSystemMode *
                 _RN487X_is_rx_ready *
 ---------------------------------------------------------------------------------
 (3) _RN487X_is_rx_ready                                   0     0      0       0
                _EUSART1_is_rx_ready *
                _EUSART2_is_rx_ready *
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RN487X_SetSystemMode                                 1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_Reset                                         1     0      1     185
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _RN487X_IndicateRx                                    1     0      1     108
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_TemperatureSensor                          7     7      0  383328
                                             24 BANK0      7     7      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
        _MCP9844_GetTemperatureValue
 ---------------------------------------------------------------------------------
 (2) _MCP9844_GetTemperatureValue                          1     1      0  375736
                                             11 COMMON     1     1      0
            _MCP9844_CalcTemperature
 ---------------------------------------------------------------------------------
 (3) _MCP9844_CalcTemperature                             11     9      2  375666
                                             13 BANK0     11     9      2
              _i2c_read2ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read2ByteRegister                                9     7      2  375499
                                              4 BANK0      9     7      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendSerialData                             3     3      0    4274
                                              7 COMMON     3     3      0
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_SendProtocolVersion                       23    23      0    7788
                                              0 BANK0     23    23      0
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_PushButton                                 4     4      0    6862
                                              0 BANK0      4     4      0
           _LIGHTBLUE_GetButtonValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetButtonValue                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_ParseIncomingPacket                        9     9      0   18822
                                             11 BANK0      9     9      0
            _LIGHTBLUE_PerformAction
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_PerformAction                              4     3      1   18277
                                              7 BANK0      4     3      1
                      _EUSART1_Write *
                      _EUSART2_Write *
         _LIGHTBLUE_SetErrorLedValue
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SetErrorLedValue                           2     2      0   16293
                                             11 COMMON     1     1      0
                                              6 BANK0      1     1      0
           _LIGHTBLUE_UpdateErrorLed
 ---------------------------------------------------------------------------------
 (4) _LIGHTBLUE_UpdateErrorLed                             0     0      0   16262
                       _RN487X_Delay *
                _RN487X_EnterCmdMode
               _RN487X_EnterDataMode
                  _RN487X_SetOutputs
 ---------------------------------------------------------------------------------
 (5) _RN487X_SetOutputs                                    6     4      2    5093
                                              0 BANK0      6     4      2
         _RN487X_ReadDefaultResponse
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadDefaultResponse                           4     4      0     389
                                              3 COMMON     4     4      0
 _RN487X_Read@rn487x_interface$F1335 *
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterDataMode                                 0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (5) _RN487X_EnterCmdMode                                  0     0      0    5386
                     _RN487X_ReadMsg
                     _RN487X_SendCmd
 ---------------------------------------------------------------------------------
 (6) _RN487X_SendCmd                                       4     3      1    4316
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                  _RN487X_is_tx_done *
 ---------------------------------------------------------------------------------
 (7) _RN487X_is_tx_done                                    0     0      0       0
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
 ---------------------------------------------------------------------------------
 (8) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RN487X_ReadMsg                                       7     4      3    1070
                                              3 COMMON     7     4      3
 _RN487X_Read@rn487x_interface$F1335 *
 ---------------------------------------------------------------------------------
 (4) _RN487X_Read@rn487x_interface$F1335                   0     0      0      74
                       _EUSART1_Read *
                       _EUSART2_Read *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RN487X_Delay                                         2     0      2     397
                                              4 COMMON     2     0      2
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2     135
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_LedState                                   4     4      0    6961
                                              0 BANK0      4     4      0
          _LIGHTBLUE_GetDataLedValue
         _LIGHTBLUE_GetErrorLedValue
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetErrorLedValue                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_GetDataLedValue                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGHTBLUE_AccelSensor                               19    19      0 3395397
                                             19 BANK0     19    19      0
             _BMA253_GetAccelDataXYZ
               _LIGHTBLUE_SendPacket
                _LIGHTBLUE_SplitWord
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SplitWord                                  3     1      2    2607
                                              9 COMMON     3     1      2
                _LIGHTBLUE_SplitByte
 ---------------------------------------------------------------------------------
 (3) _LIGHTBLUE_SplitByte                                  3     2      1    1911
                                              6 COMMON     3     2      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _LIGHTBLUE_SendPacket                                 4     3      1    4825
                                              7 COMMON     4     3      1
                       _RN487X_Write *
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     858
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _RN487X_Write                                         1     0      1    3185
                                              6 COMMON     1     0      1
                       _EUSART1_Read (ARG) *
                      _EUSART1_Write *
                       _EUSART2_Read (ARG) *
                      _EUSART2_Write *
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        2     1      1    1525
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     1      1     166
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BMA253_GetAccelDataXYZ                               3     3      0 3387663
                                             16 BANK0      3     3      0
               _BMA253_GetAccelDataX
               _BMA253_GetAccelDataY
               _BMA253_GetAccelDataZ
            _BMA253_NewAccelDataRdyX
            _BMA253_NewAccelDataRdyY
            _BMA253_NewAccelDataRdyZ
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataZ                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyZ
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyZ                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataY                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyY
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyY                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_GetAccelDataX                                 6     6      0  752774
                                             10 BANK0      6     6      0
            _BMA253_NewAccelDataRdyX
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _BMA253_NewAccelDataRdyX                              1     1      0  376335
                                             11 COMMON     1     1      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _i2c_read1ByteRegister                                6     5      1  376301
                                              4 BANK0      6     5      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4    3815
                                              5 COMMON     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      68
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0  362109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0  362109
                                              2 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C1_Poller                                          0     0      0  362041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterFsm                                       2     2      0  362041
                                              0 BANK0      2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX_EMPTY                                     2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_TX                                           2     2      0   90518
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_ADR_READ                                0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendTxData                               1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX                                           2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_ADDRESS_NACK                                 2     2      0   90487
                                              9 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler@i2c1_master_example$F1216     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler@i2c1_master_example$F1210     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler@i2c1_master_example$F1227   1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    9035
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler@i2c1_master_example$F1204     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler@i2c1_master_example$F1193     1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    9004
                                              8 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetDataCompleteCallback                         3     0      3    5479
                                              5 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     4     1      3    1257
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       3     1      2    3494
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnStop                             1     0      1       0
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _I2C1_CallbackReturnReset                            1     0      1     385
                                              8 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      37
                                              1 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0       0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (15) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCAF6_ISR
 ---------------------------------------------------------------------------------
 (16) _IOCAF6_ISR                                          0     0      0       0
                                NULL *
     _IOCAF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _IOCAF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART2_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read *
   _EUSART1_Write *
   _EUSART1_is_rx_ready *
   _EUSART2_Read *
   _EUSART2_Write *
   _EUSART2_is_rx_ready *
   _LIGHTBLUE_AccelSensor *
     _BMA253_GetAccelDataXYZ
       _BMA253_GetAccelDataX
         _BMA253_NewAccelDataRdyX
           _i2c_read1ByteRegister
             _I2C1_Close
               _I2C1_MasterClearIrq
               _I2C1_MasterClose
               _I2C1_MasterDisableIrq
             _I2C1_MasterWrite
               _I2C1_MasterOperation
                 _I2C1_MasterStart
                 _I2C1_Poller
                   _I2C1_MasterFsm
                     _I2C1_DO_ADDRESS_NACK *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                         _I2C1_MasterEnableRestart
                       _I2C1_DO_SEND_STOP *
                         _I2C1_MasterStop
                       _rd1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                           _I2C1_SetCallback
                       _rd1RegCompleteHandler@i2c1_master_example$F1193 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rd2RegCompleteHandler@i2c1_master_example$F1204 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1227 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr1RegCompleteHandler@i2c1_master_example$F1210 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                       _wr2RegCompleteHandler@i2c1_master_example$F1216 *
                         _I2C1_SetBuffer
                         _I2C1_SetDataCompleteCallback
                     _I2C1_DO_IDLE *
                     _I2C1_DO_RCEN *
                       _I2C1_MasterStartRx
                     _I2C1_DO_RESET *
                     _I2C1_DO_RX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_RX_NACK_RESTART *
                         _I2C1_MasterSendNack
                       _I2C1_DO_RX_NACK_STOP *
                         _I2C1_MasterSendNack
                       _I2C1_MasterGetRxData *
                       _I2C1_MasterSendAck *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1193 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1204 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1227 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1210 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1216 *
                     _I2C1_DO_RX_ACK *
                       _I2C1_MasterSendAck
                     _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_DO_RX_NACK_STOP *
                     _I2C1_DO_SEND_ADR_READ *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_ADR_WRITE *
                       _I2C1_MasterSendTxData
                     _I2C1_DO_SEND_RESTART *
                     _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_MasterEnableRestart
                     _I2C1_DO_SEND_STOP *
                     _I2C1_DO_TX *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART_READ *
                       _I2C1_DO_SEND_RESTART_WRITE *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterIsNack *
                       _I2C1_MasterSendTxData *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1193 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1204 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1227 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1210 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1216 *
                     _I2C1_DO_TX_EMPTY *
                       NULL(Fake) *
                       _I2C1_CallbackReturnReset *
                       _I2C1_CallbackReturnStop *
                       _I2C1_DO_SEND_RESTART *
                       _I2C1_DO_SEND_STOP *
                       _I2C1_MasterSetIrq *
                       _rd1RegCompleteHandler *
                       _rd1RegCompleteHandler@i2c1_master_example$F1193 *
                       _rd2RegCompleteHandler *
                       _rd2RegCompleteHandler@i2c1_master_example$F1204 *
                       _rdBlkRegCompleteHandler *
                       _rdBlkRegCompleteHandler@i2c1_master_example$F1227 *
                       _wr1RegCompleteHandler *
                       _wr1RegCompleteHandler@i2c1_master_example$F1210 *
                       _wr2RegCompleteHandler *
                       _wr2RegCompleteHandler@i2c1_master_example$F1216 *
                     _I2C1_MasterClearIrq *
                     _I2C1_MasterIsNack *
                   _I2C1_MasterWaitForEvent
             _I2C1_Open
               _I2C1_MasterClearIrq
               _I2C1_MasterOpen
             _I2C1_SetAddressNackCallback
               _I2C1_SetCallback
             _I2C1_SetBuffer
             _I2C1_SetDataCompleteCallback
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataY
         _BMA253_NewAccelDataRdyY
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_GetAccelDataZ
         _BMA253_NewAccelDataRdyZ
           _i2c_read1ByteRegister
         _i2c_read1ByteRegister
       _BMA253_NewAccelDataRdyX
       _BMA253_NewAccelDataRdyY
       _BMA253_NewAccelDataRdyZ
     _LIGHTBLUE_SendPacket
       _RN487X_Write *
         _EUSART1_Read (ARG) *
         _EUSART1_Write (ARG) *
         _EUSART2_Read (ARG) *
         _EUSART2_Write (ARG) *
         _strlen (ARG) *
       _strlen *
     _LIGHTBLUE_SplitWord
       _LIGHTBLUE_SplitByte
         _strlen
   _LIGHTBLUE_Initialize *
   _LIGHTBLUE_LedState *
     _LIGHTBLUE_GetDataLedValue
     _LIGHTBLUE_GetErrorLedValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_ParseIncomingPacket *
     _LIGHTBLUE_PerformAction
       _EUSART1_Write *
       _EUSART2_Write *
       _LIGHTBLUE_SetErrorLedValue *
         _LIGHTBLUE_UpdateErrorLed
           _RN487X_Delay *
             _DELAY_milliseconds
           _RN487X_EnterCmdMode *
             _RN487X_ReadMsg
               _RN487X_Read@rn487x_interface$F1335 *
                 _EUSART1_Read *
                 _EUSART2_Read *
             _RN487X_SendCmd
               _RN487X_Write *
               _RN487X_is_tx_done *
                 _EUSART1_is_tx_done *
                 _EUSART2_is_tx_done *
           _RN487X_EnterDataMode *
             _RN487X_ReadMsg
             _RN487X_SendCmd
           _RN487X_SetOutputs *
             _RN487X_ReadDefaultResponse
               _RN487X_Read@rn487x_interface$F1335 *
             _RN487X_SendCmd
   _LIGHTBLUE_PushButton *
     _LIGHTBLUE_GetButtonValue
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
   _LIGHTBLUE_SendProtocolVersion *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitByte
     _strlen
   _LIGHTBLUE_SendSerialData *
     _RN487X_Write *
     _strlen *
   _LIGHTBLUE_TemperatureSensor *
     _LIGHTBLUE_SendPacket
     _LIGHTBLUE_SplitWord
     _MCP9844_GetTemperatureValue
       _MCP9844_CalcTemperature
         _i2c_read2ByteRegister
           _I2C1_Close
           _I2C1_MasterWrite
           _I2C1_Open
           _I2C1_SetAddressNackCallback
           _I2C1_SetBuffer
           _I2C1_SetDataCompleteCallback
   _RN487X_DataReady *
     _RN487X_FilterData
       _RN487X_MessageHandler *
         _rn487x_PrintIndicatorCharacters
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessage
           _EUSART1_Write *
           _EUSART2_Write *
           _strcpy *
           _strlen *
         _rn487x_PrintMessageEnd
           _EUSART1_Write *
           _EUSART2_Write *
         _rn487x_PrintMessageStart
           _EUSART1_Write *
           _EUSART2_Write *
         _strstr
           _strchr
           _strlen
           _strncmp
       _RN487X_Read@rn487x_interface$F1335 *
     _RN487X_is_rx_ready *
       _EUSART1_is_rx_ready *
       _EUSART2_is_rx_ready *
   _RN487X_Init *
     _RN487X_Delay *
     _RN487X_IndicateRx *
     _RN487X_Read@rn487x_interface$F1335 *
     _RN487X_Reset *
     _RN487X_SetSystemMode *
     _RN487X_is_rx_ready *
   _RN487X_IsConnected *
   _RN487X_Read *
     _RN487X_DataReady
   _RN487X_SetAsyncMessageHandler *
   _RN487X_Write *
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF6_SetInterruptHandler
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured *

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCAF6_ISR
       NULL(Fake) *
       _IOCAF6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     228       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      1      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      4      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     228      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Dec 26 18:33:29 2024

                                 _eusart1TxBufferRemaining 005A  
                                   ?_EUSART2_RxDataHandler 0070  
                          __end_of_TMR0_HasOverflowOccured 16B2  
                                                       l31 0DA9  
                                                       l25 0D7B  
                                                       l19 0D4D  
                                                       l43 07F2  
                                                       l52 08E1  
                                                       l55 08F2  
                                                       l71 0B89  
                                                       l49 08D0  
                                                       l68 07FF  
                                      _do_I2C_SEND_RESTART 0000  
                                                      l121 0956  
                                                      l202 16C9  
                                                      l130 0BAF  
                                                      l211 0A7E  
                                                      l124 0DD7  
                                                      l205 16AC  
                                                      l221 0EED  
                                                      l118 16C3  
                                                      l142 02ED  
                                                      l127 0916  
                                                      l208 0837  
                                                      l136 0E6A  
                                                      l161 0199  
                                                      l218 0EEB  
                                                      l227 0F0D  
                                                      l190 0379  
                                                      l184 0243  
                                                      l193 0819  
                                                      l531 0656  
                                                      l196 0E36  
                                                      l534 087B  
                                                      l519 086A  
                                                      l199 16CF  
                                                      l543 076E  
                                                      l546 088C  
                                                      l730 08AE  
                                                      l802 17BD  
                                                      l811 17B2  
                                                      l804 17BF  
                                                      l733 08BF  
                                                      l813 17B4  
                                                      l558 09CB  
                                                      l822 17D5  
                                                      l727 089D  
                                                      l736 0848  
                                                      l808 17AF  
                                                      l824 17D6  
                                                      l816 17CC  
                                                      l832 060B  
                                                      l905 0401  
                                                      l498 0859  
                                                      l930 06E7  
                                                      l826 17D7  
                                                      l739 09E3  
                                                      l923 0A62  
                                                      l819 17D3  
                                                      l780 1650  
                                                      l852 072B  
                                                      l845 0E9F  
                                                      l829 0D1F  
                                                      l918 0983  
                                                      l783 17CB  
                                                      l839 0B40  
                                                      l792 177F  
                                                      l961 080B  
                                                      l786 176B  
                                                      l970 0463  
                                                      l954 0A9A  
                                                      l795 1734  
                                                      l883 0E05  
                                                      l971 045F  
                                                      l876 04C3  
                                                      l789 1775  
                                                      l973 0465  
                                                      l949 09FB  
                                                      l894 0CC5  
                                                      l799 17BA  
                                             ?_RN487X_Init 0070  
                          BMA253_NewAccelDataRdyX@xNewData 007B  
                                             ?_RN487X_Read 0070  
                               __end_of_DELAY_milliseconds 0941  
                             LIGHTBLUE_SendPacket@packetID 007A  
                                    ?_I2C1_MasterOperation 0070  
                   __end_of_EUSART2_SetFramingErrorHandler 16FA  
                           _EUSART2_SetFramingErrorHandler 16F4  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                                     _I2C1_DO_RX_NACK_STOP 1694  
                                ?_I2C1_MasterEnableRestart 0070  
                          BMA253_NewAccelDataRdyY@yNewData 007B  
                                     I2C1_SetBuffer@buffer 0073  
                                                     l1111 16F3  
                                                     l1201 1670  
                                                     l1105 16F9  
                                                     l1114 170B  
                                                     l1211 0BFB  
                                                     l1220 0C49  
                                                     l1108 16FF  
                                  ??_rd2RegCompleteHandler 0079  
                                                     l1117 1705  
                                                     l1054 174F  
                                                     l1072 0C02  
                                                     l1216 0C29  
                                                     l1048 0FFF  
                                                     l1073 0C0B  
                                                     l1217 0C32  
                                                     l1057 166C  
                                                     l2050 014B  
                                                     l1067 0BD5  
                                                     l1076 0C22  
                                                     l1261 16D5  
                                                     l1255 16DB  
                                                     l2039 00E4  
                                            ?_RN487X_Delay 0074  
                                                     l1264 16ED  
                                                     l1192 0FC1  
                                                     l1352 1789  
                                                     l1440 069F  
                                                     l1258 16E1  
                                                     l1267 16E7  
                                                     l1451 1711  
                                                     l1355 1793  
                                                     l1349 096C  
                                                     l1198 1758  
                                                     l1471 092A  
                                                     l1802 1746  
                                                     l1811 056B  
                                                     l1805 172C  
                                                     l1742 0ED4  
                                                     l1911 1638  
                                                     l1743 0ED5  
                                                     l1920 1641  
                                                     l1808 054F  
                                                     l1824 078B  
                                                     l2704 05BD  
                                                     l1825 07B1  
                                                     l1753 0AD9  
                                                     l1489 16B1  
                                                     l1914 164A  
                                                     l1842 0CF2  
                                                     l1747 09B3  
                                                     l1739 1761  
                                                     l1932 1644  
                                                     l1836 1724  
                                                     l1860 167F  
                                                     l1908 17F1  
                                                     l1941 1664  
                                                     l1917 1675  
                                                     l1766 17FF  
                                                     l1926 1647  
                                                     l1935 16B7  
                                                     l1863 1684  
                                                     l1759 16A7  
                                                     l1775 17A9  
                                                     l1872 1693  
                                                     l1792 17E4  
                                                     l2672 0A47  
                                                     l1929 163E  
                                                     l1769 179E  
                                                     l1881 16A2  
                                                     l1786 0B64  
                                                     l1938 1668  
                                                     l1962 164D  
                                                     l1866 1689  
                                                     l1875 1698  
                                                     l2691 0518  
                                                     l1956 163B  
                                                     l1796 0C9A  
                                                     l1869 168E  
                                                     l1965 16B8  
                                                     l1878 169D  
                                                     l2678 0A2D  
                                                     l1959 1635  
                                                     l1895 1630  
                                                     l1799 167A  
                                                     l1887 0C71  
                                                     l8001 0C82  
                                                     l1969 16BD  
                                                     l1977 0940  
                                                     l2697 0A9B  
                                                     l1898 1632  
                                                     l8003 0C85  
                                                     l8011 0BB0  
                                                     l2699 0AB8  
                                                     l8101 17DF  
                                                     l8021 0BCD  
                                                     l8013 0BB6  
                                                     l8005 1669  
                                                     l8031 0BFC  
                                                     l8103 17C0  
                                                     l8023 0BCF  
                                                     l8015 0BC2  
                                                     l8201 09A4  
                                                     l8121 17F0  
                                                     l8113 17E5  
                                                     l8041 0C17  
                                                     l8033 0BFC  
                                                     l8025 0BD2  
                                                     l8017 0BC6  
                                                     l8009 0BB0  
                                                     l8105 1762  
                                                     l9001 01BE  
                                                     l8203 09A6  
                                                     l8211 09B2  
                                                     l8131 0AC2  
                                                     l8115 17EA  
                                                     l8043 0C1D  
                                                     l8035 0C07  
                                                     l8027 0BD4  
                                                     l8019 0BCC  
                                                     l9011 01D9  
                                                     l9003 01C1  
                                                     l8125 1639  
                                                     l8205 09A9  
                                                     l8141 0AD1  
                                                     l8133 0AC3  
                                                     l8117 17EB  
                                                     l8045 0C1E  
                                                     l8037 0C0C  
                                                     l8061 0BEC  
                                                     l8053 0BD6  
                                                     l8109 176C  
                                                     l9021 01F2  
                                                     l9013 01DE  
                                                     l9005 01C7  
                                                     l8221 0A2F  
                                                     l8301 059F  
                                                     l8127 1636  
                                                     l8207 09AC  
                                                     l8143 0AD4  
                                                     l8135 0AC5  
                                                     l8119 17ED  
                                                     l8039 0C13  
                                                     l8047 0C20  
                                                     l8151 0A1A  
                                                     l8215 092B  
                                                     l8071 0BFA  
                                                     l8063 0BF2  
                                                     l8055 0BD6  
                                                     l8231 0DFB  
                                                     l9023 01F9  
                                                     l9015 01E0  
                                                     l9007 01D0  
                                                     l8223 0A31  
                                                     l8311 0AA6  
                                                     l8303 05AF  
                                                     l8209 09AF  
                                                     l8137 0ACA  
                                                     l8145 0AD7  
                                                     l8129 0ABB  
                                                     l8161 0EA8  
                                                     l8081 0C33  
                                                     l8153 0A1E  
                                                     l8217 092C  
                                                     l8065 0BF3  
                                                     l8057 0BDC  
                                                     l8241 0CB8  
                                                     l8049 166D  
                                                     l8233 0DFF  
                                                     l8225 0DD9  
                                                     l8401 0A53  
                                                     l9025 020C  
                                                     l9017 01E3  
                                                     l9009 01D7  
                                                     l9041 0224  
                                                     l8313 0AB6  
                                                     l8139 0ACE  
                                                     l8171 0EB8  
                                                     l8163 0EAA  
                                                     l8331 0638  
                                                     l8323 0614  
                                                     l8083 0C3A  
                                                     l8091 0C47  
                                                     l8075 0C23  
                                                     l8155 0A27  
                                                     l8219 0934  
                                                     l8067 0BF5  
                                                     l8059 0BE8  
                                                     l8235 0C9B  
                                                     l8227 0DDB  
                                                     l8403 0A59  
                                                     l9035 021B  
                                                     l9027 0212  
                                                     l9019 01E9  
                                                     l8411 0CF3  
                                                     l8307 0A9B  
                                                     l9051 09EA  
                                                     l8093 163C  
                                                     l8181 0EC8  
                                                     l8173 0EB9  
                                                     l8165 0EAB  
                                                     l8341 064F  
                                                     l8333 063B  
                                                     l8325 061E  
                                                     l8317 060E  
                                                     l8085 0C3E  
                                                     l8077 0C23  
                                                     l8149 0A15  
                                                     l8069 0BF8  
                                                     l8245 0CBA  
                                                     l8237 0C9D  
                                                     l8229 0DE9  
                                                     l8261 039A  
                                                     l8253 037A  
                                                     l9037 0221  
                                                     l9029 0215  
                                                     l8421 0B35  
                                                     l8413 05BE  
                                                     l8309 0AA5  
                                                     l8501 0713  
                                                     l9053 09F0  
                                                     l7703 085A  
                                                     l7711 086B  
                                                     l8095 17D8  
                                                     l8183 0ECD  
                                                     l8175 0EBE  
                                                     l8167 0EAC  
                                                     l8159 0EA1  
                                                     l8191 179F  
                                                     l8343 0655  
                                                     l8335 0645  
                                                     l8327 0627  
                                                     l8087 0C44  
                                                     l8079 0C2E  
                                                     l8407 172D  
                                                     l8239 0CA7  
                                                     l8247 0CBE  
                                                     l8351 097A  
                                                     l8271 03B5  
                                                     l8263 03A0  
                                                     l8255 037B  
                                                     l8511 1747  
                                                     l8415 0B1F  
                                                     l8431 0E8A  
                                                     l8423 0E6B  
                                                     l8503 0719  
                                                     l9071 0800  
                                                     l9055 09F5  
                                                     l9063 09FA  
                                                     l7705 0862  
                                                     l7713 0873  
                                                     l7721 0884  
                                                     l7801 1699  
                                                     l8097 17D9  
                                                     l8193 16A3  
                                                     l8185 0ED0  
                                                     l8177 0EC2  
                                                     l8169 0EB3  
                                                     l8329 062F  
                                                     l8521 0D22  
                                                     l8089 0C45  
                                                     l8249 0CC4  
                                                     l8273 03B7  
                                                     l8265 03A6  
                                                     l8281 03C1  
                                                     l8257 0385  
                                                     l8361 06AE  
                                                     l9081 0466  
                                                     l8417 0B24  
                                                     l8425 0E73  
                                                     l8441 04EE  
                                                     l8433 04C4  
                                                     l8505 071C  
                                                     l9073 0800  
                                                     l9057 09F8  
                                                     l9049 09E4  
                                                     l9161 0960  
                                                     l7707 0869  
                                                     l7715 087A  
                                                     l7723 088B  
                                                     l7803 169C  
                                                     l8099 17DC  
                                                     l8187 0ED3  
                                                     l8179 0EC7  
                                                     l8339 064B  
                                                     l8451 08C0  
                                                     l8523 0D2A  
                                                     l8531 0D58  
                                                     l8347 096D  
                                                     l8283 0400  
                                                     l8267 03A9  
                                                     l8259 038F  
                                                     l8371 06BD  
                                                     l8363 06B0  
                                                     l8355 06A0  
                                                     l8515 1750  
                                                     l9083 04AC  
                                                     l9067 164E  
                                                     l8419 0B30  
                                                     l8427 0E76  
                                                     l8443 0507  
                                                     l8435 04CA  
                                                     l8507 0723  
                                                     l9075 0808  
                                                     l8611 16EE  
                                                     l8603 1700  
                                                     l9163 0963  
                                                     l9155 0957  
                                                     l8197 099C  
                                                     l7733 088D  
                                                     l7741 089E  
                                                     l7813 1645  
                                                     l7821 164B  
                                                     l8453 08CF  
                                                     l8525 0D3B  
                                                     l8533 0D69  
                                                     l8541 0D97  
                                                     l8349 0974  
                                                     l8269 03AF  
                                                     l8381 06CC  
                                                     l8373 06C1  
                                                     l8365 06B4  
                                                     l8357 06A7  
                                                     l8701 0ED9  
                                                     l9085 04B5  
                                                     l8429 0E85  
                                                     l8293 057B  
                                                     l8445 050D  
                                                     l8437 04D7  
                                                     l8509 0726  
                                                     l9077 080A  
                                                     l8605 1706  
                                                     l9165 0966  
                                                     l9157 095A  
                                                     l7831 1633  
                                                     l8199 09A3  
                                                     l7719 087C  
                                                     l7727 09B4  
                                                     l7735 0895  
                                                     l7743 08A6  
                                                     l7751 08B7  
                                                     l7823 162F  
                                                     l7815 1685  
                                                     l7807 1694  
                                                     l8519 0D22  
                                                     l8527 0D50  
                                                     l8463 08E2  
                                                     l8535 0D7E  
                                                     l8279 03B9  
                                                     l8391 06DC  
                                                     l8383 06D0  
                                                     l8375 06C4  
                                                     l8367 06B8  
                                                     l8359 06AB  
                                                     l8703 0EE7  
                                                     l8711 0F05  
                                                     l8471 072E  
                                                     l8551 0B85  
                                                     l8543 0B65  
                                                     l8295 0587  
                                                     l8287 056C  
                                                     l8439 04ED  
                                                     l8447 0516  
                                                     l8631 16D0  
                                                     l8623 16E2  
                                                     l8607 16F4  
                                                     l9167 0969  
                                                     l9159 095D  
                                                     l7681 17F3  
                                                     l7761 0847  
                                                     l7729 09CA  
                                                     l7737 089C  
                                                     l7745 08AD  
                                                     l7753 08BE  
                                                     l7833 1676  
                                                     l7841 173E  
                                                     l7905 078D  
                                                     l7817 1688  
                                                     l7809 1697  
                                                     l8457 08D1  
                                                     l8529 0D50  
                                                     l8465 08F1  
                                                     l8537 0D7E  
                                                     l8561 0E23  
                                                     l8393 06DE  
                                                     l8385 06D2  
                                                     l8377 06C6  
                                                     l8369 06BB  
                                                     l8705 0EEF  
                                                     l8481 0755  
                                                     l8473 0738  
                                                     l8545 0B71  
                                                     l8297 0590  
                                                     l8289 0578  
                                                     l8721 0A95  
                                                     l8713 0A7F  
                                                     l8625 16E8  
                                                     l8801 0FBF  
                                                     l8609 16FA  
                                                     l9169 16AD  
                                                     l7691 1642  
                                                     l7683 17F8  
                                                     l7675 0B42  
                                                     l7827 1631  
                                                     l7771 16B2  
                                                     l7931 0CC6  
                                                     l7835 1678  
                                                     l7843 1740  
                                                     l7851 1727  
                                                     l7915 0795  
                                                     l7923 171E  
                                                     l8459 08E0  
                                                     l8539 0D86  
                                                     l8651 07C0  
                                                     l8563 0E2E  
                                                     l8555 0E07  
                                                     l8395 06E4  
                                                     l8387 06D6  
                                                     l8379 06C8  
                                                     l8491 0A73  
                                                     l8707 0EF9  
                                                     l8483 075D  
                                                     l8475 0741  
                                                     l8547 0B74  
                                                     l8731 17AA  
                                                     l8571 1776  
                                                     l8299 0599  
                                                     l8715 0A85  
                                                     l8627 16D6  
                                                     l8811 175B  
                                                     l8643 170C  
                                                     l9531 00B4  
                                                     l7685 17FE  
                                                     l7677 0B48  
                                                     l7757 0838  
                                                     l7749 08AF  
                                                     l7765 09CC  
                                                     l7693 1661  
                                                     l7933 0CC9  
                                                     l7837 1679  
                                                     l7845 1745  
                                                     l7853 172B  
                                                     l7861 0522  
                                                     l7909 0791  
                                                     l7925 1720  
                                                     l8661 07E5  
                                                     l8653 07C8  
                                                     l8645 07B4  
                                                     l8565 0E32  
                                                     l8557 0E11  
                                                     l8389 06DA  
                                                     l8493 0A7B  
                                                     l8477 0749  
                                                     l8469 072E  
                                                     l8549 0B76  
                                                     l8733 17CE  
                                                     l8581 0418  
                                                     l8725 0A99  
                                                     l8629 16DC  
                                                     l8741 0FD4  
                                                     l8813 175D  
                                                     l8821 065B  
                                                     l9541 00C4  
                                                     l9533 00B5  
                          BMA253_NewAccelDataRdyZ@zNewData 007B  
                                                     l7679 0B57  
                                                     l7687 1794  
                                                     l7759 0840  
                                                     l7695 0849  
                                                     l7767 09E2  
                                                     l7775 1672  
                                                     l7943 0CD2  
                                                     l7927 1723  
                                                     l7783 1680  
                                                     l7791 168D  
                                                     l8663 07E9  
                                                     l8655 07D0  
                                                     l8647 07B4  
                                                     l8671 030C  
                                                     l8559 0E1F  
                                                     l8903 16BE  
                                                     l8399 0A48  
                                                     l8487 0A63  
                                                     l8567 082B  
                                                     l8479 0752  
                                                     l8911 0950  
                                                     l8495 06E8  
                                                     l8591 044D  
                                                     l8583 0419  
                                                     l8575 0402  
                                                     l8719 0A87  
                                                     l8751 0FDF  
                                                     l8743 0FD7  
                                                     l8735 0FC2  
                                                     l8815 1760  
                                                     l8831 066D  
                                                     l8823 0666  
                                                     l8807 178A  
                                                     l9551 00FF  
                                                     l9543 00CC  
                                                     l9535 00B6  
                                                     l7689 163F  
                                                     l7697 0851  
                                                     l9721 0CE4  
                                                     l7937 0CCD  
                                                     l7849 1725  
                                                     l7881 0568  
                                                     l7865 0526  
                                                     l7857 0519  
                                                     l7777 167B  
                                                     l7785 1683  
                                                     l8657 07D4  
                                                     l8649 07BC  
                                                     l8681 0362  
                                                     l8673 0311  
                                                     l8921 0DC6  
                                                     l8913 0DAA  
                                                     l8489 0A66  
                                                     l8569 0834  
                                                     l9713 022C  
                                                     l8665 07F4  
                                                     l8905 0941  
                                                     l8729 17B5  
                                                     l8497 06FD  
                                                     l8585 041E  
                                                     l8593 0452  
                                                     l8577 040D  
                                                     l8761 0FF7  
                                                     l8753 0FE6  
                                                     l8745 0FD9  
                                                     l8737 0FC4  
                                                     l8809 1759  
                                                     l8841 0672  
                                                     l8833 066E  
                                                     l8825 0668  
                                                     l8817 0657  
                                                     l9561 0125  
                                                     l9553 010A  
                                                     l9545 00CE  
                                                     l9537 00B9  
                                                     l9529 00A8  
                                                     l7699 0858  
                                                     l7795 1648  
                                                     l7939 0CD0  
                                                     l7883 056A  
                                                     l7875 052E  
                                                     l7891 076F  
                                                     l7779 167E  
                                                     l7963 169E  
                                                     l9715 0C69  
                                                     l7971 0C4A  
                                                     l8659 07DD  
                                                     l8683 0366  
                                                     l8675 031C  
                                                     l8667 080D  
                                                     l8923 0DD1  
                                                     l8915 0DAC  
                                                     l8691 16C4  
                                                     l8931 0910  
                                                     l8907 0943  
                                                     l8499 0701  
                                                     l8595 0458  
                                                     l8587 042C  
                                                     l8579 0412  
                                                     l8771 0F84  
                                                     l8763 0FF8  
                                                     l8755 0FED  
                                                     l8747 0FDB  
                                                     l8739 0FCB  
                                                     l8851 067A  
                                                     l8843 0673  
                                                     l8835 066F  
                                                     l8827 066A  
                                                     l8819 0659  
                                                     l9571 0167  
                                                     l9563 0128  
                                                     l9555 0115  
                                                     l9547 00DE  
                                                     l9539 00BC  
                                                     l7949 0CD6  
                                                     l7877 0551  
                                                     l7869 052A  
                                                     l9717 07A3  
                                                     l7893 0777  
                                                     l7789 168A  
                                                     l7957 168F  
                                                     l7965 16A0  
                                                     l7973 0C4C  
                                                     l8685 036E  
                                                     l8677 033C  
                                                     l8669 02EF  
                                                     l8917 0DB0  
                                                     l8941 0B9C  
                                                     l8933 0B8A  
                                                     l8925 0904  
                                                     l8909 0947  
                                                     l8597 045A  
                                                     l8589 0447  
                                                     l8781 0F9B  
                                                     l8773 0F86  
                                                     l8765 0FFD  
                                                     l8757 0FF4  
                                                     l8749 0FDD  
                                                     l8861 0682  
                                                     l8853 067C  
                                                     l8845 0674  
                                                     l8837 0670  
                                                     l8829 066C  
                                                     l9557 011B  
                                                     l9549 00ED  
                                                     l9565 012C  
                                                     l7799 1665  
                                                     l7879 055D  
                                                     l9719 0541  
                                                     l7895 077C  
                                                     l7959 1692  
                                                     l7967 16A1  
                                                     l7975 0C4F  
                                                     l8679 0354  
                                                     l8919 0DBB  
                                                     l8695 16A8  
                                                     l8943 0BA3  
                                                     l8935 0B8F  
                                                     l8687 16CA  
                                                     l8927 0909  
                                                     l8951 0E44  
                                                     l8599 0461  
                                                     l8791 0FAF  
                                                     l8783 0F9D  
                                                     l8775 0F8D  
                                                     l8759 0FF6  
                                                     l8871 0692  
                                                     l8863 0683  
                                                     l8855 067E  
                                                     l8847 0676  
                                                     l8839 0671  
                                                     l9567 013B  
                                                     l9559 0121  
                                                     l7897 0786  
                                                     l7985 0C57  
                                                     l8945 0BA9  
                                                     l8937 0B90  
                                                     l8929 090A  
                                                     l8953 0E4A  
                                                     l8961 024F  
                                                     l8793 0FB6  
                                                     l8785 0F9F  
                                                     l8777 0F96  
                                                     l8881 069D  
                                                     l8873 0694  
                                                     l8865 068A  
                                                     l8857 0680  
                                                     l8849 0678  
                                                     l9569 0154  
                                                     l7899 0789  
                                                     l7979 0C53  
                                                     l7995 0C72  
                                                     l8939 0B96  
                                                     l8699 0ED8  
                                                     l8955 0E4F  
                                                     l8947 0E37  
                                                     l8971 0293  
                                                     l8963 025A  
                                                     l8795 0FB8  
                                                     l8787 0FA1  
                                                     l8779 0F99  
                                                     l8891 1788  
                                                     l8883 1780  
                                                     l8875 0696  
                                                     l8867 068C  
                                                     l8859 0681  
                                                     l7997 0C75  
                                                     l8981 017A  
                                                     l8957 0E64  
                                                     l8949 0E3B  
                                                     l8973 02A5  
                                                     l8965 026C  
                                                     l8797 0FB9  
                                                     l8789 0FA8  
                                                     l8885 1783  
                                                     l8877 0698  
                                                     l8869 068F  
                                                     l8893 0917  
                                                     l7999 0C7A  
                                                     l8991 0192  
                                                     l8983 017B  
                                                     l8975 02D5  
                                                     l8967 0271  
                                                     l8959 0245  
                                                     l8799 0FBA  
                                                     l8887 1784  
                                                     l8879 069B  
                                                     l8895 0925  
                                                     STR_1 1822  
                                                     STR_2 1817  
                                                     l8993 019E  
                                                     l8985 017E  
                                                     l8977 02D9  
                                                     l8969 027C  
                                                     l8889 1787  
                                                     STR_3 1817  
                                                     STR_4 1800  
                                                     l8995 01A4  
                                                     l8987 0183  
                                                     l8979 02E2  
                                                     STR_5 1800  
                                                     STR_6 1822  
                                                     l8997 01AD  
                                                     l8989 0189  
                                                     l8999 01B4  
                                                     _LATA 0018  
                                                     _LATB 0019  
                                                     _LATC 001A  
                                                     u4000 0786  
                                                     u4001 0785  
                                                     _LATE 001C  
                                                     u4010 16BD  
                                                     u4011 16BC  
                                                     u4020 0C7A  
                                                     u4100 0BF2  
                                                     u4021 0C79  
                                                     u4101 0BF1  
                                                     u4030 0C82  
                                                     u4110 0C29  
                                                     u4031 0C81  
                                                     u4111 0C28  
                                                     u4200 09A3  
                                                     u4120 0C2E  
                                                     u4040 0BB6  
                                                     u5000 01C7  
                                                     u4201 09A2  
                                                     u4121 0C2D  
                                                     u4041 0BB5  
                                                     u5001 01C6  
                                                     u4130 0C44  
                                                     u4210 0940  
                                                     u4050 0BCC  
                                                     u5010 01DE  
                                                     u4131 0C43  
                                                     u4211 093F  
                                                     u4051 0BCB  
                                                     u5011 01DD  
                                                     u4140 17E4  
                                                     u4060 0C02  
                                                     u4300 03B5  
                                                     u5020 01E9  
                                                     u4220 0A47  
                                                     u4141 17E3  
                                                     u4061 0C01  
                                                     u4301 03B4  
                                                     u5021 01E8  
                                                     u4221 0A46  
                                                     u4150 17EA  
                                                     u4070 0C07  
                                                     u4230 0DE9  
                                                     u5030 021A  
                                                     u4310 0578  
                                                     u4151 17E9  
                                                     u4071 0C06  
                                                     u4231 0DE8  
                                                     u5031 0219  
                                                     u4311 0577  
                                                     u4160 0AC2  
                                                     u4400 064A  
                                                     u4080 0C1D  
                                                     u4240 0E05  
                                                     u5040 0221  
                                                     u4320 0590  
                                                     u4161 0AC1  
                                                     u4401 0649  
                                                     u4081 0C1C  
                                                     u4241 0E04  
                                                     u5041 0220  
                                                     u4321 058F  
                                                     u4170 0ACA  
                                                     u4410 0655  
                                                     u4090 0BDC  
                                                     u4250 0CB8  
                                                     u4330 0599  
                                                     u5050 09EA  
                                                     u4171 0AC9  
                                                     u4411 0654  
                                                     u4091 0BDB  
                                                     u4251 0CB7  
                                                     u4331 0598  
                                                     u5051 09E9  
                                                     u4180 0A27  
                                                     u4260 0CC4  
                                                     u4420 06AB  
                                                     u4340 059F  
                                                     u4500 0516  
                                                     u5060 09F0  
                                                     u4181 0A26  
                                                     u4261 0CC3  
                                                     u4421 06AA  
                                                     u4341 059E  
                                                     u4501 0515  
                                                     u5061 09EF  
                                                     u4190 0EA8  
                                                     u4510 08CD  
                                                     u4270 03A0  
                                                     u4430 06B8  
                                                     u4350 05AF  
                                                     u5070 0808  
                                                     u4191 0EA7  
                                                     u4511 08CB  
                                                     u4271 039F  
                                                     u4431 06B7  
                                                     u4351 05AE  
                                                     u5071 0807  
                                                     u4520 08CE  
                                                     u4280 03A6  
                                                     u5080 04C3  
                                                     u4440 0B24  
                                                     u4360 0AA5  
                                                     u4600 0713  
                                                     u4281 03A5  
                                                     u5081 04C2  
                                                     u4441 0B23  
                                                     u4361 0AA4  
                                                     u4601 0712  
                               LIGHTBLUE_PushButton@button 0020  
                                                     u4530 08DE  
                                                     u4290 03AF  
                                                     u4610 174E  
                                                     u4450 0B35  
                                                     u4370 0AB6  
                                                     u4531 08DC  
                                                     u4291 03AE  
                                                     u4611 174C  
                                                     u4451 0B34  
                                                     u4371 0AB5  
                                                     u4380 061E  
                                                     u4540 08DF  
                                                     u4620 174F  
                                                     u4460 0E9F  
                                                     _PMD0 0796  
                                                     u4381 061D  
                                                     u4461 0E9E  
                                                     _PMD1 0797  
                                                     u4390 0645  
                                                     u4550 08EF  
                                                     u4630 1757  
                                                     u4470 04CA  
                                                     u4710 0412  
                                                     _PMD2 0798  
                                                     u4391 0644  
                                                     u4551 08ED  
                                                     u4631 1755  
                                                     u4471 04C9  
                                                     u4711 0411  
                                                     _PMD3 0799  
                                                     u4560 08F0  
                                                     u4640 1758  
                                                     u4480 04ED  
                                                     u4720 0418  
                                                     _PMD4 079A  
                                                     u4705 0D9D  
                                                     u4465 0E9B  
                                                     u4481 04EC  
                                                     u4721 0417  
                                                     _PMD5 079B  
                                                     u4650 0D2A  
                                                     u4810 036E  
                                                     u4570 0738  
                                                     u4490 050D  
                                                     u4730 0447  
                                                     _PMD6 079C  
                                                     u4651 0D29  
                                                     u4811 036D  
                                                     u4571 0737  
                                                     u4491 050C  
                                                     u4731 0446  
                                                     _PMD7 079D  
                                                     u4580 075D  
                                                     u4900 17AF  
                                                     u4740 0458  
                                                     u5700 010A  
                                                     u4805 0327  
                                                     u4581 075C  
                                                     u4901 17AE  
                                                     u4741 0457  
                                                     u5701 0109  
                                                     u4670 0D58  
                                                     u4830 0EE7  
                                                     u4910 17D3  
                                                     u4590 06FD  
                                                     u5710 0115  
                                                     u4671 0D57  
                                                     u4831 0EE6  
                                                     u4911 17D2  
                                                     u4591 06FC  
                                                     u4735 0443  
                                                     u5711 0114  
                                                     u3960 0B48  
                                                     u4840 0EEB  
                                                     u5720 011B  
                                                     u3961 0B47  
                                                     u4665 0D41  
                                                     u4841 0EEA  
                                                     u4825 0EDC  
                                                     u5721 011A  
                                                     u3970 17F8  
                                                     u4690 0D86  
                                                     u4770 07BC  
                                                     u4850 0EF4  
                                                     u4930 0E64  
                                                     u5730 013A  
                                                     u3971 17F7  
                                                     u4691 0D85  
                                                     u4771 07BB  
                                                     u4851 0EF2  
                                                     u4931 0E63  
                                                     u5731 0139  
                                                     u3980 0521  
                                                     u4780 07D0  
                                                     u4860 0EF5  
                                                     u5740 0153  
                                                     u3981 0520  
                                                     u4685 0D6F  
                                                     u4781 07CF  
                                                     u5741 0152  
                                                     u3990 0568  
                                                     u4790 07E5  
                                                     u4870 0A85  
                                                     u5750 0175  
                                                     u5670 00C4  
                                                     u3991 0567  
                                                     u4791 07E4  
                                                     u4935 0E60  
                                                     u4871 0A84  
                                                     u5751 0174  
                                                     u5671 00C3  
                                                     u4960 02E2  
                                                     u4880 0A95  
                                                     u5680 00CC  
                                                     u4961 02E1  
                                                     u4945 027F  
                                                     u4881 0A94  
                                                     u5681 00CB  
                                                     u4970 0189  
                                                     u4890 17BA  
                                                     u5690 00EC  
                                                     u4971 0188  
                                                     u4955 02AC  
                                                     u4891 17B9  
                                                     u5691 00EB  
                                                     u4980 01A4  
                                                     u4981 01A3  
                                                     u5767 092F  
                                                     u4995 01B7  
                                            ?_RN487X_Reset 0071  
                          BMA253_GetAccelDataXYZ@accelData 0030  
                                                     _WPUA 1F39  
                                                     _WPUB 1F44  
                                                     _WPUC 1F4F  
                                                     _WPUE 1F65  
                                    ??_EUSART2_Receive_ISR 0071  
                                  ??_wr2RegCompleteHandler 0079  
                                         ??_I2C1_MasterFsm 0020  
                                            _EUSART1_Write 0C23  
                                            ?_RN487X_Write 0076  
                                            _EUSART2_Write 0BFC  
                                ??_I2C1_CallbackReturnStop 0079  
                                                     __hex 0156  
                                                     _main 00A8  
                                                     _peek 0065  
                                            ?_EUSART1_Read 0070  
                                                     _uart 1000  
                                            ?_EUSART2_Read 0070  
                                           _RN487X_ReadMsg 0C9B  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     btemp 007E  
                            ??_LIGHTBLUE_TemperatureSensor 007C  
                                           _RN487X_SendCmd 0DD8  
                         RN487X_SetOutputs@stateHighNibble 0025  
                                                     start 0055  
                                         ??_I2C1_SetBuffer 0073  
                             __end_of_EUSART2_Transmit_ISR 0AFC  
                              __end_of_RN487X_EnterCmdMode 0984  
                                             _statusBuffer 02A0  
                           BMA253_GetAccelDataX@xAccelData 002D  
                                  ??_LIGHTBLUE_AccelSensor 007C  
                            I2C1_CallbackReturnStop@funPtr 0078  
                    __end_of_LIGHTBLUE_ParseIncomingPacket 0244  
                            _LIGHTBLUE_ParseIncomingPacket 0178  
                                  __end_of_TMR0_Initialize 092B  
                                             _do_I2C_RESET 0000  
                            __end_of_OSCILLATOR_Initialize 178A  
                                    _eusart1RxStatusBuffer 00BD  
                                        __end_of_I2C1_Open 0ED6  
                                                    ?_main 0070  
                           ?_RN487X_SetAsyncMessageHandler 0071  
                            __end_of_rn487x_driver_version 1834  
                               __end_of_i2c1_fsmStateTable 1048  
                                                    _OSCEN 0891  
                                                    _TMR0H 059D  
                                                    _TMR0L 059C  
                                                    _TRISA 0012  
                                                    _TRISB 0013  
                                                    _TRISC 0014  
                                                    _TRISE 0016  
                                   ??_I2C1_MasterGetRxData 0071  
                              LIGHTBLUE_PushButton@payload 0021  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 0079  
                                        ??_I2C1_MasterOpen 0071  
                                     _EUSART1_Transmit_ISR 0AFC  
                                        ??_I2C1_MasterStop 0071  
                                        ??_I2C1_Initialize 0071  
                                                    _pHead 0049  
                                  __end_of_PIN_MANAGER_IOC 173E  
                                           ??_RN487X_Delay 0076  
                           BMA253_GetAccelDataY@yAccelData 002D  
                                           ??_RN487X_Reset 0072  
                                    _i2c_read1ByteRegister 060C  
                                           ?_EUSART1_Write 0071  
                                           ??_RN487X_Write 0077  
                                           ?_EUSART2_Write 0071  
                                   __end_of_RN487X_ReadMsg 0CC6  
                                                    pclath 000A  
                                   __end_of_RN487X_SendCmd 0E06  
                                           ??_EUSART1_Read 0071  
                                LIGHTBLUE_PerformAction@id 0029  
                                           ??_EUSART2_Read 0071  
                                                    status 0003  
                                                    wtemp0 007E  
                                             ??_I2C1_DO_RX 0079  
                                             ??_I2C1_DO_TX 0079  
                                          __end_of_strncmp 05BE  
                                   ??_RN487X_SetSystemMode 0072  
               __end_of_EUSART1_DefaultFramingErrorHandler 162D  
                     ??_EUSART1_DefaultFramingErrorHandler 0070  
                      ?_EUSART1_DefaultFramingErrorHandler 0070  
                       _EUSART1_DefaultFramingErrorHandler 162C  
                                   ??_I2C1_DO_ADDRESS_NACK 0079  
                             __end_of_RN487X_EnterDataMode 0A63  
                                             ??_I2C1_Close 0071  
                    __end_of_EUSART2_SetTxInterruptHandler 170C  
                            _EUSART2_SetTxInterruptHandler 1706  
                                            _fsmStateTable 1048  
                                          __initialization 0057  
                                   _rn487x_PrintMessageEnd 05BE  
                                               _i2c_status 0120  
                               __end_of_EUSART1_Initialize 0FC2  
                                             __end_of_main 0178  
                                             __end_of_uart 1028  
                              ?_LIGHTBLUE_GetErrorLedValue 0070  
                                 _LIGHTBLUE_UpdateErrorLed 0A63  
                               __end_of_RN487X_is_rx_ready 1780  
                              ?_INTERRUPT_InterruptManager 0070  
                               ?_LIGHTBLUE_GetDataLedValue 0070  
                           BMA253_GetAccelDataZ@zAccelData 002D  
                                            _do_I2C_DO_ACK 0000  
                                   ??_I2C1_MasterOperation 007B  
                                                   ??_main 0046  
                                ?_rn487x_PrintMessageStart 0070  
                      __end_of_EUSART2_DefaultErrorHandler 165D  
                              _EUSART2_DefaultErrorHandler 1659  
                                  _LIGHTBLUE_PerformAction 0ED6  
                         RN487X_MessageHandler@messageType 0043  
                         __end_of_LIGHTBLUE_SendSerialData 02EE  
                                    ?_EUSART1_Transmit_ISR 0070  
                                       __end_of_I2C1_DO_RX 07B2  
                                       __end_of_I2C1_DO_TX 056C  
                                         _RN487X_DataReady 0A7F  
                                       __end_of_I2C1_Close 09B4  
                               __end_of_EUSART2_Initialize 1000  
                             ??_IOCAF6_SetInterruptHandler 0073  
                                 _eusart2TxBufferRemaining 0060  
                                                   _ANSELA 1F38  
                                                   _ANSELB 1F43  
                                                   _ANSELC 1F4E  
                             ??_LIGHTBLUE_SetErrorLedValue 007B  
                                                   _T0CON0 059E  
                                                   _T0CON1 059F  
                                    _i2c_read2ByteRegister 072C  
                                                   _RC1REG 0119  
                                                   _RC2REG 0A19  
                                                   _RB1PPS 1F19  
                                                   _RB2PPS 1F1A  
                                                   _RC1STA 011D  
                                                   _RB4PPS 1F1C  
                                                   _RC2STA 0A1D  
                                                   i1l1102 165C  
                                                   _RC4PPS 1F24  
                                                   i1l1232 0B1D  
                                                   i1l1304 0053  
                                                   i1l1082 0AFB  
                                                   i1l1243 0A14  
                                                   i1l1252 1654  
                                                   i1l1093 099B  
                                                   i1l1229 0B1B  
                                                   i1l1246 162C  
                                                   i1l1239 0F83  
                                                   i1l1079 0AF9  
                                                   i1l1096 162D  
                                                   i1l1249 1658  
                                                   i1l1089 0F46  
                                                   _ODCONA 1F3A  
                                                   _ODCONB 1F45  
                                                   i1l1099 1660  
                                                   _ODCONC 1F50  
                                                   i1l1444 173D  
                                                   i1l1292 0013  
                                                   _ODCONE 1F66  
                                                   i1l1454 162E  
                                                   i1l1295 0026  
                                                   i1l1448 0828  
                                                   i1l1297 0035  
                                                   i1l1298 0053  
                                                   i1l1299 0044  
                                                   _RN487X 1068  
                                                   i1l9101 0F13  
                                                   i1l9111 0F2D  
                                                   i1l9103 0F18  
                                                   i1l9113 0F33  
                                                   i1l9105 0F1D  
                                                   i1l9121 0B03  
                                          ?_RN487X_ReadMsg 0073  
                                                   i1l9115 0F3C  
                                                   i1l9107 0F23  
                                                   i1l9131 0F47  
                                                   i1l9123 0B0A  
                                                   i1l9117 0F43  
                                                   i1l9109 0F28  
                                                   i1l9141 0F63  
                                                   i1l9133 0F4D  
                                                   i1l9125 0B0F  
                                                   i1l9143 0F69  
                                                   i1l9135 0F52  
                                                   i1l9127 0B15  
                                                   i1l9119 0AFC  
                                                   i1l9151 1735  
                                                   i1l9145 0F6F  
                                                   i1l9137 0F58  
                                                   i1l9129 0B16  
                                                   i1l9153 173A  
                                                   i1l9147 0F79  
                                                   i1l9139 0F5E  
                                                   i1l9091 0AE8  
                                                   i1l8621 0996  
                                                   i1l8613 0984  
                                                   i1l9149 0F80  
                                                   i1l9093 0AED  
                                                   i1l8615 098B  
                                                   i1l9095 0AF3  
                                                   i1l9087 0ADA  
                                                   i1l8641 0A10  
                                                   i1l8633 09FC  
                                                   i1l8617 098F  
                                                   i1l9097 0AF4  
                                                   i1l9089 0AE1  
                                                   _INLVLA 1F3C  
                                                   _INLVLB 1F47  
                                                   i1l8635 0A04  
                                                   i1l8803 1655  
                                                   i1l8619 0995  
                                                   i1l9099 0F0E  
                                                   _INLVLC 1F52  
                                                   i1l8637 0A09  
                                                   i1l8805 1651  
                                                   i1l8901 0826  
                                                   i1l8639 0A0F  
                                                   i1l9471 000F  
                                                   i1l9481 002E  
                                                   i1l9473 0017  
                                                   i1l9483 0039  
                                                   i1l9475 001B  
                                                   i1l9467 0006  
                                                   i1l9485 003D  
                                                   i1l9477 001F  
                                                   i1l9469 000B  
                                                   i1l8767 165D  
                                                   i1l9487 0048  
                                                   i1l9479 002A  
                                                   i1l8769 1659  
                                                   i1l9489 004C  
                                                   i1l8897 081A  
                                                   i1l8899 0821  
                                                   u510_20 0AF3  
                                                   u510_21 0AF2  
                                                   u511_20 0F18  
                                                   u511_21 0F17  
                                                   u512_20 0F28  
                                                   u512_21 0F27  
                                                   u513_20 0F3C  
                                                   u513_21 0F3B  
                                                   u514_20 0B03  
                                                   u514_21 0B02  
                                                   u515_20 0B15  
                                                   u515_21 0B14  
                                                   u516_20 0F52  
                                                   u516_21 0F51  
                                                   u517_20 0F63  
                                                   u509_20 0AE1  
                                                   u517_21 0F62  
                                                   u509_21 0AE0  
                                                   u518_20 0F79  
                                                   u518_21 0F78  
                                                   u519_20 173A  
                                                   u519_21 1739  
                                                   u560_20 002A  
                                                   u560_21 0029  
                                                   u561_20 002E  
                                                   u561_21 002D  
                       __end_of_RN487X_ReadDefaultResponse 0402  
                               _RN487X_ReadDefaultResponse 037A  
                                                   u562_20 0039  
                                                   u562_21 0038  
                                                   u475_20 0995  
                                                   u563_20 003D  
                                                   u555_20 000B  
                                                   u475_21 0994  
                                                   u563_21 003C  
                                                   u555_21 000A  
                                                   u476_20 0A0F  
                                                   u492_20 0821  
                                                   u564_20 0048  
                                                   u556_20 000F  
                                                   u476_21 0A0E  
                                                   u492_21 0820  
                                                   u564_21 0047  
                                                   u556_21 000E  
                                                   _OSCFRQ 0893  
                                                   u565_20 004C  
                                                   u557_20 0017  
                                                   u565_21 004B  
                                                   u557_21 0016  
                                                   u558_20 001B  
                                                   u558_21 001A  
                                                   u559_20 001F  
                                                   u559_21 001E  
                                          ?_RN487X_SendCmd 0077  
                                                   _TX1REG 011A  
                                                   _TX2REG 0A1A  
                                                   _TX1STA 011E  
                                                   _TX2STA 0A1E  
                                        ?_I2C1_MasterClose 0070  
                             ?_MCP9844_GetTemperatureValue 0070  
                                 rdBlkRegCompleteHandler@p 0078  
                                  ??_I2C1_MasterDisableIrq 0071  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                 ?_I2C1_MasterWaitForEvent 0070  
                                       ??_I2C1_MasterClose 0071  
                                         _I2C1_DO_TX_EMPTY 0CC6  
                              BMA253_GetAccelDataX@lsbData 002E  
                              BMA253_GetAccelDataX@msbData 002F  
                    __end_ofRN487X_EnterDataMode@cmdPrompt 182D  
                            RN487X_EnterDataMode@cmdPrompt 1828  
                                       ??_I2C1_MasterStart 0071  
                              BMA253_GetAccelDataY@lsbData 002E  
                        BMA253_GetAccelDataXYZ@sensorValue 0031  
                                       ??_I2C1_MasterWrite 007B  
                              BMA253_GetAccelDataY@msbData 002F  
                   LIGHTBLUE_TemperatureSensor@temperature 003D  
                              BMA253_GetAccelDataZ@lsbData 002E  
                              BMA253_GetAccelDataZ@msbData 002F  
                                                   _cmdBuf 01A0  
                                                   _bitMap 0053  
                             __end_of_BMA253_GetAccelDataX 0D4E  
                             __end_of_BMA253_GetAccelDataY 0D7C  
                             __end_of_BMA253_GetAccelDataZ 0DAA  
                                RN487X_FilterData@readChar 0044  
                                 ?_EUSART1_SetErrorHandler 0071  
                                         ?_TMR0_Initialize 0070  
                              _EUSART2_FramingErrorHandler 0152  
                         ??_EUSART1_SetOverrunErrorHandler 0073  
                          ?_EUSART1_SetOverrunErrorHandler 0071  
                        __end_of_LIGHTBLUE_GetDataLedValue 16CA  
                                                   _strchr 0A9B  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                                   _strcpy 0A2E  
                                                   _strlen 0A15  
                                                   _strstr 04C4  
                                        ?_I2C1_SetCallback 0071  
                                   ??_I2C1_DO_RX_NACK_STOP 0071  
                              LIGHTBLUE_SendPacket@payload 0077  
                                    _I2C1_DO_SEND_ADR_READ 173E  
                                           _PMD_Initialize 178A  
                                  _BMA253_NewAccelDataRdyX 08C0  
                                  _BMA253_NewAccelDataRdyY 08D1  
                                  _BMA253_NewAccelDataRdyZ 08E2  
                            ?_I2C1_SetDataCompleteCallback 0075  
                                       ??_I2C1_SetCallback 0074  
                                     _EUSART2_Transmit_ISR 0ADA  
                               LIGHTBLUE_PerformAction@led 002A  
                           __end_ofRN487X_RebootCmd@reboot 1817  
                                   ?_i2c_read1ByteRegister 0024  
                                          ??_EUSART1_Write 0072  
                                          ??_EUSART2_Write 0072  
               IOCAF6_SetInterruptHandler@InterruptHandler 0071  
                                         ?_PIN_MANAGER_IOC 0070  
                                          _eusart1RxBuffer 00C5  
                                                ??_strncmp 0077  
                                  _I2C1_DO_RX_NACK_RESTART 1699  
                                             ??_IOCAF6_ISR 0070  
                                    _RN487X_MessageHandler 06E8  
                                        RN487X_SendCmd@cmd 007A  
                                          _eusart2RxBuffer 00DD  
                                          _eusart1TxBuffer 00CD  
                                        _SYSTEM_Initialize 0957  
                           I2C1_SetDataCompleteCallback@cb 0075  
                                          _eusart2TxBuffer 00E5  
                                  __end_of__initialization 00A4  
                                  _protocol_version_number 1834  
                                         _do_I2C_SEND_STOP 0000  
                          I2C1_MasterOperation@returnValue 0023  
                                       ?_SYSTEM_Initialize 0070  
                                            ??_I2C1_Poller 007B  
                            ??_MCP9844_GetTemperatureValue 007B  
                                  ??_EUSART2_RxDataHandler 0070  
                     __end_ofRN487X_EnterCmdMode@cmdPrompt 1832  
                             RN487X_EnterCmdMode@cmdPrompt 182D  
                            __end_of_EUSART1_RxDataHandler 0A15  
                                  _rdBlkRegCompleteHandler 09B4  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK0 0002  
                                             __pidataBANK2 08F3  
                                      ??_SYSTEM_Initialize 0073  
                         __end_of_I2C1_MasterEnableRestart 1642  
                                     __end_of_RN487X_Delay 1735  
                           ?_EUSART2_SetTxInterruptHandler 0071  
                                 ??_BMA253_GetAccelDataXYZ 007C  
                                     __end_of_RN487X_Reset 17C0  
                                  _MCP9844_CalcTemperature 0B65  
                                     __end_of_RN487X_Write 17CC  
                                ??_LIGHTBLUE_PerformAction 0028  
                                   __end_of_PMD_Initialize 1794  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                           ?_LIGHTBLUE_SendProtocolVersion 0070  
                                  ??_I2C1_MasterSendTxData 0071  
                                       __end_of_IOCAF6_ISR 0829  
                                     __end_of_EUSART1_Read 0BFC  
                                     __end_of_EUSART2_Read 0BD6  
                                      _LIGHTBLUE_SplitByte 0E06  
                                        RN487X_Reset@value 0071  
                                   ??_EUSART1_Transmit_ISR 0070  
                                      _LIGHTBLUE_SplitWord 080C  
                                ?_LIGHTBLUE_GetButtonValue 0070  
                                 ?_EUSART2_SetErrorHandler 0071  
                                     _RN487X_EnterDataMode 0A48  
                                    ?_EUSART2_Transmit_ISR 0070  
                              __end_of_EUSART1_Receive_ISR 0F84  
                                    __end_of_I2C1_DO_RESET 16A3  
                                   ?_i2c_read2ByteRegister 0024  
                                   _do_I2C_DO_NACK_RESTART 0000  
                                __end_of_SYSTEM_Initialize 096D  
                                 _LIGHTBLUE_SendSerialData 0244  
                                            _eusart1RxHead 0059  
                                            _eusart1TxHead 005C  
                                            _eusart2RxHead 007C  
                                            _eusart1RxTail 0058  
                                            _eusart2TxHead 0062  
                                               __pbssBANK0 0047  
                                               __pbssBANK1 00A0  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01A0  
                                               __pbssBANK4 0220  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                                            _eusart2RxTail 005F  
                                            _eusart1TxTail 005B  
                          __end_of_I2C1_MasterWaitForEvent 16BE  
                        _EUSART1_TxDefaultInterruptHandler 014C  
                                            _eusart2TxTail 0061  
                          ??_EUSART1_SetRxInterruptHandler 0073  
                               __end_of_LIGHTBLUE_LedState 0BB0  
                            __end_of_rd2RegCompleteHandler 087C  
                                       _DELAY_milliseconds 092B  
                             __end_of_LIGHTBLUE_Initialize 16C4  
                                     I2C1_Open@returnValue 0072  
                         ??_EUSART2_SetFramingErrorHandler 0073  
                          ?_EUSART2_SetFramingErrorHandler 0071  
                                     ?_LIGHTBLUE_SplitByte 0076  
                                     ?_LIGHTBLUE_SplitWord 0079  
                            __end_of_wr2RegCompleteHandler 088D  
                                    _rd1RegCompleteHandler 085A  
                                    EUSART2_Read@readValue 0072  
                                        _I2C1_DO_SEND_STOP 168A  
                                    _wr1RegCompleteHandler 0849  
                          __end_of_EUSART1_SetErrorHandler 16D6  
                                      ?_DELAY_milliseconds 0071  
                                               __pmaintext 00A8  
                           LIGHTBLUE_SendSerialData@length 0078  
                                       ?_I2C1_DO_SEND_STOP 0070  
                         rn487x_PrintMessage@passedMessage 0077  
                          rn487x_PrintMessage@messageIndex 0040  
                                          _I2C1_MasterOpen 17E5  
                                               __pintentry 0004  
                                          _I2C1_MasterStop 1642  
                                          _I2C1_Initialize 1759  
                             __end_of_LIGHTBLUE_SendPacket 037A  
                                      __end_of_I2C1_Poller 17E5  
                            __end_of_LIGHTBLUE_AccelSensor 0DD8  
                                ??_BMA253_NewAccelDataRdyX 007B  
                                ??_BMA253_NewAccelDataRdyY 007B  
                                ??_BMA253_NewAccelDataRdyZ 007B  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strchr 0071  
                                      ??_I2C1_DO_SEND_STOP 0071  
                                                  ?_strcpy 0071  
                                                  ?_strlen 0071  
                   __end_of_EUSART1_SetFramingErrorHandler 16DC  
                           _EUSART1_SetFramingErrorHandler 16D6  
                                                  ?_strstr 0078  
                                    _eusart2RxStatusBuffer 00D5  
                                    ?_RN487X_EnterDataMode 0070  
                             ?_EUSART1_DefaultErrorHandler 0070  
                                        _I2C1_MasterIsNack 16B2  
                                                  _SP1BRGH 011C  
                                                  _SP1BRGL 011B  
                                                  _SP2BRGH 0A1C  
                                                  _SP2BRGL 0A1B  
                                     ??_DELAY_milliseconds 0073  
                                                  _OSCCON1 088D  
                                                  _OSCCON3 088F  
                                                _I2C1_Open 0EA0  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F1210 08C0  
          _wr1RegCompleteHandler@i2c1_master_example$F1210 08AF  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F1204 08AF  
          _rd2RegCompleteHandler@i2c1_master_example$F1204 089E  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F1216 0849  
          _wr2RegCompleteHandler@i2c1_master_example$F1216 0838  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F1227 09E4  
        _rdBlkRegCompleteHandler@i2c1_master_example$F1227 09CC  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F1193 089E  
          _rd1RegCompleteHandler@i2c1_master_example$F1193 088D  
                              __end_of_EUSART2_Receive_ISR 0F47  
                       __end_of_IOCAF6_SetInterruptHandler 1712  
                               _IOCAF6_SetInterruptHandler 170C  
                                ??_I2C1_DO_RX_NACK_RESTART 0071  
                                                  _OSCSTAT 0890  
                                                  _OSCTUNE 0892  
                                        _I2C1_MasterSetIrq 164B  
                                                  _SSP1ADD 018D  
                                                  _SLRCONA 1F3B  
                                                  _SLRCONB 1F46  
                                                  _SLRCONC 1F51  
                                                  _SSP1BUF 018C  
                                                  _SSP1MSK 018E  
                       __end_of_LIGHTBLUE_SetErrorLedValue 0838  
                               _LIGHTBLUE_SetErrorLedValue 0829  
                                       ?_I2C1_MasterIsNack 0070  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   ?_RN487X_MessageHandler 0041  
                           ??_I2C1_SetDataCompleteCallback 0078  
                                       ?_I2C1_MasterSetIrq 0070  
                                     _BMA253_GetAccelDataX 0D20  
                                     _BMA253_GetAccelDataY 0D4E  
                                     _BMA253_GetAccelDataZ 0D7C  
                                       RN487X_ReadMsg@resp 0078  
                                  _TMR0_HasOverflowOccured 16AD  
                                          _asyncBufferSize 0066  
                                    ??_LIGHTBLUE_SplitByte 0077  
                                       _i2c1_fsmStateTable 1028  
                                       _i2c1_driver_i2cISR 004D  
                                    ??_LIGHTBLUE_SplitWord 007B  
                                      ??_I2C1_MasterIsNack 0071  
                                                  _i2c_ISR 0000  
                                __end_of_I2C1_DO_SEND_STOP 168F  
                                ??_rdBlkRegCompleteHandler 0079  
                               ??_LIGHTBLUE_UpdateErrorLed 007B  
                                       I2C1_SetCallback@cb 0071  
                                  ?_rn487x_PrintMessageEnd 0070  
                                      _rn487x_PrintMessage 0E6B  
                                      ??_I2C1_MasterSetIrq 0071  
                         RN487X_SetAsyncMessageHandler@len 0073  
                                        _RN487X_FilterData 0402  
                                 __end_of_RN487X_DataReady 0A9B  
                             __end_of_LIGHTBLUE_PushButton 0917  
                                ??_MCP9844_CalcTemperature 002F  
                                       ?_RN487X_FilterData 0070  
                                      _EUSART1_is_rx_ready 1750  
                               __end_of_EUSART1_is_tx_done 1671  
                          __end_of_EUSART2_SetErrorHandler 16F4  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                LIGHTBLUE_ParseIncomingPacket@receivedByte 0033  
                                      _EUSART1_is_tx_ready 0000  
                                        _RN487X_IndicateRx 17AA  
                              ??_LIGHTBLUE_GetDataLedValue 0071  
                                                  __ptext1 16AD  
                                                  __ptext2 0957  
                                                  __ptext3 0917  
                                                  __ptext4 178A  
                                                  __ptext5 0657  
                                                  __ptext6 170C  
                                                  __ptext7 1780  
                                                  __ptext8 1759  
                                                  __ptext9 0FC2  
                                 _I2C1_MasterEnableRestart 163F  
                         MCP9844_CalcTemperature@lowerByte 0035  
                                __end_of_I2C1_MasterIsNack 16B8  
                             ?_I2C1_SetAddressNackCallback 0075  
                                      ??_RN487X_FilterData 0167  
                                     ?_rn487x_PrintMessage 0077  
               __end_of_EUSART2_DefaultOverrunErrorHandler 1661  
                     ??_EUSART2_DefaultOverrunErrorHandler 0070  
                      ?_EUSART2_DefaultOverrunErrorHandler 0070  
                       _EUSART2_DefaultOverrunErrorHandler 165D  
                                    _OSCILLATOR_Initialize 1780  
                                   ??_EUSART2_Transmit_ISR 0070  
                                       ?_RN487X_IndicateRx 0071  
                                __end_of_I2C1_MasterSetIrq 164E  
                                 __end_of_I2C1_DO_TX_EMPTY 0CF3  
                                       _EUSART1_Initialize 0F84  
                                 ??_PIN_MANAGER_Initialize 0073  
                                                _IOCAFbits 1F3F  
                                    _rn487x_driver_version 1832  
                                               ?_I2C1_Open 0070  
                                         ??_RN487X_ReadMsg 0076  
                                                _IOCANbits 1F3E  
                                                _IOCAPbits 1F3D  
                                         ??_RN487X_SendCmd 0078  
                            ??_EUSART1_DefaultErrorHandler 0071  
                                 ?_I2C1_CallbackReturnStop 0078  
                                       _RN487X_is_rx_ready 1776  
                   MCP9844_GetTemperatureValue@temperature 007B  
                                 _do_I2C_SEND_RESTART_READ 0000  
                                  i2c_read1ByteRegister@d2 0029  
                                                  clrloop0 1713  
                                      ??_RN487X_IndicateRx 0072  
                                    ?_BMA253_GetAccelDataX 0070  
                                    ?_BMA253_GetAccelDataY 0070  
                                    ?_BMA253_GetAccelDataZ 0070  
                                                  _strncmp 056C  
                        rn487x_PrintMessage@printCharacter 0020  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1680  
                                     end_of_initialization 00A4  
                               __end_of_I2C1_MasterSendAck 1669  
               __end_of_RN487X_Read@rn487x_interface$F1335 176C  
                       _RN487X_Read@rn487x_interface$F1335 1762  
                      ?_RN487X_Read@rn487x_interface$F1336 0070  
                     ??_RN487X_Read@rn487x_interface$F1338 0073  
                                     ?_EUSART1_is_rx_ready 0070  
                      __end_of_LIGHTBLUE_TemperatureSensor 0957  
                              _LIGHTBLUE_TemperatureSensor 0941  
                                      _I2C1_MasterClearIrq 1633  
                                      ?_EUSART1_Initialize 0070  
                               __end_of_EUSART2_is_tx_done 166D  
                           __end_of_rn487x_PrintMessageEnd 060C  
                              ?_RN487X_ReadDefaultResponse 0070  
                                                  init_ram 1718  
                               __end_of_I2C1_MasterStartRx 1648  
                              _EUSART1_OverrunErrorHandler 0146  
                                   ?_rd1RegCompleteHandler 0078  
                                                  initloop 1719  
                                   _I2C1_DO_SEND_ADR_WRITE 1725  
                         MCP9844_CalcTemperature@upperByte 0034  
                                      ?_RN487X_is_rx_ready 0070  
                                __end_of_RN487X_FilterData 0466  
                             __end_of_I2C1_DO_SEND_RESTART 168A  
                                  __end_of_I2C1_MasterOpen 17F2  
                                   ?_wr1RegCompleteHandler 0078  
                                  __end_of_I2C1_MasterStop 1645  
                                  __end_of_I2C1_Initialize 1762  
                    __end_of_EUSART1_SetRxInterruptHandler 16E8  
                            _EUSART1_SetRxInterruptHandler 16E2  
                                              _I2C1_Poller 17D8  
                                ?_I2C1_CallbackReturnReset 0078  
                                       _EUSART2_Initialize 0FC2  
                            __end_of_I2C1_MasterDisableIrq 163C  
                                              _I2C1_Status 00A0  
                              LIGHTBLUE_PerformAction@data 0027  
                          __end_of_protocol_version_number 1836  
                               __end_of_RN487X_IsConnected 1651  
                                _do_I2C_SEND_RESTART_WRITE 0000  
                                      _I2C1_MasterSendNack 1661  
                      __end_of_I2C1_SetAddressNackCallback 17AA  
                              _I2C1_SetAddressNackCallback 179F  
                                __end_of_RN487X_IndicateRx 17B5  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0071  
                                     ??_EUSART1_Initialize 0073  
                                                  strchr@c 0073  
                                                  strchr@s 0071  
                                           ??_I2C1_DO_RCEN 0071  
                               LIGHTBLUE_SplitByte@payload 0078  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1685  
                               _I2C1_DO_SEND_RESTART_WRITE 1680  
                                      ?_EUSART2_Initialize 0070  
                                                  strcpy@d 0075  
                                                  strlen@a 0074  
                                      _EUSART2_is_rx_ready 1747  
                                                  strlen@s 0071  
                                               _returnStop 0000  
                                                  strstr@h 0078  
                                                  strstr@n 007A  
                                      _EUSART2_is_tx_ready 0000  
                                                _PORTAbits 000C  
                                     ??_RN487X_is_rx_ready 0071  
                                        _RN487X_SetOutputs 06A0  
                          __end_of_rdBlkRegCompleteHandler 09CC  
                                    ??_rn487x_PrintMessage 0079  
                                   ??_RN487X_EnterDataMode 007B  
                                     _LIGHTBLUE_Initialize 16BE  
                                  _statusBuffer@main$F3732 0320  
                                  ??_i2c_read1ByteRegister 007B  
                                       ?_RN487X_SetOutputs 0020  
                                  _IOCAF6_InterruptHandler 006C  
                            ??_I2C1_SetAddressNackCallback 0079  
                                   RN487X_Delay@delayCount 0074  
                                                _TRISAbits 0012  
                          I2C1_SetDataCompleteCallback@ptr 0077  
                                ??_TMR0_HasOverflowOccured 0071  
                           I2C1_CallbackReturnReset@funPtr 0078  
                                     ?_I2C1_MasterSendNack 0070  
                                      EUSART1_Write@txData 0071  
                                    ??_EUSART1_is_rx_ready 0071  
                                      ??_RN487X_SetOutputs 007B  
                                             _RN487X_Delay 172D  
                                     RN487X_ReadMsg@msgLen 0075  
                                     ??_EUSART2_Initialize 0073  
                                     ?_EUSART2_is_rx_ready 0070  
                                   _BMA253_GetAccelDataXYZ 07B2  
                                     _LIGHTBLUE_SendPacket 02EE  
                                             _RN487X_Reset 17B5  
                                _LIGHTBLUE_GetDataLedValue 16C4  
                                             _RN487X_Write 17C0  
                                           __end_of_RN487X 107A  
                                             _EUSART1_Read 0BD6  
                                             _EUSART2_Read 0BB0  
                         __end_of_LIGHTBLUE_GetButtonValue 16D0  
                            RN487X_SetOutputs@ioHighNibble 0024  
                                     _timer0ReloadVal16bit 0047  
                            __end_of_EUSART2_RxDataHandler 099C  
                                              _do_I2C_IDLE 0000  
                                              _do_I2C_RCEN 0000  
                                    ??_I2C1_MasterClearIrq 0071  
                                 _rn487x_PrintMessageStart 0CF3  
                                __end_of_RN487X_SetOutputs 06E8  
                                           _I2C1_DO_RX_ACK 168F  
                                   ?_OSCILLATOR_Initialize 0070  
                                    ?_LIGHTBLUE_Initialize 0070  
                                            ??_RN487X_Init 0076  
                                            ??_RN487X_Read 007C  
                               ??_LIGHTBLUE_SendSerialData 0077  
                          RN487X_FilterData@asyncBuffering 0063  
                          __end_of_I2C1_CallbackReturnStop 1631  
                            __end_of_I2C1_MasterSendTxData 1676  
                                           __end_of_strchr 0AB9  
                                  ??_i2c_read2ByteRegister 0026  
                                           __end_of_strcpy 0A48  
                                           __end_of_strlen 0A2E  
                                           __end_of_strstr 0519  
                                      start_initialization 0057  
                             LIGHTBLUE_AccelSensor@payload 0033  
                                              ??_I2C1_Open 0071  
                                      _i2c_busCollisionISR 0000  
                          RN487X_SetOutputs@stateLowNibble 0023  
                   LIGHTBLUE_SendProtocolVersion@dataIndex 0036  
                                   ??_BMA253_GetAccelDataX 002A  
                                   ??_BMA253_GetAccelDataY 002A  
                                   ??_BMA253_GetAccelDataZ 002A  
                                    ??_I2C1_MasterSendNack 0071  
            EUSART1_SetRxInterruptHandler@interruptHandler 0071  
            EUSART1_SetTxInterruptHandler@interruptHandler 0071  
            EUSART2_SetRxInterruptHandler@interruptHandler 0071  
            EUSART2_SetTxInterruptHandler@interruptHandler 0071  
                                     _LIGHTBLUE_PushButton 0904  
                                 LIGHTBLUE_SplitByte@value 0076  
                                    ??_EUSART2_is_rx_ready 0071  
                                    __end_of_EUSART1_Write 0C4A  
                                    __end_of_EUSART2_Write 0C23  
                                    ?_LIGHTBLUE_SendPacket 0077  
                          ??_LIGHTBLUE_SendProtocolVersion 0020  
                                   rd1RegCompleteHandler@p 0078  
                                 I2C1_SetBuffer@bufferSize 0071  
                                         ?_I2C1_MasterOpen 0070  
                   __end_of_EUSART2_SetOverrunErrorHandler 1700  
                           _EUSART2_SetOverrunErrorHandler 16FA  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                   MCP9844_CalcTemperature@temperatureData 0036  
                                         ??_PMD_Initialize 0071  
                             i2c_read1ByteRegister@address 0025  
                                   __end_of_I2C1_DO_RX_ACK 1694  
                                   wr1RegCompleteHandler@p 0078  
                                    _EUSART1_RxDataHandler 09FC  
                                  ??_I2C1_DO_SEND_ADR_READ 0071  
                           ?_EUSART1_SetRxInterruptHandler 0071  
                                       _LIGHTBLUE_LedState 0B8A  
                                              __pdataBANK0 006E  
                                              __pdataBANK2 0156  
                                                 ??_strchr 0075  
                                                 ??_strcpy 0073  
                                                 ??_strlen 0073  
                                         I2C1_Open@address 0071  
                                           _eusart1RxCount 0057  
                                                 ??_strstr 0020  
                                           _eusart2RxCount 005E  
                                      ?_LIGHTBLUE_LedState 0070  
                                  ??_RN487X_MessageHandler 007C  
                                              __pbssCOMMON 007C  
                                     _I2C1_DO_SEND_RESTART 1685  
                        _EUSART1_RxDefaultInterruptHandler 014A  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00EF  
                                            __pcstackBANK2 0167  
                           ?_LIGHTBLUE_ParseIncomingPacket 0070  
                              ?_IOCAF6_SetInterruptHandler 0071  
                                                _do_I2C_RX 0000  
                                                _do_I2C_TX 0000  
                                    ?_LIGHTBLUE_PushButton 0070  
                                      __end_of_RN487X_Init 04C4  
                                      __end_of_RN487X_Read 080C  
                              ?_LIGHTBLUE_SetErrorLedValue 0070  
                              ??_I2C1_DO_SEND_RESTART_READ 0071  
                                      EUSART2_Write@txData 0071  
                          ??_EUSART1_SetTxInterruptHandler 0073  
                                      _RN487X_EnterCmdMode 096D  
                                     __end_of_I2C1_DO_IDLE 167B  
                         ??_EUSART1_SetFramingErrorHandler 0073  
                          ?_EUSART1_SetFramingErrorHandler 0071  
                          ??_EUSART2_SetRxInterruptHandler 0073  
                                     __end_of_I2C1_DO_RCEN 1725  
                      __end_of_MCP9844_GetTemperatureValue 0800  
                              _MCP9844_GetTemperatureValue 07F3  
                            I2C1_SetAddressNackCallback@cb 0075  
                                                _dataReady 0064  
                                          _do_I2C_TX_EMPTY 0000  
                                     ??_LIGHTBLUE_LedState 007B  
                                                __pnvBANK0 006C  
                                                __pnvBANK1 00ED  
                                                __pnvBANK2 0144  
                                    _rd2RegCompleteHandler 086B  
                                    __end_of_fsmStateTable 1068  
                                                _main$4713 00EF  
                                   _PIN_MANAGER_Initialize 0657  
                                    _wr2RegCompleteHandler 087C  
                         ??_IOCAF6_DefaultInterruptHandler 0070  
                          ?_IOCAF6_DefaultInterruptHandler 0070  
                               ??_I2C1_MasterEnableRestart 0071  
                                 ?_LIGHTBLUE_PerformAction 0027  
                                           _I2C1_MasterFsm 0C72  
                                        ?_RN487X_DataReady 0070  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                __ptext100 168F  
                                                __ptext101 168A  
                                                __ptext110 1676  
                                                __ptext102 1685  
                                                __ptext111 0CC6  
                                                __ptext103 1680  
                                                __ptext120 162F  
                                                __ptext112 164B  
                                                __ptext104 167B  
                                                __ptext121 09CC  
                                                __ptext113 16B2  
                                                __ptext105 171E  
                                                __ptext130 0838  
                                                __ptext122 08AF  
                                                __ptext114 1671  
                                                __ptext106 076F  
                                                __ptext131 1794  
                                                __ptext123 089E  
                                                __ptext115 1665  
                                                __ptext107 0519  
                                                __ptext140 1633  
                                                __ptext132 0B41  
                                                __ptext124 088D  
                                                __ptext116 1648  
                                                __ptext108 1725  
                                                __ptext133 17F2  
                                                __ptext125 09B4  
                                                __ptext117 1661  
                                                __ptext109 173E  
                                                __ptext150 162D  
                                                __ptext142 1735  
                                                __ptext134 1642  
                                                __ptext126 087C  
                                                __ptext118 1645  
                                                __ptext151 1659  
                                                __ptext143 081A  
                                                __ptext135 163F  
                                                __ptext127 086B  
                                                __ptext119 1631  
                                                __ptext152 0984  
                                                __ptext144 162E  
                                                __ptext136 163C  
                                                __ptext128 085A  
                                                __ptext153 1655  
                                                __ptext145 0AFC  
                                                __ptext137 099C  
                                                __ptext129 0849  
                                                __ptext154 162C  
                                                __ptext146 0ADA  
                                                __ptext138 1639  
                                                __ptext155 1651  
                                                __ptext147 0F47  
                                                __ptext139 1636  
                                                __ptext156 09FC  
                                                __ptext148 0F0E  
                                                __ptext149 165D  
                             ??_LIGHTBLUE_GetErrorLedValue 0071  
                              _i2c1_driver_busCollisionISR 004F  
                                 _LIGHTBLUE_GetButtonValue 16CA  
                        _EUSART2_TxDefaultInterruptHandler 00ED  
                                       ??_RN487X_DataReady 007C  
                       LIGHTBLUE_SendProtocolVersion@value 0035  
                                     ?_RN487X_EnterCmdMode 0070  
                                   ??_LIGHTBLUE_Initialize 0071  
                                  _I2C1_MasterWaitForEvent 16B8  
                                         _I2C1_MasterClose 1636  
                                           _I2C1_SetBuffer 17F2  
                             ??_INTERRUPT_InterruptManager 0071  
                                           _sequenceNumber 006B  
                              i2c_read2ByteRegister@result 002B  
                                         _I2C1_MasterStart 163C  
                                                _connected 0067  
                                         _I2C1_MasterWrite 16A3  
                                    _LIGHTBLUE_AccelSensor 0DAA  
                                                 _BAUD1CON 011F  
                                                 _BAUD2CON 0A1F  
                    ??_wr2RegCompleteHandler@strncmp$F4351 0079  
                     ?_rd1RegCompleteHandler@strncmp$F4343 0078  
                    ??_rd1RegCompleteHandler@strncmp$F4345 0079  
                     ?_wr1RegCompleteHandler@strncmp$F4337 0078  
                     ?_rd2RegCompleteHandler@strncmp$F4346 0078  
                    ??_wr1RegCompleteHandler@strncmp$F4339 0079  
                   ?_rdBlkRegCompleteHandler@strncmp$F4355 0078  
                    ??_rd2RegCompleteHandler@strncmp$F4348 0079  
                  ??_rdBlkRegCompleteHandler@strncmp$F4357 0079  
                     ?_wr2RegCompleteHandler@strncmp$F4349 0078  
               __end_of_EUSART1_DefaultOverrunErrorHandler 1659  
                     ??_EUSART1_DefaultOverrunErrorHandler 0070  
                      ?_EUSART1_DefaultOverrunErrorHandler 0070  
                       _EUSART1_DefaultOverrunErrorHandler 1655  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                     _EUSART1_ErrorHandler 0144  
                             ?_EUSART2_DefaultErrorHandler 0070  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                  _EUSART1_SetErrorHandler 16D0  
                              __end_of_LIGHTBLUE_SplitByte 0E37  
                         __end_of_I2C1_CallbackReturnReset 1633  
                              __end_of_LIGHTBLUE_SplitWord 081A  
                                 LIGHTBLUE_SplitWord@value 0079  
                                       ??_I2C1_DO_TX_EMPTY 0079  
                                   ??_LIGHTBLUE_SendPacket 0078  
                                       _EUSART1_is_tx_done 166D  
                                  ??_rd1RegCompleteHandler 0079  
                                                 ?_strncmp 0071  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0071  
                                  ??_wr1RegCompleteHandler 0079  
                     LIGHTBLUE_SendProtocolVersion@payload 0022  
                                        ??_TMR0_Initialize 0071  
                                         _I2C1_SetCallback 0B41  
                                        _RN487X_is_tx_done 176C  
                                   i2c_read1ByteRegister@e 0026  
                                                 _LATAbits 0018  
                  EUSART1_SetErrorHandler@interruptHandler 0071  
                  EUSART2_SetErrorHandler@interruptHandler 0071  
                                   i2c_read1ByteRegister@x 0027  
                                                 _LATCbits 001A  
                                               _I2C1_DO_RX 076F  
                                               _I2C1_DO_TX 0519  
                                      ?_EUSART1_is_tx_done 0070  
                                                clear_ram0 1712  
                                                 _PIE0bits 0716  
                                                 _PIE3bits 0719  
                 LIGHTBLUE_ParseIncomingPacket@parserState 006A  
                                               _I2C1_Close 099C  
                    __end_of_LIGHTBLUE_SendProtocolVersion 0E6B  
                            _LIGHTBLUE_SendProtocolVersion 0E37  
                                       ?_RN487X_is_tx_done 0070  
                                             ?_I2C1_Poller 0070  
                                   __end_of_I2C1_MasterFsm 0C9B  
                             __end_of_I2C1_MasterGetRxData 164B  
                                                 _PIR0bits 070C  
                                                 _PIR3bits 070F  
                                                 _RX1DTPPS 1ECB  
                                                 _RX2DTPPS 1ECD  
                                   ?_EUSART1_RxDataHandler 0070  
                                       _I2C1_MasterSendAck 1665  
                                 ?_BMA253_NewAccelDataRdyX 0070  
                           DELAY_milliseconds@milliseconds 0071  
                                 ?_BMA253_NewAccelDataRdyY 0070  
                                 ?_BMA253_NewAccelDataRdyZ 0070  
                  __end_of_rn487x_PrintIndicatorCharacters 0B41  
                        ??_rn487x_PrintIndicatorCharacters 0073  
                         ?_rn487x_PrintIndicatorCharacters 0070  
                          _rn487x_PrintIndicatorCharacters 0B1E  
                                _I2C1_DO_SEND_RESTART_READ 167B  
                                                 _SSP1CON1 0190  
                                                 _SSP1CON2 0191  
                                       _EUSART2_is_tx_done 1669  
                                   __end_of_I2C1_SetBuffer 1800  
                                                 _SSP1STAT 018F  
                                        ??_PIN_MANAGER_IOC 0070  
                                      ??_RN487X_is_tx_done 0071  
                                    ??_RN487X_EnterCmdMode 007B  
                     __end_of_I2C1_SetDataCompleteCallback 179F  
                             _I2C1_SetDataCompleteCallback 1794  
                                       _I2C1_MasterStartRx 1645  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      ?_I2C1_MasterSendAck 0070  
                           LIGHTBLUE_AccelSensor@accelData 0040  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                ?_LIGHTBLUE_UpdateErrorLed 0070  
                                      RN487X_ReadMsg@index 0079  
               rn487x_PrintIndicatorCharacters@messageType 0073  
                                     ??_EUSART1_is_tx_done 0071  
                                              _RN487X_Init 0466  
                                              _RN487X_Read 0800  
                                      ?_EUSART2_is_tx_done 0070  
                             __end_of_RN487X_SetSystemMode 17D8  
                                      ?_I2C1_MasterStartRx 0070  
                             __end_of_I2C1_DO_ADDRESS_NACK 0C72  
                                   ??_LIGHTBLUE_PushButton 007B  
                                       _RN487X_IsConnected 164E  
                            __end_of_i2c_read1ByteRegister 0657  
                                  ?_BMA253_GetAccelDataXYZ 0070  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 172D  
                            ??_EUSART2_DefaultErrorHandler 0071  
                                            _I2C1_DO_RESET 169E  
                                              _asyncBuffer 004B  
                                    I2C1_Close@returnValue 0071  
                                 ?_rdBlkRegCompleteHandler 0078  
                                __end_of_RN487X_is_tx_done 1776  
                                      I2C1_SetCallback@idx 0074  
                                      I2C1_SetCallback@ptr 0073  
                                      ?_RN487X_IsConnected 0070  
                                LIGHTBLUE_LedState@payload 0020  
                                  _EUSART2_SetErrorHandler 16EE  
                                     ??_I2C1_MasterSendAck 0071  
                    LIGHTBLUE_ParseIncomingPacket@packetID 0068  
                                    EUSART1_Read@readValue 0072  
                                   ?_rd2RegCompleteHandler 0078  
                              _EUSART2_OverrunErrorHandler 0150  
                                      _do_I2C_DO_NACK_STOP 0000  
                                     ??_EUSART2_is_tx_done 0071  
                             __end_of_I2C1_MasterOperation 0ADA  
                               ??_rn487x_PrintMessageStart 0073  
                          __end_of_LIGHTBLUE_PerformAction 0F0E  
                                 ?_MCP9844_CalcTemperature 002D  
                          ??_RN487X_SetAsyncMessageHandler 0074  
                                   ?_wr2RegCompleteHandler 0078  
                                     ??_I2C1_MasterStartRx 0071  
                       LIGHTBLUE_SendSerialData@serialData 0079  
                    __end_of_EUSART1_SetTxInterruptHandler 16EE  
                            _EUSART1_SetTxInterruptHandler 16E8  
                                          ?_I2C1_MasterFsm 0070  
                    __end_of_EUSART2_SetRxInterruptHandler 1706  
                            _EUSART2_SetRxInterruptHandler 1700  
                      LIGHTBLUE_ParseIncomingPacket@length 0069  
       wr1RegCompleteHandler@i2c1_master_example$F1210@ptr 0078  
       rd2RegCompleteHandler@i2c1_master_example$F1204@ptr 0078  
       wr2RegCompleteHandler@i2c1_master_example$F1216@ptr 0078  
     rdBlkRegCompleteHandler@i2c1_master_example$F1227@ptr 0078  
       rd1RegCompleteHandler@i2c1_master_example$F1193@ptr 0078  
                                ??_I2C1_MasterWaitForEvent 0071  
                             RN487X_SetOutputs@ioLowNibble 0022  
                              __end_of_rn487x_PrintMessage 0EA0  
                                    _I2C1_MasterDisableIrq 1639  
                                  ??_OSCILLATOR_Initialize 0071  
                                          ?_I2C1_SetBuffer 0071  
                                     ??_RN487X_IsConnected 0071  
                                   ?_LIGHTBLUE_AccelSensor 0070  
                                   ??_I2C1_DO_SEND_RESTART 0071  
                                ??_EUSART1_SetErrorHandler 0073  
                      __end_of_EUSART1_DefaultErrorHandler 1655  
                              _EUSART1_DefaultErrorHandler 1651  
                                  RN487X_SetOutputs@bitMap 0020  
                              __end_of_EUSART1_is_rx_ready 1759  
                                               _T0CON0bits 059E  
                           __end_of_BMA253_GetAccelDataXYZ 07F3  
                                     _EUSART2_ErrorHandler 014E  
                                           ?_I2C1_DO_RESET 0070  
                       LIGHTBLUE_TemperatureSensor@payload 0038  
                            __end_of_i2c_read2ByteRegister 076F  
                                                 __ptext10 1706  
                                                 __ptext11 1700  
                                                 __ptext20 16D0  
                                                 __ptext12 16FA  
                                                 __ptext21 09E4  
                                                 __ptext13 16F4  
                                                 __ptext30 05BE  
                                                 __ptext22 0800  
                                                 __ptext14 16EE  
                                                 __ptext31 0E6B  
                                                 __ptext23 0A7F  
                                                 __ptext15 0F84  
                                                 __ptext40 17B5  
                                                 __ptext32 0A2E  
                                                 __ptext24 0402  
                                                 __ptext16 16E8  
                                                 __ptext41 17AA  
                                                 __ptext33 0B1E  
                                                 __ptext25 06E8  
                                                 __ptext17 16E2  
                                                 __ptext50 0178  
                                                 __ptext42 0941  
                                                 __ptext34 164E  
                                                 __ptext26 04C4  
                                                 __ptext18 16DC  
                                                 __ptext51 0ED6  
                                                 __ptext43 07F3  
                                                 __ptext35 0466  
                                                 __ptext27 056C  
                                                 __ptext19 16D6  
                                                 __ptext60 166D  
                                                 __ptext52 0829  
                                                 __ptext44 0B65  
                                                 __ptext36 1776  
                                                 __ptext28 0A9B  
                                                 __ptext61 1669  
                                                 __ptext53 0A63  
                                                 __ptext45 072C  
                                                 __ptext37 1750  
                                                 __ptext29 0CF3  
                                                 __ptext70 16C4  
                                                 __ptext62 0C9B  
                                                 __ptext54 06A0  
                                                 __ptext46 0244  
                                                 __ptext38 1747  
                                                 __ptext71 16BE  
                                                 __ptext63 1762  
                                                 __ptext55 037A  
                                                 __ptext47 0E37  
                                                 __ptext39 17CC  
                                                 __ptext80 07B2  
                                                 __ptext72 0DAA  
                                                 __ptext64 0BD6  
                                                 __ptext56 0A48  
                                                 __ptext48 0904  
                                                 __ptext81 0D7C  
                                                 __ptext73 080C  
                                                 __ptext65 0BB0  
                                                 __ptext57 096D  
                                                 __ptext49 16CA  
                                                 __ptext90 17E5  
                                                 __ptext82 08E2  
                                                 __ptext74 0E06  
                                                 __ptext66 172D  
                                                 __ptext58 0DD8  
                                                 __ptext91 16A3  
                                                 __ptext83 0D4E  
                                                 __ptext75 02EE  
                                                 __ptext67 092B  
                                                 __ptext59 176C  
                                                 __ptext92 0AB9  
                                                 __ptext84 08D1  
                                                 __ptext76 0A15  
                                                 __ptext68 0B8A  
                                                 __ptext93 17D8  
                                                 __ptext85 0D20  
                                                 __ptext77 17C0  
                                                 __ptext69 16A8  
                                                 __ptext94 16B8  
                                                 __ptext86 08C0  
                                                 __ptext78 0C23  
                                                 __ptext95 0C72  
                                                 __ptext87 060C  
                                                 __ptext79 0BFC  
                                                 __ptext96 0C4A  
                                                 __ptext88 179F  
                                                 __ptext97 169E  
                                                 __ptext89 0EA0  
                                                 __ptext98 1699  
                                                 __ptext99 1694  
                                             _SSP1CON1bits 0190  
                                             _SSP1CON2bits 0191  
                                               _IOCAF6_ISR 081A  
                                               strcpy@dest 0076  
                                 _I2C1_CallbackReturnReset 1631  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
               __end_of_EUSART2_DefaultFramingErrorHandler 162E  
                     ??_EUSART2_DefaultFramingErrorHandler 0070  
                      ?_EUSART2_DefaultFramingErrorHandler 0070  
                       _EUSART2_DefaultFramingErrorHandler 162D  
                          __end_of_BMA253_NewAccelDataRdyX 08D1  
                          __end_of_BMA253_NewAccelDataRdyY 08E2  
                          __end_of_BMA253_NewAccelDataRdyZ 08F3  
                                          _lightBlueSerial 0220  
                              __end_of_I2C1_MasterClearIrq 1636  
                             __end_of_I2C1_DO_RX_NACK_STOP 1699  
                                              ?_I2C1_Close 0070  
                                               _RC1STAbits 011D  
                                               _RC2STAbits 0A1D  
           EUSART1_SetOverrunErrorHandler@interruptHandler 0071  
           EUSART2_SetOverrunErrorHandler@interruptHandler 0071  
                     RN487X_SetAsyncMessageHandler@pBuffer 0071  
                       __end_of_LIGHTBLUE_GetErrorLedValue 16AD  
                               _LIGHTBLUE_GetErrorLedValue 16A8  
                                                 int$flags 007E  
                          __end_of_I2C1_DO_RX_NACK_RESTART 169E  
                             RN487X_GetInputsValues@F12901 006E  
                                 I2C1_MasterOperation@read 0022  
                       __end_of_INTERRUPT_InterruptManager 0055  
                               _INTERRUPT_InterruptManager 0004  
                                    _EUSART2_RxDataHandler 0984  
                                             _SSP1STATbits 018F  
                                 i2c_read1ByteRegister@reg 0024  
                            __end_of_I2C1_DO_SEND_ADR_READ 1747  
                              _EUSART1_FramingErrorHandler 0148  
                                             _I2C1_DO_IDLE 1676  
                                      _EUSART1_Receive_ISR 0F47  
                                             _I2C1_DO_RCEN 171E  
                                    LIGHTBLUE_LedState@led 0023  
                              __end_of_I2C1_MasterSendNack 1665  
                         ??_EUSART2_SetOverrunErrorHandler 0073  
                          ?_EUSART2_SetOverrunErrorHandler 0071  
                                 ?_TMR0_HasOverflowOccured 0070  
                                               _INTCONbits 000B  
                              __end_of_EUSART2_is_rx_ready 1750  
                           I2C1_SetAddressNackCallback@ptr 0077  
                                 ??_rn487x_PrintMessageEnd 0073  
                                           __pstringtext10 1800  
                                           __pstringtext11 1817  
                                           __pstringtext12 1822  
                                           __pstringtext13 0000  
                                     _I2C1_MasterGetRxData 1648  
                                    _I2C1_MasterSendTxData 1671  
                            __end_of_RN487X_MessageHandler 072C  
                                ??_EUSART2_SetErrorHandler 0073  
                                   _do_I2C_DO_ADDRESS_NACK 0000  
                          __end_of_MCP9844_CalcTemperature 0B8A  
                                                 intlevel1 0000  
                             RN487X_MessageHandler@message 0041  
                                       RN487X_Write@txData 0076  
                                 __end_of_I2C1_MasterClose 1639  
                                     ?_EUSART1_Receive_ISR 0070  
                                   rd2RegCompleteHandler@p 0078  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 163F  
                                ?_LIGHTBLUE_SendSerialData 0070  
                                 __end_of_I2C1_MasterWrite 16A8  
                                   RN487X_RebootCmd@reboot 180C  
                   __end_of_EUSART1_SetOverrunErrorHandler 16E2  
                           _EUSART1_SetOverrunErrorHandler 16DC  
                                                strcpy@src 0071  
                                         ??_I2C1_DO_RX_ACK 0071  
                               ??_LIGHTBLUE_GetButtonValue 0071  
                                  _I2C1_CallbackReturnStop 162F  
                             __end_of_EUSART1_Transmit_ISR 0B1E  
                          ??_LIGHTBLUE_ParseIncomingPacket 002B  
                                              _serialIndex 0055  
                                     _RN487X_SetSystemMode 17CC  
                                     _I2C1_DO_ADDRESS_NACK 0C4A  
                                   ?_I2C1_MasterDisableIrq 0070  
                             i2c_read2ByteRegister@address 002A  
                    __end_of_RN487X_SetAsyncMessageHandler 09FC  
                            _RN487X_SetAsyncMessageHandler 09E4  
                                   wr2RegCompleteHandler@p 0078  
           EUSART1_SetFramingErrorHandler@interruptHandler 0071  
           EUSART2_SetFramingErrorHandler@interruptHandler 0071  
                           ?_EUSART1_SetTxInterruptHandler 0071  
                                 RN487X_SetSystemMode@mode 0071  
                           ?_EUSART2_SetRxInterruptHandler 0071  
                        LIGHTBLUE_ParseIncomingPacket@data 0051  
                                       _eusart1RxLastError 0056  
                           RN487X_ReadDefaultResponse@resp 0073  
                                            __pstringtext1 1000  
                                            __pstringtext2 1028  
                                            __pstringtext3 1048  
                                            __pstringtext4 1068  
                                            __pstringtext5 1832  
                                            __pstringtext6 1834  
                                            __pstringtext7 180C  
                                            __pstringtext8 1828  
                                            __pstringtext9 182D  
                                      _EUSART2_Receive_ISR 0F0E  
                          LIGHTBLUE_SetErrorLedValue@value 0026  
                                 __end_of_I2C1_SetCallback 0B65  
                                               _SSP1DATPPS 1EC6  
                                               _SSP1CLKPPS 1EC5  
                                          ??_I2C1_DO_RESET 0071  
                   __end_of_IOCAF6_DefaultInterruptHandler 162F  
                           _IOCAF6_DefaultInterruptHandler 162E  
                                     _I2C1_MasterOperation 0AB9  
                                          _TMR0_Initialize 0917  
                                     RN487X_SendCmd@cmdLen 0077  
                                                 strncmp@l 0071  
                                                 strncmp@n 0075  
                                                 strncmp@r 0073  
                        _LIGHTBLUE_ParseIncomingPacket$417 002D  
                        _LIGHTBLUE_ParseIncomingPacket$418 002F  
                        _LIGHTBLUE_ParseIncomingPacket$419 0031  
                                    ?_I2C1_MasterGetRxData 0070  
                                 i2c_read2ByteRegister@reg 0024  
                                              _returnReset 0000  
                                                 strstr@nl 0022  
                                               _TX1STAbits 011E  
                                RN487X_ReadMsg@expectedMsg 0073  
                                               _TX2STAbits 0A1E  
                                              ?_IOCAF6_ISR 0070  
                                    ??_EUSART1_Receive_ISR 0071  
                           __end_of_PIN_MANAGER_Initialize 06A0  
                             ?_LIGHTBLUE_TemperatureSensor 0070  
                          ??_EUSART2_SetTxInterruptHandler 0073  
                            __end_of_rd1RegCompleteHandler 086B  
                                     ?_EUSART2_Receive_ISR 0070  
                                       _eusart2RxLastError 005D  
                                      RN487X_SendCmd@index 0079  
                         __end_of_rn487x_PrintMessageStart 0D20  
                                          _PIN_MANAGER_IOC 1735  
                         RN487X_ReadDefaultResponse@status 0076  
                             ??_RN487X_ReadDefaultResponse 0073  
                            __end_of_wr1RegCompleteHandler 085A  
                                    _do_I2C_SEND_ADR_WRITE 0000  
                                  ??_EUSART1_RxDataHandler 0070  
                                     _do_I2C_SEND_ADR_READ 0000  
                         __end_of_LIGHTBLUE_UpdateErrorLed 0A7F  
                                    ?_RN487X_SetSystemMode 0071  
                        _EUSART2_RxDefaultInterruptHandler 0154  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
                               LIGHTBLUE_SplitWord@payload 007B  
                                   RN487X_IndicateRx@value 0071  
